settings
{
	modes
	{
		Skirmish

		General
		{
			Limit Roles: 1 Tank 2 Offense 2 Support
			Respawn As Random Hero: On
		}
	}

	heroes
	{
		General
		{
			enabled heroes
			{
				Ana
			}
		}
	}
}

variables
{
	player:
		0: Postion
		1: Speed
}

rule("Altitude Finder - Made By Spiderman318")
{
	event
	{
		Player Joined Match;
		All;
		All;
	}

	actions
	{
		Create HUD Text(Event Player, Custom String("{0} - Up\n{1} - Down\n{2}\nWASD / Joystick Movement", Input Binding String(Button(
			Jump)), Input Binding String(Button(Crouch)), Custom String(
			"{0} - Increase Speed\n{1} - Decrease Speed\n{2} - Reset Speed (5.5m/s)", Input Binding String(Button(Ability 2)),
			Input Binding String(Button(Ability 1)), Input Binding String(Button(Interact)))), Null, Null, Left, 0, Color(White), Color(
			White), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Event Player, Custom String("Altitude Of - {0}\nRay Cast - {1}", Update Every Frame(Altitude Of(Event Player)),
			Y Component Of(Event Player.Postion) - Y Component Of(Ray Cast Hit Position(Event Player.Postion,
			Event Player.Postion + Vector(0, -9999, 0), Null, Event Player, False))), Null, Null, Top, 0, Color(White), Color(White),
			Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Event Player, Custom String("Postion - {0}\nSpeed - {1}\nResurrect - {2}", Event Player.Postion,
			Event Player.Speed, Input Binding String(Button(Reload))), Null, Null, Right, 0, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Create HUD Text(Event Player, Null, Custom String("(Altitude Will Reset On Sky Boxs, Ray Cast Won't)"), Null, Top, 0, Color(White),
			Color(White), Color(White), Visible To and String, Default Visibility);
		Start Forcing Player Position(Event Player, Event Player.Postion, True);
		Start Facing(Event Player, Forward, 100, To World, Direction and Turn Rate);
		Start Camera(Event Player, Event Player.Postion, Update Every Frame(Event Player.Postion) + Vector(0, -1, 0.100), 0);
		Event Player.Postion = Objective Position(0);
		Event Player.Speed = 5.500;
		Chase Player Variable At Rate(Event Player, Postion, Event Player.Postion + Vector(0, Event Player.Speed * (Is Button Held(
			Event Player, Button(Jump)) ? 1 : (Is Button Held(Event Player, Button(Crouch)) ? -1 : 0)), 0) + Throttle Of(Event Player)
			* Magnitude Of(Throttle Of(Event Player)), Event Player.Speed, Destination and Rate);
		Chase Player Variable At Rate(Event Player, Speed, Is Button Held(Event Player, Button(Interact)) ? 5.500 : Event Player.Speed + (
			Is Button Held(Event Player, Button(Ability 2)) ? 0.100 : (Is Button Held(Event Player, Button(Ability 1)) ? -0.100 : 0)),
			9999, Destination and Rate);
		Disallow Button(Event Player, Button(Primary Fire));
		Disallow Button(Event Player, Button(Secondary Fire));
		Disallow Button(Event Player, Button(Ultimate));
		Disallow Button(Event Player, Button(Melee));
		Set Ability 1 Enabled(Event Player, False);
		Set Ability 2 Enabled(Event Player, False);
		Set Invisible(Event Player, All);
		While(Has Spawned(Event Player));
			Wait Until(Is Dead(Event Player), 99999);
			Wait Until(Is Alive(Event Player) || Is Button Held(Event Player, Button(Reload)), 99999);
			Resurrect(Event Player);
			Wait(1, Ignore Condition);
		End;
	}
}
