settings
{
	main
	{
		Mode Name: "Orisa Halt! - 1XZ6M2"
	}

	modes
	{
		Control
		{
			Limit Roles: 1 Tank 2 Offense 2 Support
		}

		Escort
		{
			Limit Roles: 1 Tank 2 Offense 2 Support
		}

		Hybrid
		{
			Limit Roles: 1 Tank 2 Offense 2 Support
		}

		Push
		{
			Limit Roles: 1 Tank 2 Offense 2 Support
		}
	}

	extensions
	{
		Beam Effects
		Energy Explosion Effects
		Explosion Sounds
	}
}

variables
{
	player:
		0: Halt_Pos
		1: Halt_Stats
		2: Halt_Targets
		3: Pull_To
		4: Pull_Pos
}

rule("Setup Player")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create Effect(Filtered Array(All Players(Team Of(Event Player)), Event Player.Halt_Stats[2] == True), Sphere, Color(Lime Green),
			Event Player.Halt_Pos, 0.500, Visible To Position and Radius);
		Create Effect(Filtered Array(All Players(Opposite Team Of(Team Of(Event Player))), Event Player.Halt_Stats[2] == True), Sphere,
			Color(Red), Event Player.Halt_Pos, 0.500, Visible To Position and Radius);
		Create Beam Effect(Filtered Array(All Players(All Teams), Entity Exists(Event Player.Halt_Targets[0])), Orisa Halt Tendril Beam,
			Event Player.Halt_Pos, Event Player.Halt_Targets[0], Team Of(Event Player) == Team 1 ? Color(Team 1) : Color(Team 2),
			Visible To Position Radius and Color);
		Create Beam Effect(Filtered Array(All Players(All Teams), Entity Exists(Event Player.Halt_Targets[1])), Orisa Halt Tendril Beam,
			Event Player.Halt_Pos, Event Player.Halt_Targets[1], Team Of(Event Player) == Team 1 ? Color(Team 1) : Color(Team 2),
			Visible To Position Radius and Color);
		Create Beam Effect(Filtered Array(All Players(All Teams), Entity Exists(Event Player.Halt_Targets[2])), Orisa Halt Tendril Beam,
			Event Player.Halt_Pos, Event Player.Halt_Targets[2], Team Of(Event Player) == Team 1 ? Color(Team 1) : Color(Team 2),
			Visible To Position Radius and Color);
		Create Beam Effect(Filtered Array(All Players(All Teams), Entity Exists(Event Player.Halt_Targets[3])), Orisa Halt Tendril Beam,
			Event Player.Halt_Pos, Event Player.Halt_Targets[3], Team Of(Event Player) == Team 1 ? Color(Team 1) : Color(Team 2),
			Visible To Position Radius and Color);
		Create Beam Effect(Filtered Array(All Players(All Teams), Entity Exists(Event Player.Halt_Targets[4])), Orisa Halt Tendril Beam,
			Event Player.Halt_Pos, Event Player.Halt_Targets[4], Team Of(Event Player) == Team 1 ? Color(Team 1) : Color(Team 2),
			Visible To Position Radius and Color);
		Chase Player Variable At Rate(Event Player, Pull_Pos, Event Player.Pull_To, 20, Destination and Rate);
	}
}

rule("Use Halt!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		Set Primary Fire Enabled(Event Player, False);
		Set Secondary Fire Enabled(Event Player, False);
		Set Ability 1 Enabled(Event Player, False);
		Set Ability 2 Enabled(Event Player, False);
		Disallow Button(Event Player, Button(Ultimate));
		Set Melee Enabled(Event Player, False);
		Set Reload Enabled(Event Player, False);
		Cancel Primary Action(Event Player);
		Wait(0.100, Ignore Condition);
		Set Primary Fire Enabled(Event Player, True);
		Set Secondary Fire Enabled(Event Player, True);
		Set Ability 1 Enabled(Event Player, True);
		Set Ability 2 Enabled(Event Player, True);
		Allow Button(Event Player, Button(Ultimate));
		Set Melee Enabled(Event Player, True);
		Set Reload Enabled(Event Player, True);
		Event Player.Halt_Pos = Eye Position(Event Player);
		Event Player.Halt_Stats[0] = Facing Direction Of(Event Player);
		Event Player.Halt_Stats[1] = 8;
		Event Player.Halt_Stats[2] = True;
		Chase Player Variable At Rate(Event Player, Halt_Pos, Event Player.Halt_Pos + Event Player.Halt_Stats[0], 25,
			Destination and Rate);
		"Wait Until After Used To Trigger Cooldown"
		Wait Until(Event Player.Halt_Stats[2] == False, 99999);
		"Cooldown"
		Wait(6, Ignore Condition);
	}
}

rule("Halt! Targets")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.Halt_Pos != Null;
		Event Player.Halt_Stats[2] == True;
	}

	actions
	{
		Event Player.Halt_Targets = Filtered Array(Players Within Radius(Event Player.Halt_Pos, 5, Opposite Team Of(Team Of(Event Player)),
			Surfaces And Enemy Barriers), Is Alive(Current Array Element) && ((Is Duplicating(Current Array Element)
			? Hero Being Duplicated(Current Array Element) : Hero Of(Current Array Element)) != Hero(Sombra) || Is Firing Secondary(
			Current Array Element) || !Is Using Ability 1(Current Array Element)));
		Event Player.Halt_Stats[1] -= 0.100;
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("Halt! Trigger")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.Halt_Pos != Null;
		Is True For Any(Array(Ray Cast Hit Position(Event Player.Halt_Pos, Event Player.Halt_Pos + Event Player.Halt_Stats[0] * 1.750,
			Null, All Players(All Teams), False) != Event Player.Halt_Pos + Event Player.Halt_Stats[0] * 1.750,
			Event Player.Halt_Stats[1] == 0, Is Button Held(Event Player, Button(Secondary Fire))), Current Array Element) == True;
	}

	actions
	{
		Stop Chasing Player Variable(Event Player, Halt_Pos);
		Event Player.Halt_Stats[2] = False;
		Play Effect(All Players(All Teams), Orisa Halt Implosion Effect, Team Of(Event Player) == Team 1 ? Color(Team 1) : Color(Team 2),
			Event Player.Halt_Pos, 1);
		Play Effect(All Players(All Teams), Orisa Halt Implosion Sound, Color(White), Event Player.Halt_Pos, 100);
		Wait(0.450, Ignore Condition);
		Stop Assist(Event Player.Halt_Stats[3]);
		Set Environment Credit Player(Event Player.Halt_Targets, Event Player);
		Start Assist(Event Player, Event Player.Halt_Targets, None);
		Event Player.Halt_Stats[3] = Last Assist ID;
		Event Player.Halt_Targets.Pull_To = Event Player.Halt_Pos;
		Wait(3, Restart When True);
		Stop Assist(Event Player.Halt_Stats[3]);
	}
}

rule("Halt! Pull")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.Pull_To != Null;
	}

	actions
	{
		Event Player.Pull_Pos = Position Of(Event Player);
		Set Status(Event Player, Null, Rooted, 9999);
		Start Forcing Player Position(Event Player, Event Player.Pull_Pos, True);
		Wait Until(Event Player.Pull_Pos == Event Player.Pull_To, 0.250);
		Stop Forcing Player Position(Event Player);
		Apply Impulse(Event Player, Velocity Of(Event Player) * -1, 0.001, To World, Cancel Contrary Motion);
		Clear Status(Event Player, Rooted);
		Modify Player Variable(Filtered Array(All Players(Opposite Team Of(Team Of(Event Player))),
			Current Array Element.Halt_Stats[2] == False && Array Contains(Current Array Element.Halt_Targets, Event Player)),
			Halt_Targets, Remove From Array By Value, Event Player);
		Set Move Speed(Event Player, 30);
		Wait(0.650, Ignore Condition);
		Set Move Speed(Event Player, 100);
		Event Player.Pull_To = Null;
	}
}
