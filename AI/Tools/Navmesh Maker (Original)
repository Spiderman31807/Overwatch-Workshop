settings
{
	main
	{
		Description: "Comes with All 3v3, FFA And\nAssault Maps Pre-Done"
		Mode Name: "Pathfind Node Maker"
	}

	lobby
	{
		Max Team 1 Players: 1
		Max Team 2 Players: 1
	}

	modes
	{
		Assault
		{
			enabled maps
			{
				Hanamura 972777519512068154
			}
		}

		Control
		{
			enabled maps
			{
			}
		}

		Escort
		{
			enabled maps
			{
			}
		}

		Hybrid
		{
			enabled maps
			{
			}
		}

		General
		{
			Allow Hero Switching: Off
			Game Mode Start: Manual
			Hero Limit: Off
			Respawn As Random Hero: On
		}
	}

	heroes
	{
		General
		{
			enabled heroes
			{
				Soldier: 76
			}
		}
	}
}

variables
{
	global:
		0: Path_Nodes
		1: Healthkits
		2: Node_Type
		3: Effects
		4: Node_Types
		5: Objective1_Node
		6: Objective2_Node
		7: Host_Facing
		8: Chokepoint
		46: Objective1_Nest
		47: Objective2_Nest
		66: Objective1_Choke_Group
		67: Objective2_Choke_Group
}

subroutines
{
	0: Hanamura
	1: Horizon
	2: Paris
	3: Temple_of_Anubus
	4: Volskaya
}

rule("Host Facing")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Wait(0.100, Ignore Condition);
		Global.Host_Facing = Ray Cast Hit Position(Eye Position(Host Player), Eye Position(Host Player) + Facing Direction Of(Host Player)
			* 15, Null, All Players(All Teams), False);
		Loop;
	}
}

rule("Nodes Setup")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Empty Array;
		Global.Healthkits = Empty Array;
		Global.Objective1_Node = Empty Array;
		Global.Objective2_Node = Empty Array;
		Global.Objective1_Nest = Empty Array;
		Global.Objective2_Nest = Empty Array;
		Global.Objective1_Choke_Group = Empty Array;
		Global.Objective2_Choke_Group = Empty Array;
		Global.Chokepoint = Empty Array;
	}
}

rule("Next Node Type")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Is Dummy Bot(Event Player) != True;
	}

	actions
	{
		If(Global.Node_Type < 8);
			Global.Node_Type += 1;
		Else;
			Global.Node_Type = 0;
		End;
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(0.100, Ignore Condition);
	}
}

rule("Previous Node Type")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Is Dummy Bot(Event Player) != True;
	}

	actions
	{
		If(Global.Node_Type > 0);
			Global.Node_Type -= 1;
		Else;
			Global.Node_Type = 8;
		End;
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(0.100, Ignore Condition);
	}
}

rule("Setup Up Player In Edit Mode")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
		Is Dummy Bot(Event Player) != True;
	}

	actions
	{
		Disallow Button(Event Player, Button(Interact));
		Set Reload Enabled(Event Player, False);
		Set Primary Fire Enabled(Event Player, False);
		Set Secondary Fire Enabled(Event Player, False);
		Set Status(Event Player, Null, Phased Out, 9999);
	}
}

rule("Teleport Forward")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Dummy Bot(Event Player) != True;
	}

	actions
	{
		Teleport(Event Player, Position Of(Event Player) + Facing Direction Of(Event Player) * 5);
		Wait(0.200, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("Add Chokepoint Nodes")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 8;
	}

	actions
	{
		Modify Global Variable(Chokepoint, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Objective 1 Nodes")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 2;
	}

	actions
	{
		Modify Global Variable(Objective1_Node, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Objective 2 Nodes")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 3;
	}

	actions
	{
		Modify Global Variable(Objective2_Node, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Objective 1 Nest")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 4;
	}

	actions
	{
		Modify Global Variable(Objective1_Nest, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Objective 2 Nest")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 5;
	}

	actions
	{
		Modify Global Variable(Objective2_Nest, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Objective 1 Choke")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 6;
	}

	actions
	{
		Modify Global Variable(Objective1_Choke_Group, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Objective 2 Choke")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 7;
	}

	actions
	{
		Modify Global Variable(Objective2_Choke_Group, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Pathfinder Nodes")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 0;
	}

	actions
	{
		Modify Global Variable(Path_Nodes, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Add Medkit Nodes")
{
	event
	{
		Ongoing - Each Player;
		All;
		Soldier: 76;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Is Dummy Bot(Event Player) != True;
		Global.Node_Type == 1;
	}

	actions
	{
		Modify Global Variable(Healthkits, Append To Array, Evaluate Once(Eye Position(Event Player)));
		Play Effect(All Players(All Teams), Buff Impact Sound, Color(White), Event Player, 50);
		Wait(1, Ignore Condition);
	}
}

rule("Global")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Node_Types = Array(Custom String("Path"), Custom String("Healthkit"), Custom String("Objective 1"), Custom String(
			"Objective 2"), Custom String("Objective 1 Nest"), Custom String("Objective 2 Nest"), Custom String("Objective 1 Choke"),
			Custom String("Objective 2 Choke"), Custom String("Chokepoint"));
		Create HUD Text(All Players(All Teams), Custom String("Blue = Both Ways"), Null, Null, Left, 0, Color(White), Color(White), Color(
			White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("Orange = Only Down"), Null, Null, Left, 0, Color(White), Color(White),
			Color(White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("Red = No Ways"), Null, Null, Left, 0, Color(White), Color(White), Color(
			White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("{0} To Teleport Forward", Input Binding String(Button(Interact))), Null,
			Null, Right, 6, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("{0} To Place {1} Node", Input Binding String(Button(Reload)),
			Global.Node_Types[Global.Node_Type]), Null, Null, Top, 5, Color(White), Color(White), Color(White), Visible To and String,
			Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("{0} Previous Node", Input Binding String(Button(Secondary Fire))), Null,
			Null, Right, 4, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("{0} Next Node", Input Binding String(Button(Primary Fire))), Null, Null,
			Right, 5, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("Objective Index {0} | Effects {1}/100", Objective Index, Entity Count,
			Entity Count), Null, Null, Top, 4, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Create Effect(All Players(All Teams), Orb, Color(Yellow), First Of(Sorted Array(Global.Healthkits, Distance Between(Host Player,
			Current Array Element))), 1, Visible To Position and Radius);
		Create Beam Effect(Host Player, Bad Beam, First Of(Sorted Array(Global.Path_Nodes, Distance Between(Global.Host_Facing,
			Current Array Element))), Position Of(Host Player), Y Component Of(World Vector Of(Vector(0, 2.550, 0), Host Player,
			Rotation And Translation)) > Y Component Of(First Of(Sorted Array(Global.Path_Nodes, Distance Between(Global.Host_Facing,
			Current Array Element)))) && Y Component Of(World Vector Of(Vector(0, 0.550, 0), Host Player, Rotation And Translation))
			< Y Component Of(First Of(Sorted Array(Global.Path_Nodes, Distance Between(Global.Host_Facing, Current Array Element))))
			? Color(Aqua) : (Y Component Of(World Vector Of(Vector(0, 2.550, 0), Host Player, Rotation And Translation)) > Y Component Of(
			First Of(Sorted Array(Global.Path_Nodes, Distance Between(Global.Host_Facing, Current Array Element)))) ? Color(Orange)
			: Color(Red)), Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Sorted Array(Append To Array(Global.Objective1_Node,
			Global.Objective2_Node), Distance Between(Host Player, Current Array Element))[Evaluate Once(Global.Effects)], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Sorted Array(Append To Array(Global.Objective1_Nest,
			Global.Objective2_Nest), Distance Between(Host Player, Current Array Element))[Evaluate Once(Global.Effects)], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Violet), Sorted Array(Append To Array(Global.Objective1_Choke_Group,
			Global.Objective2_Choke_Group), Distance Between(Host Player, Current Array Element))[Evaluate Once(Global.Effects)], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), First Of(Sorted Array(Global.Chokepoint, Distance Between(Host Player,
			Current Array Element))), 1, Visible To Position and Radius);
		For Global Variable(Effects, 0, 10, 1);
			Create Effect(All Players(All Teams), Orb, Color(Gray), Sorted Array(Global.Path_Nodes, Distance Between(Host Player,
				Current Array Element))[Evaluate Once(Global.Effects)], 1, Visible To Position and Radius);
			Wait(0.100, Ignore Condition);
		End;
		Create Beam Effect(Host Player, Bad Beam, Last Of(Global.Path_Nodes), Position Of(Host Player), Y Component Of(World Vector Of(
			Vector(0, 2.550, 0), Host Player, Rotation And Translation)) > Y Component Of(Last Of(Global.Path_Nodes)) && Y Component Of(
			World Vector Of(Vector(0, 0.550, 0), Host Player, Rotation And Translation)) < Y Component Of(Last Of(Global.Path_Nodes))
			? Color(Aqua) : (Y Component Of(World Vector Of(Vector(0, 2.550, 0), Host Player, Rotation And Translation)) > Y Component Of(
			Last Of(Global.Path_Nodes)) ? Color(Orange) : Color(Red)), Visible To Position Radius and Color);
	}
}

disabled rule("Black Forest")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(31.080, 13.550, -23.526), Vector(29.512, 13.550, -18.221), Vector(25.660, 13.550, -24.888),
			Vector(23.896, 13.612, -19.561), Vector(29.899, 14.550, -12.191), Vector(31.749, 15.471, -12.354), Vector(34.236, 16.327,
			-10.168), Vector(34.222, 17.239, -8.355), Vector(34.187, 18.176, -6.484), Vector(32.759, 18.550, -2.592), Vector(27.531,
			18.550, -2.854), Vector(15.792, 18.533, -2.400), Vector(15.892, 18.549, 2.512), Vector(25.571, 18.503, -17.101), Vector(12.407,
			19.110, -5.190), Vector(13.437, 18.138, -6.526), Vector(14.470, 17.144, -7.886), Vector(15.412, 16.220, -9.090), Vector(16.330,
			15.309, -10.419), Vector(17.312, 14.342, -11.741), Vector(18.214, 13.472, -12.715), Vector(20.294, 12.869, -14.368), Vector(
			27.906, 13.719, -10.503), Vector(22.416, 12.822, -7.869), Vector(21.225, 10.900, -0.111), Vector(21.695, 10.549, 5.728),
			Vector(22.062, 11.097, 10.287), Vector(21.846, 12.057, 12.209), Vector(21.445, 12.722, 16.285), Vector(21.200, 11.897, -1.852),
			Vector(11.705, 18.549, 5.056), Vector(16.056, 18.549, 7.703), Vector(8.745, 18.549, 7.665), Vector(7.910, 18.549, 2.431),
			Vector(1.612, 18.550, 2.120), Vector(1.847, 18.550, 8.053), Vector(-1.306, 19.465, 4.804), Vector(-3.271, 19.461, 5.204),
			Vector(-3.259, 19.327, -4.500), Vector(-3.390, 19.356, 14.265), Vector(-8.506, 18.620, 4.791), Vector(-9.845, 17.709, 4.684),
			Vector(-11.088, 16.848, 4.684), Vector(-12.341, 15.982, 4.639), Vector(-13.616, 15.097, 4.630), Vector(-14.631, 14.200, 4.578),
			Vector(16.860, 18.541, 12.357), Vector(14.268, 18.335, 13.913), Vector(12.927, 18.810, 16.207), Vector(13.911, 17.847, 17.391),
			Vector(14.714, 16.891, 18.676), Vector(15.631, 15.962, 19.837), Vector(16.578, 15.019, 21.007), Vector(17.081, 14.423, 21.807),
			Vector(17.715, 13.482, 22.496), Vector(21.246, 12.924, 21.075), Vector(20.275, 12.998, 26.668), Vector(25.450, 13.252, 26.914),
			Vector(28.370, 13.746, 22.315), Vector(30.353, 14.739, 22.550), Vector(34.457, 15.737, 21.372), Vector(34.391, 16.704, 19.463),
			Vector(34.278, 17.600, 17.676), Vector(33.767, 18.550, 12.475), Vector(27.427, 18.550, 12.585), Vector(26.550, 18.519, 25.395),
			Vector(21.158, 13.422, 34.173), Vector(28.046, 13.550, 37.194), Vector(32.151, 13.550, 29.761), Vector(32.546, 13.550, 35.963),
			Vector(3.021, 18.765, 5.142), Vector(4.226, 18.755, 6.850), Vector(6.519, 18.755, 5.131), Vector(4.866, 18.765, 3.333), Vector(
			4.763, 13.827, 5.156), Vector(3.934, 14.050, -3.816), Vector(-2.465, 14.130, -0.478), Vector(-2.263, 14.355, 10.110), Vector(
			4.037, 14.050, 13.765), Vector(7.236, 13.781, 20.934), Vector(11.701, 13.062, 24.559), Vector(3.613, 13.602, 25.586), Vector(
			-2.802, 14.487, 20.252), Vector(-6.676, 14.548, 28.351), Vector(-4.046, 14.547, 26.824), Vector(-4.556, 13.588, 31.994),
			Vector(-3.721, 12.731, 33.470), Vector(-2.002, 12.611, 36.493), Vector(15.563, 12.772, 30.683), Vector(-15.558, 14.538,
			25.674), Vector(-15.264, 14.994, 32.330), Vector(-14.319, 15.940, 33.967), Vector(-11.114, 16.845, 35.532), Vector(-9.455,
			17.779, 34.679), Vector(-7.816, 18.745, 33.653), Vector(-5.201, 19.550, 31.957), Vector(-7.003, 19.550, 28.414), Vector(-3.258,
			19.634, 26.172), Vector(-6.965, 19.610, 18.466), Vector(-17.325, 19.648, 24.004), Vector(-14.937, 19.550, 27.564), Vector(
			-9.141, 19.550, 24.378), Vector(8.190, 13.976, -10.045), Vector(11.726, 13.064, -14.720), Vector(17.702, 13.022, -20.929),
			Vector(16.219, 12.820, -15.941), Vector(10.119, 12.213, -21.956), Vector(-2.711, 12.621, -26.259), Vector(-4.496, 13.427,
			-22.624), Vector(-5.338, 14.248, -21.208), Vector(-7.343, 14.614, -18.712), Vector(-3.751, 14.507, -16.530), Vector(4.337,
			13.512, -14.656), Vector(-0.103, 14.180, -10.529), Vector(-16.214, 14.615, -16.516), Vector(-14.963, 15.455, -23.360), Vector(
			-14.122, 16.382, -25.032), Vector(-10.904, 17.234, -25.034), Vector(-9.103, 18.233, -24.158), Vector(-7.389, 19.196, -23.284),
			Vector(-4.750, 19.550, -21.677), Vector(-6.978, 19.550, -18.605), Vector(-9.740, 19.550, -14.332), Vector(-15.310, 19.550,
			-17.919), Vector(-17.402, 19.657, -14.366), Vector(-7.130, 19.607, -8.620), Vector(-3.267, 19.630, -16.181), Vector(-6.162,
			15.266, 9.887), Vector(-3.966, 14.489, 9.919), Vector(-5.575, 15.237, 0.156), Vector(-3.870, 14.717, -0.219), Vector(-5.335,
			14.535, -6.384), Vector(-14.259, 14.727, -9.782), Vector(-13.377, 14.830, -3.550), Vector(-17.707, 14.488, 1.645), Vector(
			-22.964, 14.131, -6.203), Vector(-23.891, 13.643, -0.004), Vector(-5.825, 14.552, 16.204), Vector(-11.149, 14.905, 11.301),
			Vector(-15.392, 14.805, 19.093), Vector(-22.214, 14.236, 16.813), Vector(-18.634, 14.278, 10.573), Vector(-24.717, 13.701,
			10.480));
		Global.Healthkits = Array(Vector(-199.113, 2.550, -39.564));
		Global.Objective1_Node = Array(Vector(-18.533, 14.418, 9.593), Vector(-22.271, 13.626, 9.509), Vector(-25.680, 13.752, 9.464),
			Vector(-25.390, 13.641, 6.464), Vector(-22.361, 13.641, 5.718), Vector(-18.552, 13.629, 5.642), Vector(-18.179, 13.838, 2.729),
			Vector(-22.272, 13.641, 2.858), Vector(-25.491, 13.641, 3.433));
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Necropolis")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(0.925, 4.552, 23.103), Vector(11.869, 4.557, 18.985), Vector(14.115, 3.788, 17.135), Vector(
			15.573, 2.812, 15.823), Vector(19.438, 2.550, 11.581), Vector(23.268, 3.425, 15.339), Vector(24.955, 4.406, 17.015), Vector(
			26.520, 5.346, 18.642), Vector(28.135, 6.285, 20.266), Vector(30.146, 6.562, 22.436), Vector(23.795, 6.562, 27.848), Vector(
			21.742, 7.479, 25.523), Vector(20.412, 8.388, 24.174), Vector(19.271, 9.216, 22.873), Vector(15.646, 9.846, 20.841), Vector(
			13.479, 10.408, 23.236), Vector(12.118, 11.367, 24.495), Vector(-0.024, 11.572, 26.882), Vector(-2.253, 10.619, 26.925),
			Vector(-10.048, 9.873, 27.803), Vector(-11.955, 8.957, 27.824), Vector(-19.488, 8.275, 27.879), Vector(-21.291, 7.359, 27.962),
			Vector(-22.980, 6.506, 27.689), Vector(-26.302, 5.620, 24.732), Vector(-22.190, 4.687, 22.527), Vector(-12.495, 4.558, 23.038),
			Vector(-12.384, 3.715, 19.038), Vector(-12.309, 2.735, 17.074), Vector(-12.393, 2.550, 13.464), Vector(-16.771, 2.550, 13.319),
			Vector(-27.943, 4.936, 21.176), Vector(-32.221, 4.550, 13.585), Vector(-23.602, 3.243, 15.984), Vector(-27.743, 4.254, 17.324),
			Vector(-32.078, 4.160, 8.931), Vector(-30.799, 3.550, 5.310), Vector(-25.816, 4.289, 5.870), Vector(-22.804, 4.550, 3.504),
			Vector(-22.708, 4.550, -0.009), Vector(-23.010, 4.550, -3.775), Vector(-26.729, 3.832, -6.149), Vector(-30.738, 3.550, -6.398),
			Vector(-32.235, 4.511, -9.710), Vector(-30.626, 3.550, 0.034), Vector(-35.486, 4.439, 0.198), Vector(-43.296, 5.345, 0.068),
			Vector(-45.260, 6.325, 0.051), Vector(-47.937, 6.550, -0.104), Vector(-47.713, 7.517, -3.748), Vector(-47.453, 7.512, 3.714),
			Vector(-44.566, 8.414, 4.962), Vector(-42.691, 9.350, 5.141), Vector(-40.766, 10.312, 5.374), Vector(-35.162, 10.551, 6.371),
			Vector(-34.312, 10.550, 0.606), Vector(-44.686, 8.356, -5.196), Vector(-42.838, 9.278, -5.281), Vector(-41.069, 10.161,
			-5.330), Vector(-34.806, 10.550, -5.940), Vector(-32.202, 10.550, -4.628), Vector(-29.500, 10.550, -0.147), Vector(-32.363,
			10.550, 4.222), Vector(-27.599, 11.024, -11.172), Vector(-27.314, 11.067, 11.465), Vector(-23.267, 11.366, 6.486), Vector(
			-21.648, 12.265, 5.907), Vector(-19.967, 12.528, 9.678), Vector(-23.611, 11.174, -7.046), Vector(-22.042, 12.045, -7.025),
			Vector(-20.348, 12.528, -10.002), Vector(-20.432, 12.528, -5.797), Vector(-20.138, 12.528, 4.937), Vector(-19.131, 4.495,
			0.039), Vector(-16.641, 3.570, 0.131), Vector(-14.625, 2.799, 0.288), Vector(-11.129, 2.555, 0.280), Vector(-12.582, 2.553,
			-8.440), Vector(-12.215, 2.550, -13.893), Vector(-16.880, 2.550, -13.663), Vector(-16.860, 1.566, -9.742), Vector(-16.804,
			0.634, -7.869), Vector(-16.734, -0.282, -6.045), Vector(-16.687, -1.217, -4.174), Vector(-16.745, -2.066, -2.474), Vector(
			-15.384, -2.450, -0.096), Vector(-16.742, -1.997, 2.612), Vector(-16.691, -1.061, 4.485), Vector(-16.709, -0.251, 6.108),
			Vector(-16.817, 0.597, 7.797), Vector(-16.706, 1.442, 9.493), Vector(-16.673, 2.296, 11.201), Vector(-10.065, -3.272, -0.002),
			Vector(-8.257, -4.174, 0.047), Vector(-3.430, -4.450, 0.133), Vector(3.345, -4.450, 0.136), Vector(10.461, -3.574, 0.180),
			Vector(12.585, -2.510, 0.215), Vector(11.733, -2.938, 0.164), Vector(14.188, -1.708, 0.282), Vector(15.969, -0.820, 0.281),
			Vector(18.977, -0.449, 0.084), Vector(19.073, 2.536, 7.710), Vector(19.105, 1.587, 5.781), Vector(19.136, 0.612, 3.831),
			Vector(18.972, -0.132, 2.343), Vector(19.437, 2.550, -8.325), Vector(19.433, 1.709, -6.023), Vector(19.485, 0.792, -4.186),
			Vector(19.348, -0.063, -2.477), Vector(24.578, 2.551, 7.930), Vector(29.066, 2.551, -0.171), Vector(12.907, 2.551, 12.157),
			Vector(4.456, 2.555, 12.797), Vector(-4.762, 2.555, 13.035), Vector(4.905, 2.555, 5.328), Vector(11.855, 2.549, 4.503), Vector(
			-5.161, 2.553, 5.199), Vector(-11.472, 2.553, 5.420), Vector(2.240, 4.550, -23.315), Vector(11.785, 4.561, -19.641), Vector(
			14.081, 3.798, -17.126), Vector(15.329, 2.865, -15.732), Vector(18.320, 2.549, -11.736), Vector(-12.490, 4.560, -23.093),
			Vector(-12.293, 3.599, -18.807), Vector(-12.308, 2.735, -17.074), Vector(-26.334, 5.278, -23.481), Vector(-30.696, 4.723,
			-17.916), Vector(-26.502, 4.337, -18.533), Vector(-24.186, 3.413, -16.360), Vector(-23.725, 6.136, -26.749), Vector(-21.972,
			7.020, -26.934), Vector(-20.199, 7.917, -27.037), Vector(-12.167, 8.842, -27.300), Vector(24.877, 2.550, -5.446), Vector(
			22.824, 2.862, -13.871), Vector(24.463, 3.780, -15.396), Vector(25.913, 4.609, -16.759), Vector(27.443, 5.509, -18.290),
			Vector(28.904, 6.352, -19.722), Vector(30.870, 6.562, -21.684), Vector(23.963, 6.562, -27.823), Vector(21.764, 7.352, -25.878),
			Vector(20.425, 8.272, -24.503), Vector(18.979, 9.249, -23.071), Vector(16.159, 9.846, -20.597), Vector(12.941, 10.777,
			-23.707), Vector(10.049, 11.571, -26.572), Vector(-4.577, 9.825, -26.880), Vector(-2.059, 10.722, -27.016), Vector(-10.032,
			9.882, -22.735), Vector(-5.375, 9.887, -22.186), Vector(-5.730, 9.887, -16.122), Vector(4.896, 11.571, -26.127), Vector(6.250,
			12.154, -15.437), Vector(-2.169, 12.154, -15.887), Vector(3.118, 13.056, -15.420), Vector(15.368, 9.848, -16.060), Vector(
			12.012, 9.848, -15.896), Vector(16.018, 9.849, 16.970), Vector(12.152, 9.849, 15.802), Vector(5.194, 11.572, 26.243), Vector(
			5.894, 12.154, 15.240), Vector(-1.579, 12.154, 15.514), Vector(2.252, 13.063, 15.217), Vector(-4.818, 9.885, 21.503), Vector(
			-5.652, 9.885, 16.171), Vector(-9.464, 10.143, 21.750));
		Global.Healthkits = Array();
		Global.Objective1_Node = Array(Vector(-11.829, 2.556, -4.534), Vector(-8.948, 2.560, -4.298), Vector(-5.949, 2.558, -4.575),
			Vector(-6.073, 2.556, -1.778), Vector(-9.045, 2.558, -1.854), Vector(-11.972, 2.554, -2.138), Vector(-12.132, 2.554, 1.116),
			Vector(-9.210, 2.556, 0.760), Vector(-6.106, 2.556, 0.879), Vector(-6.006, 2.554, 3.415), Vector(-8.876, 2.554, 3.449), Vector(
			-11.908, 2.552, 3.518));
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Castillo")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(-112.641, 34.117, 25.816), Vector(-103.978, 34.106, 33.746), Vector(-117.272, 34.106, 37.124),
			Vector(-110.297, 33.828, 39.355), Vector(-103.671, 33.857, 38.027), Vector(-96.296, 34.750, 37.937), Vector(-93.645, 33.783,
			32.715), Vector(-86.256, 34.106, 39.975), Vector(-81.522, 34.106, 46.966), Vector(-84.590, 34.114, 51.687), Vector(-81.570,
			34.121, 54.590), Vector(-74.734, 33.549, 53.041), Vector(-84.271, 34.112, 58.049), Vector(-78.562, 34.107, 62.707), Vector(
			-84.646, 34.106, 62.173), Vector(-86.826, 35.011, 62.562), Vector(-90.666, 35.106, 63.496), Vector(-91.719, 35.106, 56.278),
			Vector(-85.985, 34.108, 55.297), Vector(-93.462, 35.106, 49.151), Vector(-88.157, 34.237, 48.186), Vector(-94.496, 35.652,
			39.319), Vector(-92.857, 36.447, 40.450), Vector(-91.160, 37.415, 41.635), Vector(-89.870, 38.301, 42.581), Vector(-88.941,
			39.208, 43.876), Vector(-89.139, 40.180, 47.079), Vector(-95.385, 40.733, 42.313), Vector(-105.494, 41.106, 43.424), Vector(
			-114.786, 41.094, 45.500), Vector(-85.949, 40.191, 50.977), Vector(-85.526, 40.191, 55.434), Vector(-90.228, 40.191, 56.003),
			Vector(-80.975, 40.191, 54.009), Vector(-84.892, 40.191, 59.386), Vector(-84.105, 39.261, 66.618), Vector(-86.232, 40.179,
			65.098), Vector(-89.551, 40.786, 70.901), Vector(-100.146, 41.108, 72.981), Vector(-108.808, 41.096, 74.962), Vector(-114.110,
			40.106, 67.458), Vector(-114.151, 40.124, 60.542), Vector(-118.071, 40.196, 61.352), Vector(-116.006, 40.124, 60.564), Vector(
			-117.034, 40.106, 54.250), Vector(-129.447, 40.106, 52.560), Vector(-129.927, 39.245, 54.804), Vector(-127.251, 38.414,
			57.472), Vector(-125.491, 37.523, 57.853), Vector(-123.682, 36.582, 58.291), Vector(-121.227, 35.929, 62.441), Vector(-121.597,
			36.532, 67.347), Vector(-123.063, 37.474, 68.523), Vector(-124.497, 38.347, 69.499), Vector(-126.408, 39.235, 72.083), Vector(
			-124.137, 40.106, 74.756), Vector(-121.655, 40.107, 69.639), Vector(-123.051, 40.108, 55.910), Vector(-121.281, 36.203,
			56.588), Vector(-120.707, 36.117, 51.108), Vector(-121.464, 35.271, 43.408), Vector(-119.540, 34.528, 39.927), Vector(-114.940,
			35.575, 52.521), Vector(-110.574, 35.106, 53.620), Vector(-109.528, 35.108, 46.104), Vector(-109.570, 34.350, 43.806), Vector(
			-102.132, 35.106, 45.462), Vector(-102.835, 34.189, 42.201), Vector(-119.088, 36.203, 67.421), Vector(-116.574, 36.117,
			71.353), Vector(-111.938, 35.368, 67.572), Vector(-108.438, 35.106, 66.051), Vector(-114.735, 35.445, 78.943), Vector(-111.461,
			34.588, 80.075), Vector(-100.845, 34.117, 90.505), Vector(-107.234, 34.106, 85.209), Vector(-95.209, 34.282, 83.373), Vector(
			-99.565, 33.846, 78.390), Vector(-103.702, 34.106, 76.237), Vector(-103.931, 34.868, 73.524), Vector(-104.129, 35.106, 70.556),
			Vector(-97.174, 35.106, 69.604), Vector(-96.603, 34.134, 73.494), Vector(-90.366, 33.822, 77.961), Vector(-88.767, 34.737,
			75.284), Vector(-87.581, 35.548, 73.571), Vector(-86.765, 36.458, 71.405), Vector(-85.961, 37.322, 69.720), Vector(-85.173,
			38.315, 68.151), Vector(-84.398, 38.866, 67.149), Vector(-85.768, 33.780, 80.010), Vector(-79.281, 34.106, 68.308));
		Global.Healthkits = Array();
		Global.Objective1_Node = Array(Vector(-107.217, 34.849, 59.202), Vector(-106.541, 34.874, 55.778), Vector(-103.558, 34.872,
			53.836), Vector(-99.928, 34.870, 54.624), Vector(-97.572, 34.875, 57.912), Vector(-99.604, 34.873, 61.704), Vector(-103.124,
			34.875, 62.777), Vector(-105.967, 34.875, 61.394));
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Ecopoint: Antarctica")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(11.034, 9.585, 50.957), Vector(-1.072, 8.829, 54.376), Vector(-12.003, 8.550, 44.500), Vector(
			-6.992, 8.732, 39.033), Vector(8.657, 8.992, 41.979), Vector(6.377, 8.443, 36.619), Vector(-0.206, 8.811, 33.344), Vector(
			-7.582, 8.587, 26.293), Vector(-11.620, 8.618, 30.990), Vector(-4.982, 8.553, 22.439), Vector(-0.199, 8.950, 26.711), Vector(
			3.731, 8.549, 31.356), Vector(7.609, 8.282, 19.267), Vector(11.207, 8.631, 23.970), Vector(8.903, 8.567, 29.661), Vector(
			14.950, 8.970, 33.664), Vector(2.587, 8.382, 15.358), Vector(16.531, 9.941, 32.215), Vector(17.491, 10.859, 30.120), Vector(
			17.962, 11.776, 27.499), Vector(17.841, 12.674, 24.958), Vector(13.834, 13.359, 18.782), Vector(11.576, 13.359, 16.940),
			Vector(9.320, 13.086, 20.996), Vector(7.392, 13.094, 19.097), Vector(6.575, 13.032, 26.545), Vector(0.903, 13.170, 31.531),
			Vector(-4.599, 13.184, 26.180), Vector(-2.200, 13.050, 21.924), Vector(2.057, 13.184, 25.297), Vector(10.211, 13.550, 12.292),
			Vector(5.920, 13.550, 10.126), Vector(-0.653, 13.550, 9.902), Vector(2.990, 13.550, 12.285), Vector(-5.336, 13.550, 11.930),
			Vector(-10.378, 13.550, 13.804), Vector(-15.382, 13.550, 11.639), Vector(-15.375, 12.720, 15.911), Vector(-14.653, 11.748,
			17.854), Vector(-12.461, 10.774, 20.780), Vector(-11.256, 9.857, 22.172), Vector(-9.848, 8.935, 23.363), Vector(-4.049, 13.549,
			3.772), Vector(-7.024, 13.549, 3.981), Vector(-10.319, 13.551, 4.221), Vector(-11.202, 13.551, 7.529), Vector(-14.312, 13.626,
			5.963), Vector(-15.331, 13.551, 8.688), Vector(-19.386, 13.551, 8.242), Vector(-17.860, 13.638, 3.615), Vector(-19.558, 13.551,
			-0.098), Vector(-17.918, 13.638, -3.632), Vector(-19.257, 13.551, -7.654), Vector(-14.978, 13.551, -7.847), Vector(-15.088,
			13.649, -5.727), Vector(-10.633, 13.550, -7.814), Vector(-10.421, 13.550, -4.195), Vector(-12.082, 13.640, -3.563), Vector(
			-10.149, 13.551, -0.213), Vector(-12.272, 13.573, 1.798), Vector(-6.105, 13.550, 0.201), Vector(-6.099, 13.550, -4.075),
			Vector(-3.754, 13.547, -5.912), Vector(-3.918, 13.551, -0.253), Vector(-6.269, 13.551, -12.067), Vector(-15.525, 13.551,
			-12.147), Vector(-10.804, 13.549, -14.097), Vector(-14.917, 12.738, -15.878), Vector(-9.475, 8.610, -24.417), Vector(-11.041,
			9.514, -22.919), Vector(-12.323, 10.403, -21.687), Vector(-13.677, 11.344, -20.383), Vector(-15.022, 11.744, -17.861), Vector(
			-14.894, 12.450, -16.446), Vector(-31.098, 10.550, -0.097), Vector(-25.603, 11.391, -0.005), Vector(-23.729, 12.326, 0.050),
			Vector(-22.074, 13.155, 0.001), Vector(-31.102, 10.550, -5.936), Vector(-24.833, 9.608, -6.053), Vector(-22.959, 8.671,
			-5.958), Vector(-18.652, 8.550, -6.050), Vector(-19.273, 8.550, 6.316), Vector(-24.663, 9.526, 6.025), Vector(-26.377, 10.381,
			6.155), Vector(-30.909, 10.550, 6.071), Vector(-14.944, 8.817, 0.105), Vector(-14.781, 8.493, 10.358), Vector(-10.162, 8.012,
			16.169), Vector(-6.768, 8.544, 20.531), Vector(-2.455, 8.574, 15.588), Vector(-9.053, 8.550, 3.722), Vector(-8.300, 8.516,
			-4.112), Vector(-15.176, 8.585, -10.031), Vector(18.085, 13.550, 14.981), Vector(18.163, 12.657, 10.933), Vector(18.197,
			11.758, 9.131), Vector(18.207, 10.864, 7.347), Vector(18.136, 10.550, 3.772), Vector(23.068, 10.550, 4.654), Vector(23.046,
			9.772, 9.844), Vector(22.999, 8.825, 11.731), Vector(22.984, 7.563, 14.259), Vector(22.947, 8.308, 12.770), Vector(23.285,
			7.561, 16.509), Vector(18.485, 7.561, 16.785), Vector(11.373, 7.752, 19.476), Vector(7.708, 8.168, 15.078), Vector(18.040,
			7.014, 10.642), Vector(18.014, 6.103, 8.822), Vector(17.881, 5.550, 4.225), Vector(21.504, 4.941, 3.780), Vector(29.483, 4.705,
			3.565), Vector(29.344, 4.704, -4.179), Vector(21.327, 5.028, -4.219), Vector(17.864, 5.550, -5.222), Vector(13.795, 5.546,
			-3.749), Vector(16.038, 5.550, -0.246), Vector(13.729, 5.544, 4.228), Vector(11.571, 5.644, 0.072), Vector(28.243, 10.513,
			2.440), Vector(28.467, 10.513, -2.097), Vector(20.441, 10.550, 0.065), Vector(9.943, 13.410, 7.517), Vector(-1.634, 13.550,
			-10.235), Vector(1.980, 13.550, -12.257), Vector(5.878, 13.550, -10.160), Vector(10.188, 13.550, -12.298), Vector(10.352,
			13.401, -7.495), Vector(11.017, 13.359, -17.105), Vector(13.548, 13.359, -19.647), Vector(18.449, 12.857, -11.328), Vector(
			18.284, 11.986, -9.585), Vector(18.243, 11.113, -7.841), Vector(17.725, 10.550, -4.861), Vector(23.075, 10.550, -5.250),
			Vector(22.660, 7.566, -15.951), Vector(22.587, 8.448, -12.487), Vector(22.598, 9.421, -10.543), Vector(22.598, 10.381, -8.623),
			Vector(17.863, 7.566, -16.116), Vector(17.974, 6.524, -9.662), Vector(17.913, 7.261, -11.139), Vector(13.104, 7.575, -19.242),
			Vector(10.939, 8.519, -23.480), Vector(6.676, 8.599, -20.007), Vector(8.366, 7.972, -17.596), Vector(3.881, 8.260, -14.503),
			Vector(-0.972, 8.934, -27.343), Vector(3.805, 8.509, -32.203), Vector(8.767, 8.546, -29.767), Vector(14.647, 8.703, -34.686),
			Vector(16.253, 9.694, -32.686), Vector(17.116, 10.574, -30.834), Vector(17.470, 11.522, -28.211), Vector(17.108, 12.409,
			-25.549), Vector(16.210, 13.359, -22.386), Vector(7.860, 13.216, -19.015), Vector(9.435, 13.208, -20.841), Vector(2.495,
			13.175, -25.537), Vector(4.512, 13.175, -20.144), Vector(8.331, 13.165, -24.053), Vector(5.248, 13.034, -28.656), Vector(0.975,
			13.173, -31.261), Vector(-4.566, 13.176, -26.320), Vector(-1.474, 13.025, -22.416), Vector(11.393, 9.561, -51.349), Vector(
			8.084, 8.610, -40.321), Vector(-1.086, 8.821, -54.225), Vector(-12.535, 8.550, -44.199), Vector(-7.616, 8.641, -39.463),
			Vector(1.529, 8.702, -38.756), Vector(0.007, 8.764, -33.795), Vector(-5.978, 8.765, -27.815), Vector(-10.561, 8.806, -32.665),
			Vector(-5.139, 8.556, -23.015), Vector(-1.986, 8.614, -16.810), Vector(-8.813, 8.385, -17.990), Vector(-13.467, 7.892,
			-13.078), Vector(0.638, 7.903, -12.340), Vector(-6.037, 8.029, -4.128), Vector(-6.168, 8.069, 4.019), Vector(1.200, 7.919,
			12.438), Vector(9.750, 5.720, 4.884), Vector(8.851, 5.766, -5.681), Vector(1.810, 7.036, 8.815), Vector(-2.754, 7.294, 5.495),
			Vector(-2.631, 7.278, -4.631), Vector(5.201, 6.686, -7.604), Vector(5.931, 6.512, 5.368));
		Global.Healthkits = Array();
		Global.Objective1_Node = Array(Vector(2.639, 6.797, 3.672), Vector(-0.379, 6.990, 3.840), Vector(-2.846, 7.310, 1.295), Vector(
			-2.214, 7.226, -3.212), Vector(1.408, 6.865, -3.479), Vector(4.496, 6.689, -3.317), Vector(7.044, 6.174, -1.372), Vector(6.266,
			6.435, 2.288), Vector(4.238, 6.705, 3.682));
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Ayutthaya")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(18.689, 2.550, -119.377), Vector(12.323, 2.550, -112.237), Vector(17.462, 2.550, -106.281),
			Vector(24.125, 2.550, -111.791), Vector(26.398, 2.550, -98.845), Vector(10.042, 2.550, -99.347), Vector(11.572, 2.550,
			-88.960), Vector(18.176, 2.550, -81.503), Vector(25.599, 2.550, -89.847), Vector(31.113, 2.550, -94.892), Vector(35.656, 2.550,
			-94.951), Vector(36.088, 3.346, -80.516), Vector(36.106, 4.316, -78.576), Vector(35.654, 4.550, -73.648), Vector(31.143, 3.673,
			-73.954), Vector(29.482, 2.845, -74.062), Vector(25.955, 2.550, -69.506), Vector(20.657, 2.550, -75.100), Vector(13.333, 2.550,
			-74.147), Vector(9.696, 2.550, -69.463), Vector(10.183, 2.550, -64.719), Vector(18.104, 2.526, -56.424), Vector(26.055, 2.550,
			-65.554), Vector(27.390, 2.550, -60.663), Vector(29.627, 3.417, -60.528), Vector(31.458, 4.332, -60.533), Vector(39.918, 4.550,
			-60.123), Vector(40.249, 4.550, -70.008), Vector(4.892, 3.158, -62.424), Vector(3.001, 4.103, -62.365), Vector(1.292, 4.958,
			-62.304), Vector(-0.164, 5.686, -62.301), Vector(-1.967, 6.588, -62.276), Vector(-6.130, 7.550, -62.225), Vector(-6.616, 7.550,
			-55.466), Vector(1.611, 7.550, -52.315), Vector(-5.939, 7.550, -48.760), Vector(1.827, 7.550, -44.846), Vector(-7.351, 7.550,
			-40.609), Vector(-4.529, 7.550, -37.075), Vector(0.490, 7.550, -36.504), Vector(8.158, 7.550, -35.969), Vector(9.722, 7.590,
			-39.995), Vector(17.759, 7.550, -34.466), Vector(17.984, 7.550, -39.637), Vector(17.819, 7.550, -31.276), Vector(27.401, 7.550,
			-36.091), Vector(26.289, 7.558, -39.971), Vector(32.801, 6.703, -35.920), Vector(39.234, 6.550, -35.824), Vector(39.760, 5.735,
			-41.741), Vector(39.967, 4.971, -43.266), Vector(39.866, 4.550, -50.476), Vector(35.353, 4.550, -50.167), Vector(29.581, 4.557,
			-53.969), Vector(31.918, 4.556, -51.421), Vector(33.522, 4.736, -56.740), Vector(44.042, 4.550, -57.789), Vector(43.911, 3.645,
			-55.082), Vector(43.794, 2.743, -53.280), Vector(43.733, 1.913, -51.622), Vector(43.745, 1.012, -49.816), Vector(43.754, 0.199,
			-48.194), Vector(43.700, -0.713, -46.368), Vector(43.598, -1.450, -43.820), Vector(38.485, -1.450, -45.845), Vector(35.071,
			-1.450, -49.786), Vector(29.733, -1.450, -45.591), Vector(34.117, -1.450, -42.668), Vector(31.934, -1.436, -40.076), Vector(
			31.583, -0.450, -36.012), Vector(28.511, 0.337, -36.275), Vector(26.854, 1.165, -36.159), Vector(25.080, 2.053, -36.089),
			Vector(18.435, 2.550, -36.689), Vector(21.151, -1.450, -43.891), Vector(4.401, -1.450, -42.505), Vector(-3.948, -1.450,
			-41.902), Vector(-3.975, -0.481, -38.172), Vector(-4.117, 0.256, -36.696), Vector(-1.444, 0.881, -33.903), Vector(0.328, 1.766,
			-34.112), Vector(10.567, 2.550, -35.876), Vector(-1.791, 2.712, -37.732), Vector(3.657, 2.550, -36.126), Vector(20.771, 2.733,
			-43.836), Vector(15.138, 2.737, -43.604), Vector(17.907, 2.588, -44.498), Vector(18.288, 2.550, -50.533), Vector(12.187, 2.550,
			-47.812), Vector(8.444, 2.550, -49.425), Vector(23.601, 2.550, -47.957), Vector(27.562, 2.550, -49.708), Vector(26.413, 2.554,
			-55.221), Vector(9.569, 2.550, -55.300), Vector(13.114, 2.550, -59.634), Vector(4.159, 2.550, -52.381), Vector(3.956, 1.609,
			-50.026), Vector(3.957, 0.756, -48.320), Vector(3.997, 0.094, -47.007), Vector(4.097, -0.600, -45.618), Vector(22.172, 2.550,
			-33.195), Vector(14.092, 2.512, -32.815), Vector(14.028, 1.550, -28.184), Vector(21.830, 1.550, -28.337), Vector(21.852, 1.871,
			-31.538), Vector(40.127, 6.543, -31.107), Vector(40.371, 6.543, -26.851), Vector(32.997, 6.660, -27.592), Vector(44.622, 6.550,
			-25.377), Vector(44.407, 5.595, -23.233), Vector(41.172, 4.694, -21.498), Vector(39.426, 3.820, -21.359), Vector(37.776, 2.996,
			-21.141), Vector(36.168, 2.193, -21.225), Vector(34.520, 1.550, -21.154), Vector(27.773, 1.550, -24.736), Vector(27.672, 2.051,
			-17.019), Vector(35.059, 1.550, -13.106), Vector(34.376, 1.550, -7.102), Vector(31.080, 1.143, -7.301), Vector(24.324, 0.546,
			-13.187), Vector(17.889, 1.550, -22.092), Vector(17.571, 0.589, -19.972), Vector(0.435, 1.550, -28.196), Vector(-0.172, 1.550,
			-13.840), Vector(0.645, 1.550, -7.097), Vector(3.535, 0.948, -7.054), Vector(6.291, 0.550, -6.707), Vector(10.068, 0.550,
			-13.427), Vector(14.098, 0.550, -13.926), Vector(10.147, 1.432, -15.656), Vector(10.186, 2.340, -17.476), Vector(10.299, 3.304,
			-19.400), Vector(10.337, 4.235, -21.262), Vector(0.071, 6.576, -17.979), Vector(9.034, 4.550, -23.877), Vector(6.216, 5.489,
			-23.876), Vector(4.363, 6.418, -23.878), Vector(0.222, 6.550, -23.780), Vector(0.315, 7.147, -33.086), Vector(6.653, 6.668,
			-18.208), Vector(3.341, 6.550, -28.774), Vector(24.794, 0.550, -0.999), Vector(24.571, 1.551, 1.666), Vector(24.669, 1.064,
			0.694), Vector(24.372, 2.500, 3.564), Vector(24.265, 3.437, 5.438), Vector(24.151, 4.244, 7.058), Vector(24.036, 4.550, 9.729),
			Vector(27.631, 5.528, 10.102), Vector(29.623, 6.519, 10.086), Vector(33.396, 6.550, 10.098), Vector(33.798, 6.630, 4.079),
			Vector(28.137, 6.550, 4.645), Vector(30.606, 6.640, 13.717), Vector(33.419, 7.261, 18.090), Vector(33.390, 7.550, 22.406),
			Vector(33.445, 1.550, 1.229), Vector(33.312, 1.550, 14.328), Vector(27.605, 1.550, 14.437), Vector(5.411, 1.550, -28.668),
			Vector(18.159, 0.550, 0.844), Vector(16.267, 1.066, 5.697), Vector(10.040, 0.546, -0.954), Vector(5.611, 1.890, 3.309), Vector(
			0.223, 1.553, 1.051), Vector(0.536, 1.553, 7.221), Vector(6.068, 1.553, 11.551), Vector(12.156, 1.550, 14.116), Vector(19.447,
			1.550, 14.032), Vector(19.491, 2.410, 18.388), Vector(16.085, 2.550, 21.814), Vector(12.437, 2.118, 17.803), Vector(-10.464,
			6.550, 11.820), Vector(-10.141, 5.731, 9.780), Vector(-6.324, 4.891, 7.444), Vector(-4.513, 3.987, 7.527), Vector(-2.912,
			3.189, 7.447), Vector(-1.344, 2.407, 7.372), Vector(-6.604, 6.577, 16.479), Vector(0.682, 6.579, 13.798), Vector(-5.599, 6.550,
			22.082), Vector(8.397, 1.905, 21.994), Vector(6.615, 1.013, 21.960), Vector(4.732, 0.072, 21.896), Vector(1.952, -0.890,
			25.211), Vector(1.958, -1.450, 28.879), Vector(2.348, -1.450, 34.723), Vector(-4.354, -1.450, 34.623), Vector(-4.417, -1.450,
			28.549), Vector(-9.407, -1.048, 31.472), Vector(-9.568, -0.085, 33.396), Vector(-9.650, 0.823, 35.214), Vector(-9.642, 1.795,
			37.154), Vector(-9.609, 2.623, 38.810), Vector(-9.604, 3.542, 40.651), Vector(-9.691, 4.451, 42.472), Vector(-6.671, 4.551,
			45.154), Vector(-6.180, 4.551, 36.708), Vector(-1.101, 4.551, 35.462), Vector(-6.258, 4.551, 30.554), Vector(-1.087, 4.550,
			29.088), Vector(3.577, 4.550, 38.222), Vector(1.687, 4.550, 46.852), Vector(4.296, 3.569, 46.964), Vector(6.224, 2.605,
			47.473), Vector(8.353, 2.550, 53.567), Vector(8.035, 2.550, 59.772), Vector(3.584, 3.424, 59.841), Vector(1.598, 4.418,
			59.845), Vector(-2.427, 4.550, 62.488), Vector(-5.901, 4.550, 53.281), Vector(15.877, 2.550, 64.147), Vector(23.385, 2.550,
			59.579), Vector(24.072, 2.550, 51.302), Vector(16.233, 2.526, 43.465), Vector(28.011, 2.723, 48.187), Vector(29.778, 3.606,
			48.377), Vector(31.605, 4.518, 48.518), Vector(33.271, 5.353, 48.558), Vector(34.865, 6.150, 48.488), Vector(36.579, 7.006,
			48.627), Vector(40.781, 7.550, 48.598), Vector(40.365, 7.550, 40.909), Vector(32.644, 7.554, 38.651), Vector(32.644, 7.554,
			31.232), Vector(40.426, 7.550, 29.354), Vector(40.681, 7.550, 35.312), Vector(40.829, 7.550, 23.560), Vector(26.575, 7.550,
			22.189), Vector(24.340, 7.550, 25.432), Vector(16.642, 7.550, 21.463), Vector(16.179, 7.596, 17.430), Vector(16.054, 7.550,
			25.655), Vector(8.530, 7.550, 25.432), Vector(4.541, 7.550, 21.866), Vector(0.143, 7.164, 21.765), Vector(-6.332, 6.550,
			26.081), Vector(-6.417, 5.638, 28.035), Vector(-6.438, 4.948, 29.417), Vector(5.984, 2.549, 36.335), Vector(10.479, 2.549,
			34.183), Vector(14.933, 2.443, 37.900), Vector(8.953, 2.550, 41.690), Vector(16.306, 2.550, 34.551), Vector(21.508, 2.531,
			34.021), Vector(25.635, 2.550, 35.832), Vector(25.828, 2.550, 42.043), Vector(29.824, 2.550, 38.159), Vector(29.968, 1.610,
			35.775), Vector(29.973, 0.729, 34.013), Vector(29.993, -0.188, 32.188), Vector(29.971, -1.004, 30.562), Vector(29.910, -1.450,
			27.934), Vector(20.586, -1.450, 29.472), Vector(11.451, -1.450, 29.868), Vector(38.225, -1.450, 27.548), Vector(38.209, -0.460,
			24.350), Vector(38.163, 0.410, 22.611), Vector(34.622, 1.406, 19.951), Vector(32.872, 2.282, 19.913), Vector(22.167, 2.630,
			22.010), Vector(35.766, 2.697, 23.101), Vector(15.984, 2.587, 26.718), Vector(18.399, 2.720, 28.962), Vector(13.529, 2.814,
			29.762), Vector(16.133, 2.550, 71.923), Vector(7.771, 2.550, 80.948), Vector(-2.329, 2.550, 81.034), Vector(-2.174, 3.381,
			66.672), Vector(-2.101, 4.380, 64.670), Vector(10.997, 2.550, 75.893), Vector(21.714, 2.550, 76.908), Vector(23, 2.550,
			89.823), Vector(8.932, 2.550, 90.016), Vector(11.933, 2.550, 103.288), Vector(18.447, 2.550, 103.501));
		Global.Healthkits = Array();
		Global.Objective1_Node = Array(Vector(16.861, 0.550, -1.200), Vector(13.942, 0.550, -1.491), Vector(11.604, 0.550, -3.432), Vector(
			10.645, 0.550, -7.081), Vector(11.618, 0.550, -10.281), Vector(14.275, 0.550, -12.555), Vector(17.052, 0.550, -13.025), Vector(
			20.166, 0.550, -12.274), Vector(22.508, 0.550, -9.967), Vector(22.819, 0.550, -6.955), Vector(21.985, 0.550, -3.877), Vector(
			19.354, 0.550, -1.898));
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Malevento")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(-14.090, -0.718, -27.178), Vector(0.038, 3.990, 33.812), Vector(0.151, 3.051, 26.027), Vector(
			-7.491, 3.800, 33.724), Vector(-4.624, 3.805, 33.672), Vector(-2.720, 4.587, 37.623), Vector(1.541, 5.579, 37.948), Vector(
			4.638, 6.555, 33.698), Vector(2.497, 7.399, 30.176), Vector(-1.586, 8.337, 30.062), Vector(-4.587, 9.304, 34.326), Vector(
			-3.073, 10.140, 37.909), Vector(0.604, 10.660, 36.908), Vector(0.155, 10.582, 41.979), Vector(5.230, 7.424, 28.314), Vector(
			6.377, 7.370, 21.910), Vector(4.462, 7.343, 21.311), Vector(5.953, 7.050, 17.248), Vector(3.752, 7.050, 15.568), Vector(6.496,
			7.050, 9.294), Vector(3.967, 7.050, 9.244), Vector(6.194, 7.050, 3.302), Vector(3.771, 7.843, 3.078), Vector(2.109, 8.652,
			2.961), Vector(-1.884, 8.769, 3.044), Vector(-3.823, 7.801, 3.148), Vector(-6.672, 7.052, 3.229), Vector(-6.517, 7.052, 8.703),
			Vector(-4.149, 7.052, 8.916), Vector(-6.194, 6.190, 13.984), Vector(-6.152, 5.131, 16.102), Vector(-6.124, 5.631, 15.146),
			Vector(-6.167, 4.218, 17.937), Vector(-6.173, 3.552, 21.022), Vector(10.833, 5.050, 22.057), Vector(9.035, 4.203, 22.088),
			Vector(5.539, 3.552, 21.867), Vector(-0.039, 3.052, 21.716), Vector(-9.105, 3.155, 21.837), Vector(-16.271, 2.550, 22.105),
			Vector(1.889, 3.552, 14.659), Vector(-2.035, 3.552, 14.653), Vector(0.082, 3.552, 12.158), Vector(-6.075, 3.558, 6.666),
			Vector(-6.146, 2.721, 5.072), Vector(-0.267, 2.552, 1.100), Vector(6.324, 3.558, 6.933), Vector(6.454, 2.697, 5.024), Vector(
			6.284, 3.552, 14.833), Vector(6.319, 3.552, 10.097), Vector(2.586, 3.552, 9.611), Vector(0.350, 4.223, 44.966), Vector(-8.354,
			3.550, 42.340), Vector(7.807, 5.112, 42.091), Vector(12.558, 5.550, 34.945), Vector(7.737, 6.537, 33.635), Vector(13.580,
			5.050, 26.183), Vector(17.568, 5.050, 27.055), Vector(17.448, 4.696, 21.870), Vector(14.314, 5.050, 21.819), Vector(13.717,
			5.050, 17.024), Vector(17.943, 4.554, 16.888), Vector(13.267, 4.554, 12.278), Vector(17.872, 4.550, 12.841), Vector(17.009,
			5.550, 36.473), Vector(25.208, 5.550, 33.997), Vector(24.937, 4.839, 29.909), Vector(21.437, 4.550, 24.741), Vector(21.502,
			4.550, 16.727), Vector(26.582, 4.550, 25.694), Vector(29.426, 4.550, 20.313), Vector(22.732, 4.550, 19.479), Vector(26.928,
			5.355, 14.782), Vector(32.602, 5.133, 17.502), Vector(32.325, 4.554, 23.206), Vector(30.454, 4.689, 27.354), Vector(35.180,
			7.550, 31.604), Vector(32.478, 6.738, 32.173), Vector(30.146, 5.954, 32.681), Vector(37.986, 8.383, 28.668), Vector(39.661,
			8.550, 24.265), Vector(44.215, 8.550, 25.557), Vector(42.886, 8.550, 21.972), Vector(39.874, 8.550, 19.150), Vector(36.255,
			8.549, 21.950), Vector(33.424, 9.042, 21.856), Vector(31.914, 9.042, 24.786), Vector(31.727, 9.106, 19.051), Vector(31.406,
			9.120, 21.873), Vector(45.795, 7.784, 18.394), Vector(47.632, 6.963, 21.426), Vector(47.665, 6.030, 23.288), Vector(45.081,
			5.207, 25.411), Vector(41.671, 4.550, 25.317), Vector(34.686, 4.550, 21.948), Vector(39.708, 4.550, 18.243), Vector(20.260,
			10.550, 30.872), Vector(15.669, 10.587, 31.537), Vector(16.924, 10.565, 36.305), Vector(21.550, 10.574, 34.928), Vector(
			-17.585, 3.549, 45.093), Vector(-19.937, 2.715, 45.019), Vector(-25.918, 1.590, 39.151), Vector(-21.039, 2.149, 44.910),
			Vector(-26.162, 1.450, 33.626), Vector(-21.513, 2.387, 33.497), Vector(-16.834, 2.550, 27.485), Vector(-12.595, 3.427, 31.101),
			Vector(-17.453, 3.180, 35.895), Vector(-10.508, 3.550, 35.228), Vector(-20.957, 2.686, 26.231), Vector(-21.458, 3.580, 24.290),
			Vector(-22.062, 4.550, 22.516), Vector(-22.614, 5.492, 20.732), Vector(-23.558, 5.550, 16.038), Vector(-21.085, 6.242, 15.663),
			Vector(-14.049, 6.235, 15.315), Vector(-10.097, 5.550, 13.152), Vector(-10.344, 4.577, 10.831), Vector(-10.533, 3.644, 8.955),
			Vector(-10.674, 2.808, 7.269), Vector(-10.782, 1.870, 5.389), Vector(-10.960, 1.550, 2.919), Vector(-16.229, 1.550, 3.836),
			Vector(-17.316, 1.550, 11.446), Vector(-17.956, 2.066, 18.226), Vector(-21.655, 1.550, 15.201), Vector(-23.840, 0.767, 15.327),
			Vector(-27.076, 0.550, 15.025), Vector(-32.986, 0.550, 18.280), Vector(-28.908, 0.882, 30.456), Vector(-27.113, -0.111,
			11.395), Vector(-31.066, -0.450, 3), Vector(-31.006, -0.991, -2.561), Vector(-24.574, -1.450, -4.783), Vector(-20.689, -0.538,
			-2.799), Vector(-16.664, 1.536, 0.570), Vector(-18.712, 0.646, -0.708), Vector(-20.044, -0.074, -1.797), Vector(-20.381, 1.550,
			8.646), Vector(-20.394, 2.341, 6.753), Vector(-20.945, 3.357, 3.609), Vector(-20.648, 3.072, 4.824), Vector(-22.272, 4.331,
			2.181), Vector(-26.048, 4.560, -1.521), Vector(-27.123, 5.550, 3.736), Vector(-27.078, 5.550, 13.541), Vector(-29.062, 5.609,
			15.943), Vector(-30.759, 6.300, 20.156), Vector(-35.765, 6.300, 21.677), Vector(-33.843, 6.300, 29.242), Vector(-29.738, 6.300,
			28.301), Vector(-22.700, 3.867, -8.339), Vector(-17.874, 3.550, -16.907), Vector(-31.173, 4.559, -0.731), Vector(-26.988,
			4.604, -4.174), Vector(-24.530, 3.560, -11.205), Vector(-21.460, 3.554, -16.410), Vector(-17.065, 3.552, -18.686), Vector(
			-12.654, 3.604, -16.251), Vector(-11.572, 2.899, -13.658), Vector(-9.387, 2.050, -11.812), Vector(-13.023, 1.550, -5.864),
			Vector(-10.113, 1.550, -3.849), Vector(-12.578, 1.550, -0.989), Vector(-6.358, 0.872, -5.641), Vector(-3.798, 0.550, -11.395),
			Vector(-10.711, -0.202, -19.386), Vector(-12.455, -1.158, -20.448), Vector(-15.257, -1.450, -20.960), Vector(-19.946, -1.450,
			-12.963), Vector(-24.410, -1.451, -15.385), Vector(-26.408, -1.451, -12.370), Vector(-22.294, -1.450, -9.971), Vector(-29.868,
			-1.450, -7.574), Vector(-19.751, -1.450, -22.537), Vector(-16.686, -1.450, -29.608), Vector(-10.724, -1.484, -32.845), Vector(
			1.494, -1.950, -30.581), Vector(0.298, -1.001, -26.312), Vector(-1.227, -0.268, -20.541), Vector(-3.441, 0.550, -16.403),
			Vector(-8.257, 0.550, -16.514), Vector(3.921, 0.550, -12.777), Vector(-0.022, 0.550, -6.456), Vector(-0.096, 1.371, -4.688),
			Vector(-0.083, 1.922, -1.017), Vector(-4.309, 1.550, -2.870), Vector(5.307, 1.310, -4.808), Vector(7.612, 2.005, -2.376),
			Vector(11.091, 2.550, -2.526), Vector(11.059, 3.360, -5.290), Vector(11.003, 4.254, -7.088), Vector(9.115, 4.614, -12.208),
			Vector(11.170, 4.550, -16.724), Vector(8.290, 5.497, -17.482), Vector(6.547, 6.400, -17.989), Vector(-1.456, 6.550, -20.139),
			Vector(2.866, 6.672, -17.214), Vector(-6.905, 6.657, -19.879), Vector(-11.657, 6.656, -22.963), Vector(-10.674, 6.551,
			-26.224), Vector(-9.807, 6.657, -30.232), Vector(-5.936, 6.551, -26.747), Vector(-0.055, 6.551, -24.792), Vector(-2.313, 6.551,
			-29.640), Vector(1.737, 6.551, -30.847), Vector(4.550, 6.551, -27.799), Vector(2.170, 6.668, -32.281), Vector(-4.903, 6.668,
			-32.627), Vector(6.767, 0.550, -27.636), Vector(9.378, 0.550, -27.503), Vector(7.753, 0.550, -20.193), Vector(13.501, 1.287,
			-23.709), Vector(15.687, 2.085, -23.548), Vector(17.897, 3.066, -23.025), Vector(22.366, 3.768, -20.344), Vector(22.771, 3.569,
			-24.496), Vector(27.928, 4.568, -22.613), Vector(30.568, 4.550, -15.952), Vector(24.267, 4.550, -14.815), Vector(13.944, 4.550,
			-20.116), Vector(19.097, 4.550, -18.987), Vector(15.883, 2.550, -0.273), Vector(23.170, 2.550, -2.324), Vector(22.424, 3.454,
			-5.915), Vector(21.917, 4.362, -7.667), Vector(21.392, 4.550, -11.735), Vector(27.884, 5.020, -11.747), Vector(28.279, 5.922,
			-8.688), Vector(28.903, 6.915, -4.602), Vector(32.242, 6.553, -7.713), Vector(23.089, 7.550, -3.372), Vector(24.075, 7.550,
			-0.145), Vector(25.052, 7.550, 2.870), Vector(29.520, 6.915, 1.323), Vector(29.126, 6.915, -1.570), Vector(20.834, 7.714,
			3.599), Vector(12.147, 7.786, 3.335), Vector(17.180, 8.068, 5.738), Vector(16.880, 2.744, 4.942), Vector(17.396, 3.487, 7.088),
			Vector(17.591, 4.249, 9.381), Vector(29.407, 7.183, 6.397), Vector(27.823, 7.550, 12.248), Vector(22.038, 7.562, 12.497),
			Vector(33.655, 6.915, 4.322), Vector(32.843, 6.486, 11.941), Vector(30.480, 5.604, 14.950), Vector(40.330, 6.919, 8.702),
			Vector(40.285, 7.552, 13.750), Vector(40.413, 8.550, 17.033));
		Global.Healthkits = Array(Vector(0.125, 4.223, 46.576), Vector(-32.096, -1.274, -5.935), Vector(2.636, -1.955, -34.739), Vector(
			31.850, 6.550, -11.860), Vector(15.263, 2.550, -2.962), Vector(32.460, 5.050, 27.496), Vector(0.025, 3.552, 15.017), Vector(
			-21.998, 2.686, 29.371));
		Global.Objective1_Node = Array();
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Petra")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(-40.310, -9.935, -12.146), Vector(-37.432, -8.971, -10.282), Vector(-31.622, -8.039, -5.607),
			Vector(-39.408, -9.885, -8.516), Vector(-34.772, -9.008, -4.376), Vector(-37.731, -9.883, -3.518), Vector(-35.414, -10.035,
			2.802), Vector(-35.631, -9.626, -1.550), Vector(-39.939, -10.826, -1.091), Vector(-41.685, -10.694, -5.378), Vector(-36.273,
			-10.758, 8.969), Vector(-40.280, -10.993, 13.483), Vector(-36.823, -11.182, 17.921), Vector(-26.443, -10.417, 18.332), Vector(
			-25.899, -10.354, 8.926), Vector(-25.712, -9.540, 2.809), Vector(-25.635, -8.636, -0.839), Vector(-21.187, -7.224, -2.190),
			Vector(-24.470, -8.129, -2.563), Vector(-26.428, -7.768, -6.247), Vector(-34.100, -8.179, -8.728), Vector(-28.338, -7.773,
			-9.497), Vector(-25.516, -6.956, -11.135), Vector(-22.999, -6.126, -11.422), Vector(-20.915, -5.194, -11.934), Vector(-13.689,
			-4.450, -12.388), Vector(-5.855, -4.369, -7.250), Vector(2.137, -4.450, -11.243), Vector(1.831, -2.676, -18.437), Vector(9.753,
			-4.369, -7.601), Vector(16.795, -4.450, -13.044), Vector(18.848, -3.525, -12.646), Vector(20.275, -2.812, -12.665), Vector(
			24.038, -2.450, -12.752), Vector(24.572, -2.450, -1.849), Vector(20.929, -1.531, -2.457), Vector(19.515, -0.572, -2.406),
			Vector(17.320, 0.329, -2.548), Vector(17.075, 1.223, 2.313), Vector(16.838, 1.903, 4.662), Vector(15.053, 1.174, -3.489),
			Vector(13.312, 2.035, -4.571), Vector(12.333, 2.550, -8.765), Vector(12.342, 2.550, -16.063), Vector(10.199, 1.650, -15.945),
			Vector(8.551, 0.825, -15.797), Vector(1.726, 0.553, -14.764), Vector(-8.403, 2.550, -16.336), Vector(-6.157, 1.629, -16.385),
			Vector(-4.558, 0.829, -16.290), Vector(1.744, 2.550, -5.779), Vector(-9.560, 2.550, -8.789), Vector(1.924, 2.550, -10.311),
			Vector(-16.981, 1.575, -9.520), Vector(-19.751, 1.584, -10.545), Vector(-19.197, 1.590, -14.181), Vector(-22.369, 1.636,
			-6.669), Vector(-21.636, 1.636, -3.308), Vector(-17.691, 1.550, -1.887), Vector(-20.995, 1.635, -0.631), Vector(-16.437, 1.550,
			8.633), Vector(-22.372, 1.636, 8.930), Vector(-11.290, 0.821, 8.946), Vector(-9.450, 0.533, 7.124), Vector(-9.082, 0.582,
			-0.576), Vector(-4.293, 0.852, -0.828), Vector(-7.741, 1.104, 6.010), Vector(-13.354, 1.873, -9.221), Vector(-31.854, -7.470,
			-1.768), Vector(-32.182, -6.788, 2.354), Vector(-31.037, -5.815, 0.806), Vector(-31.910, -6.016, 5.021), Vector(-29.896,
			-5.375, 6.854), Vector(-28.507, -5.397, 3.357), Vector(-29.804, -4.382, 8.999), Vector(-29.889, -3.450, 18.125), Vector(
			-34.061, -3.373, 18.119), Vector(-42.032, -11.349, 19.146), Vector(-25.930, -3.373, 11.836), Vector(-25.864, -4.249, 18.218),
			Vector(-23.901, -5, 18.791), Vector(-21.522, -5.789, 19.549), Vector(-20.164, -6.672, 20.626), Vector(-18.525, -7.450, 24.664),
			Vector(-14.046, -7.373, 21.557), Vector(-21.171, -7.423, 28.438), Vector(-17.563, -7.438, 32.411), Vector(-14.580, -7.423,
			28.666), Vector(-21.914, -7.443, 32.013), Vector(-21.906, -6.481, 33.935), Vector(-21.844, -5.679, 35.541), Vector(-20.408,
			-5.192, 41.410), Vector(-14.891, -4.895, 36.998), Vector(-19.813, -5.373, 38.321), Vector(-13.113, -4.007, 37.100), Vector(
			-9.715, -3.450, 37.088), Vector(-9.802, -2.543, 30.186), Vector(-9.836, -1.702, 28.506), Vector(-6.529, -0.715, 26.140),
			Vector(-4.679, 0.210, 26.072), Vector(-1.317, 0.550, 25.838), Vector(-1.326, 0.550, 34.251), Vector(-8.564, 0.550, 33.992),
			Vector(5.857, 0.550, 33.489), Vector(5.930, 0.551, 25.655), Vector(2.146, 0.627, 35.528), Vector(2.071, 1.533, 40.270), Vector(
			6.040, 1.560, 40.040), Vector(-1.951, 1.560, 39.929), Vector(5.837, 0.530, 21.200), Vector(12.864, 0.600, 21.171), Vector(
			9.984, 0.600, 19.054), Vector(5.082, 0.610, 18.926), Vector(1.789, 0.528, 21.085), Vector(1.955, 1.285, 18.533), Vector(1.912,
			1.326, 10.172), Vector(3.867, 1.572, 13.754), Vector(0.036, 1.591, 14.230), Vector(-1.418, 0.600, 19.280), Vector(-9.906,
			0.562, 21.469), Vector(-10.062, 0.629, 24.293), Vector(-9.735, 0.512, 13.720), Vector(-7.411, 0.610, 13.910), Vector(1.985,
			1.448, 4.506), Vector(0.040, 1.550, 1.450), Vector(4.113, 1.557, 1.261), Vector(1.943, 2.219, -2.337), Vector(-20.355, -10.469,
			8.939), Vector(-18.129, -9.513, 8.908), Vector(-16.351, -8.624, 8.931), Vector(-11.068, -8.450, 9.302), Vector(-10.904, -8.328,
			16.912), Vector(-11.560, -7.862, 21.892), Vector(-7.240, -8.830, 22.030), Vector(2.325, -9.450, 21.921), Vector(10.843, -8.779,
			22.035), Vector(14.149, -8.476, 22.386), Vector(15.356, -8.424, 16.968), Vector(7.281, -8.415, 16.340), Vector(-2.373, -8.390,
			16.242), Vector(-11.448, -8.191, 0.500), Vector(-4.214, -7.969, 1.533), Vector(3.127, -7.702, 1.923), Vector(9.139, -8.291,
			2.059), Vector(14.104, -8.053, 2.195), Vector(13.787, -8.230, 7.958), Vector(3.046, -6.741, 0.437), Vector(2.932, -5.833,
			-0.961), Vector(2.516, -4.863, -2.378), Vector(2.217, -4.450, -4.542), Vector(-0.536, -4.450, -8.217), Vector(5.157, -4.450,
			-7.955), Vector(24.159, -4.450, 5.652), Vector(20.911, -4.450, 8.706), Vector(17.560, -4.851, 9.021), Vector(23.708, -4.450,
			12.715), Vector(26.757, -4.450, 9.378), Vector(23.941, -3.459, 1.020), Vector(23.955, -2.680, -0.538), Vector(24.188, -5.177,
			17.301), Vector(25.989, -6.104, 19.029), Vector(27.763, -7.022, 20.946), Vector(30.396, -7.886, 23.094), Vector(35.362, -8.327,
			26.424), Vector(35.852, -8.790, 34.121), Vector(29.042, -8.833, 29.148), Vector(30.435, -9.256, 34.986), Vector(25.661, -9.786,
			36.718), Vector(23.599, -8.937, 29.597), Vector(17.009, -8.827, 27.187), Vector(33.926, -9.163, 38.936), Vector(27.563, -9.883,
			40.892), Vector(24.261, -10.765, 48.367), Vector(14.508, -11.036, 52.617), Vector(10.562, -11.485, 43.410), Vector(18.206,
			-10.245, 39.635), Vector(18.745, -8.338, 35.222), Vector(20.551, -9.249, 35.650), Vector(18.030, -9.373, 38.061), Vector(
			10.552, -11.182, 48.683), Vector(1.177, -10.545, 52.934), Vector(2.932, -9.665, 60.909), Vector(11.960, -10.678, 58.857),
			Vector(7.208, -10.241, 60.428), Vector(-0.849, -9.559, 55.890), Vector(-2.981, -8.699, 58.390), Vector(-4.765, -7.835, 58.722),
			Vector(-9.155, -6.912, 59.430), Vector(-11.498, -6.115, 59.803), Vector(-15.222, -5.275, 55.521), Vector(-12.784, -6.161,
			54.753), Vector(-10.711, -7.042, 54.471), Vector(-8.120, -7.977, 54.215), Vector(-5.856, -8.843, 53.847), Vector(-2.989,
			-9.753, 53.098), Vector(-20.432, -4.580, 52.673), Vector(-20.605, -4.835, 45.026), Vector(-8.089, -4.946, 43.577), Vector(
			6.148, -11.748, 42.016), Vector(2.927, -11.361, 47.791), Vector(-1.899, -10.646, 49.896), Vector(-3.220, -11.424, 43.130),
			Vector(2.007, -11.849, 43.286), Vector(2.248, -11.451, 37), Vector(5.883, -11.447, 37.990), Vector(-1.959, -11.449, 37.831),
			Vector(2.044, -11.446, 33.515), Vector(1.827, -10.672, 28.443), Vector(1.789, -9.692, 26.485), Vector(18.697, 6.403, 31.743),
			Vector(22.711, 7.874, 21.387), Vector(23.593, 7.295, 26.206), Vector(23.171, 5.899, 30.811), Vector(16.687, 6.727, 15.423),
			Vector(14.835, 7.349, 19.784), Vector(10.609, 8.550, 22.939), Vector(3.021, 8.436, 22.883), Vector(-2.741, 9.501, 23.361),
			Vector(-8.152, 10.137, 23.209), Vector(-6.122, 10.296, 26.646), Vector(5.341, 9.042, 26.919), Vector(0.515, 9.116, 23.711),
			Vector(-2.423, 9.664, 25.701), Vector(10.276, 8.756, 27.437), Vector(14.244, 8.108, 26.589), Vector(18.029, 7.599, 23.597),
			Vector(20.351, 6.805, 29.556), Vector(17.156, 7.390, 29.249), Vector(13.487, 8.218, 29.114));
		Global.Healthkits = Array(Vector(-36.119, -10.910, 15.341), Vector(1.956, -4.450, -12.963), Vector(2.009, 2.550, -7.955), Vector(
			-10.853, 0.697, -0.802), Vector(-29.822, -5.464, 0.053), Vector(-15.320, -7.423, 32.105), Vector(2, 0.549, 32.451), Vector(
			27.978, -4.450, 9.151), Vector(35.718, -8.511, 29.256), Vector(7.287, -11.421, 35.562), Vector(1.979, -8.428, 9.002));
		Global.Objective1_Node = Array();
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Kanezaka")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(2.466, 10.550, 4.273), Vector(10.550, 10.550, -1.450), Vector(10.569, 10.550, 4.546), Vector(
			6.990, 10.550, 1.223), Vector(12.566, 10.550, 1.669), Vector(9.119, 9.572, 6.050), Vector(7.893, 8.662, 7.395), Vector(6.564,
			7.696, 8.800), Vector(1.636, 7.550, 10.354), Vector(-1.896, 7.550, 6.635), Vector(-5.246, 7.390, 10.450), Vector(9.204, 9.670,
			-2.846), Vector(7.987, 8.783, -4.135), Vector(6.852, 7.961, -5.320), Vector(3.924, 7.550, -8.718), Vector(-4.476, 7.550,
			-7.401), Vector(-4.831, 7.390, -1.426), Vector(-11.239, 7.412, 3.566), Vector(-17.220, 7.400, 6.832), Vector(-20.748, 7.918,
			6.179), Vector(-22.326, 8.815, 7.031), Vector(-25.070, 9.550, 8.388), Vector(-26.346, 10.299, 6.322), Vector(-27.169, 11.142,
			4.857), Vector(-28.449, 11.550, 2.356), Vector(-22.379, 11.550, -0.700), Vector(-19.250, 11.550, 3.860), Vector(-23.410,
			11.550, -2.769), Vector(-18.513, 11.550, -4.080), Vector(-19.945, 11.550, -6.961), Vector(-18.178, 11.550, -11.020), Vector(
			-18.082, 11.550, -9.382), Vector(-23.199, 12.126, -10.656), Vector(-23.040, 12.093, -8.518), Vector(-26.455, 12.577, -9.681),
			Vector(-18.429, 7.550, 11.146), Vector(-15.087, 7.553, 17.107), Vector(-7.643, 7.550, 13.765), Vector(-21.772, 7.390, 10.010),
			Vector(-26.525, 7.390, 13.579), Vector(-26.220, 7.390, 22.049), Vector(-31.748, 7.550, 22.176), Vector(-31.769, 7.390, 25.786),
			Vector(-26.636, 7.390, 25.940), Vector(-16.385, 7.390, 25.934), Vector(-1.357, 7.390, 16.596), Vector(0.795, 8.338, 19.641),
			Vector(-0.194, 8.550, 23.076), Vector(-1.859, 9.446, 24.186), Vector(-3.466, 10.357, 25.040), Vector(-5.054, 11.261, 25.908),
			Vector(-11.071, 11.550, 28.615), Vector(-10.437, 11.550, 34.304), Vector(-5.759, 11.550, 36.537), Vector(-5.908, 10.576,
			38.683), Vector(-5.946, 9.739, 40.356), Vector(-7.877, 9.431, 44.177), Vector(-9.642, 8.548, 44.143), Vector(-11.624, 7.557,
			44.143), Vector(-15.903, 7.550, 44.069), Vector(-17.635, 7.550, 40.156), Vector(-19.976, 6.695, 40.270), Vector(-21.807, 5.784,
			40.245), Vector(-28.843, 5.550, 40.351), Vector(-31.994, 5.550, 40.425), Vector(-31.859, 6.357, 36.717), Vector(-31.909, 7.382,
			34.669), Vector(-31.875, 6.932, 35.527), Vector(-31.484, 7.390, 32.021), Vector(-21.062, 7.390, 27.365), Vector(-16.431, 7.550,
			34.260), Vector(-25.641, 7.550, 32.858), Vector(-36.920, 7.550, 33.678), Vector(-37.959, 7.550, 26.901), Vector(-42.603, 7.550,
			30.658), Vector(-10.668, 11.550, 39.049), Vector(-13.037, 11.579, 39.195), Vector(-8.342, 11.550, 26.240), Vector(-12.512,
			12.033, 23.564), Vector(-8.986, 12.033, 21.335), Vector(-12.034, 12.050, 19.828), Vector(-19.467, 12.050, 19.216), Vector(
			-21.621, 12.356, 13.515), Vector(-15.908, 12.702, 16.732), Vector(-26.768, 11.550, 23.992), Vector(-26.721, 11.550, 17.452),
			Vector(-27.605, 11.550, 21.992), Vector(-35.959, 10.821, 21.832), Vector(-32.015, 11.550, 23.893), Vector(-36.655, 10.472,
			24.103), Vector(-41.570, 8.516, 24.025), Vector(-37.945, 9.828, 21.865), Vector(-40.584, 9.007, 21.932), Vector(-42.302, 8.148,
			22.014), Vector(-45.571, 7.550, 22.088), Vector(-45.544, 7.550, 26.038), Vector(-47.431, 8.435, 31.937), Vector(-49.178, 9.303,
			32.011), Vector(-52.550, 9.550, 32.323), Vector(-48.377, 8.531, 22.271), Vector(-51.870, 9.085, 22.266), Vector(-51.540, 9.550,
			12.815), Vector(-47.308, 9.550, 9.028), Vector(-51.644, 9.550, 6.172), Vector(-54.577, 9.550, 9.565), Vector(-51.580, 10.432,
			3.825), Vector(-47.031, 10.550, 3.859), Vector(-48.924, 10.550, -1.523), Vector(-51.100, 10.550, -7.476), Vector(-55.051,
			10.550, -1.978), Vector(-45.880, 10.550, -6.520), Vector(-43.944, 9.550, -6.491), Vector(-44.769, 10.085, -6.600), Vector(
			-42.091, 8.730, -6.533), Vector(-40.512, 8.550, -6.254), Vector(-40.501, 7.788, -0.199), Vector(-41.479, 7.550, 9.061), Vector(
			-45.435, 8.648, 8.889), Vector(-43.555, 7.712, 8.855), Vector(-42.829, 10.586, 4.624), Vector(-33.329, 7.370, 12.946), Vector(
			-36.091, 7.396, 3.493), Vector(-51.275, 11.479, -9.515), Vector(-51.345, 12.391, -11.342), Vector(-44.818, 12.550, -13.835),
			Vector(-58.143, 12.550, -14.029), Vector(-57.880, 12.550, -23.176), Vector(-61.077, 13.425, -23.665), Vector(-63.578, 13.550,
			-27.429), Vector(-60.351, 13.567, -27.580), Vector(-60.351, 13.102, -27.580), Vector(-60.292, 13.032, -31.633), Vector(-57.395,
			12.550, -30.721), Vector(-57.537, 12.550, -35.992), Vector(-50.395, 12.550, -35.703), Vector(-50.612, 13.483, -33.101), Vector(
			-51.598, 14.550, -23.455), Vector(-53.948, 13.663, -23.807), Vector(-55.602, 12.836, -23.812), Vector(-50.218, 14.059,
			-31.943), Vector(-49.032, 14.550, -25.504), Vector(-44.643, 14.550, -22.471), Vector(-44.616, 13.870, -19.212), Vector(-44.528,
			12.942, -17.350), Vector(-39.398, 12.630, -10.213), Vector(-38.761, 12.640, -11.938), Vector(-35.652, 12.614, -9.933), Vector(
			-30.128, 12.407, -5.986), Vector(-31.082, 12.441, -13.671), Vector(-31.988, 12.467, -9.798), Vector(-24.762, 11.550, -2.292),
			Vector(-27.477, 11.255, -2.076), Vector(-32.684, 11.255, 0.951), Vector(-36.939, 7.390, -0.225), Vector(-40.548, 8.550,
			-13.665), Vector(-38.621, 8.121, -10.044), Vector(-38.642, 8.121, -5.010), Vector(-36.103, 7.390, -6.563), Vector(-35.918,
			7.390, -14.512), Vector(-37.966, 8.052, -15.430), Vector(-35.711, 7.975, -18.842), Vector(-39.054, 8.550, -20.178), Vector(
			-34.337, 8.550, -21.940), Vector(-32.524, 9.405, -21.974), Vector(-30.771, 10.277, -21.957), Vector(-29.075, 11.114, -21.936),
			Vector(-25.536, 11.550, -21.934), Vector(-25.701, 11.550, -17.970), Vector(-20.442, 11.568, -16.080), Vector(-21.077, 11.550,
			-19.150), Vector(-19.813, 11.550, -27.349), Vector(-34.802, 11.547, -29.554), Vector(-36.687, 11.547, -32.959), Vector(-36.945,
			11.580, -26.505), Vector(-33.161, 10.955, -33.597), Vector(-31.883, 10.038, -34.925), Vector(-29.862, 9.550, -36.612), Vector(
			-34.093, 8.851, -37.307), Vector(-37.399, 8.550, -37.294), Vector(-37.810, 8.050, -30.459), Vector(-38.027, 8.552, -24.635),
			Vector(-26.657, 9.585, -34.454), Vector(-27.246, 9.085, -34.207), Vector(-24.076, 8.550, -33.712), Vector(-23.508, 8.550,
			-38.789), Vector(-32.399, 8.550, -42.088), Vector(-38.922, 11.617, -30.051), Vector(-42.620, 11.850, -32.318), Vector(-42.570,
			12.550, -35.872), Vector(-46.716, 12.550, -36.817), Vector(-46.322, 12.550, -42.260), Vector(-39.791, 12.605, -40.673), Vector(
			-51.966, 12.550, -38.937), Vector(-45.606, 12.550, -48.338), Vector(-43.934, 11.550, -50.178), Vector(-44.615, 12.106,
			-49.305), Vector(-42.604, 10.698, -51.217), Vector(-40.142, 10.553, -52.543), Vector(-38.317, 9.753, -52.093), Vector(-34.957,
			8.961, -50.208), Vector(-30.887, 8.550, -45.788), Vector(-38.259, 10.550, -55.238), Vector(-33.689, 10.550, -55.405), Vector(
			-31.244, 10.573, -50.923), Vector(-29.319, 10.573, -52.598), Vector(-25.966, 10.596, -54.708), Vector(-33.767, 8.550, -46.938),
			Vector(-34.827, 9.540, -46.345), Vector(-35.589, 10.489, -45.770), Vector(-37.082, 11.120, -43.472), Vector(-28.414, 8.551,
			-49.368), Vector(-21.397, 8.558, -49.732), Vector(-16.448, 8.560, -54.430), Vector(-13.107, 8.550, -51.433), Vector(-16.551,
			8.600, -47.964), Vector(-9.669, 8.550, -48.526), Vector(-11.703, 7.722, -46.639), Vector(-13.063, 6.855, -45.527), Vector(
			-14.923, 6.479, -42.732), Vector(-17.696, 7.166, -39.798), Vector(-19.693, 8.044, -37.541), Vector(-23.345, 6.501, -45.311),
			Vector(-25.939, 7.177, -45.369), Vector(-27.767, 8.085, -45.398), Vector(-7.087, 9.241, -48.969), Vector(-4.234, 10.071,
			-48.234), Vector(-1.082, 10.550, -45.908), Vector(-3.721, 11.409, -43.511), Vector(-7.082, 11.550, -40.167), Vector(0.442,
			11.589, -39.777), Vector(-7.207, 11.589, -47.199), Vector(2.271, 9.963, -43.814), Vector(3.452, 8.984, -39.067), Vector(9.662,
			9.550, -39.388), Vector(13.063, 9.079, -33.659), Vector(10.214, 8.557, -27.785), Vector(6.791, 8.550, -24.855), Vector(4.107,
			8.550, -31.048), Vector(2.308, 8.550, -36.516), Vector(0.222, 7.776, -34.858), Vector(-1.259, 6.810, -33.606), Vector(-3.506,
			6.496, -31.548), Vector(-9.533, 6.478, -38.483), Vector(-6.866, 11.891, -35.489), Vector(-11.858, 11.899, -40.286), Vector(
			-12.504, 11.561, -34.748), Vector(-7.722, 11.595, -29.491), Vector(-6.979, 11.843, -32.209), Vector(-9.221, 11.594, -30.438),
			Vector(-10.929, 10.803, -28.223), Vector(-12.156, 9.893, -26.944), Vector(-13.696, 9.550, -25.341), Vector(-11.393, 8.805,
			-23.182), Vector(-10.106, 7.827, -21.698), Vector(-8.060, 7.550, -20.054), Vector(-5.678, 7.550, -27.936), Vector(-11.253,
			7.550, -32.937), Vector(-13.752, 7.550, -35.576), Vector(-20.554, 7.550, -29.991), Vector(-22.626, 8.182, -32.236), Vector(
			-17.697, 7.550, -27.305), Vector(-5.100, 7.108, -30.100), Vector(-1.343, 6.482, -25.781), Vector(-0.735, 7.099, -15.210),
			Vector(-4.729, 7.550, -13.805), Vector(-13.817, 11.561, -27.541), Vector(-16.645, 11.561, -30.960), Vector(-19.776, 11.591,
			-33.971), Vector(-15.803, 11.591, -37.863), Vector(-29.204, 11.550, -27.820), Vector(10.154, 8.230, -21.043), Vector(8.669,
			7.550, -12.955), Vector(3.586, 8.550, -22.077), Vector(3.980, 7.747, -17.124), Vector(3.328, 7.550, -13.300), Vector(1.828,
			8.600, -26.877), Vector(-4.144, 7.550, -18.894), Vector(-32.142, 7.390, -15.555), Vector(-25.171, 7.390, -13.827), Vector(
			-24.955, 7.390, -4.782), Vector(-33, 7.390, -1.717), Vector(-29.364, 8.129, -9.741), Vector(-25.021, 7.390, -9.610), Vector(
			-30.194, 7.719, -5.497), Vector(-20.840, 7.547, -12.878), Vector(-12.679, 7.550, -13.564), Vector(-8.930, 7.550, -16.357),
			Vector(-44.957, 14.550, -4.038), Vector(-42.656, 14.550, -1.714), Vector(-42.628, 14.560, 1.015), Vector(-44.260, 14.560,
			3.059));
		Global.Healthkits = Array(Vector(-29.062, 5.550, 44.376), Vector(-4.276, 7.390, 21.022), Vector(-44.016, 10.550, 4.135), Vector(
			-30.757, 12.444, -9.578), Vector(-61.528, 13.550, -27.523), Vector(-9.307, 11.886, -37.850), Vector(-31.352, 10.550, -53.389),
			Vector(13.697, 7.550, -15.103));
		Global.Objective1_Node = Array();
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Château Guillard")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(169.041, 6.550, 80.948), Vector(172.816, 6.550, 85.832), Vector(176.402, 6.550, 81.417), Vector(
			173.032, 6.550, 76.234), Vector(173.393, 7.103, 74.197), Vector(173.364, 8.022, 72.352), Vector(173.693, 8.551, 56.178),
			Vector(183.616, 9.549, 55.989), Vector(185.661, 9.560, 55.874), Vector(183.131, 9.550, 64.011), Vector(187.884, 9.560, 61.676),
			Vector(190.888, 9.550, 66.030), Vector(194.022, 9.550, 63.562), Vector(193.637, 9.550, 55.174), Vector(203.209, 9.550, 53.663),
			Vector(204.931, 9.550, 62.290), Vector(210.872, 9.550, 55.910), Vector(207.601, 9.750, 47.870), Vector(209.276, 10.697,
			45.163), Vector(211.332, 11.727, 45.026), Vector(213.258, 12.688, 45.041), Vector(210.349, 11.260, 45.036), Vector(217.141,
			13.550, 44.554), Vector(215.016, 13.550, 52.998), Vector(217.008, 13.814, 56.242), Vector(216.892, 14.716, 58.060), Vector(
			216.745, 15.550, 62.216), Vector(214.764, 15.560, 62.372), Vector(223.665, 14.989, 62.482), Vector(229.119, 14.550, 63.224),
			Vector(228.918, 13.773, 67.826), Vector(228.830, 12.779, 69.814), Vector(228.748, 11.859, 71.663), Vector(228.508, 10.976,
			73.441), Vector(229.193, 10.550, 77.073), Vector(229.481, 10.550, 79.828), Vector(229.458, 10.550, 84.764), Vector(234.360,
			10.547, 85.293), Vector(234.558, 10.548, 100.981), Vector(229.523, 10.548, 100.767), Vector(223.385, 9.754, 77.239), Vector(
			219.299, 9.550, 76.040), Vector(221.246, 9.550, 73.317), Vector(221.340, 10.212, 66.992), Vector(221.142, 10.550, 62.072),
			Vector(213.864, 10.005, 61.979), Vector(207.252, 9.550, 66.068), Vector(206.240, 10.026, 76.790), Vector(212.104, 10.550,
			81.265), Vector(199.507, 10.550, 81.492), Vector(216.446, 9.550, 79.367), Vector(219.506, 9.550, 83.275), Vector(219.030,
			9.550, 86.863), Vector(191.960, 9.550, 58.438), Vector(191.770, 5.256, 52.061), Vector(178.606, 1.550, 51.661), Vector(180.609,
			2.397, 51.658), Vector(182.336, 3.253, 51.613), Vector(184.050, 4.102, 51.654), Vector(188.323, 4.550, 52.109), Vector(188.630,
			4.550, 57.854), Vector(188.621, 3.551, 60.254), Vector(188.574, 2.588, 62.177), Vector(173.409, 8.550, 60.288), Vector(187.945,
			2.550, 68.770), Vector(193.340, 2.550, 69.092), Vector(193.438, 2.550, 78.102), Vector(196.219, 2.550, 74.925), Vector(196.363,
			2.550, 81.528), Vector(200.914, 1.860, 81.157), Vector(205.935, 1.590, 79.456), Vector(200.708, 1.967, 74.647), Vector(206.010,
			1.550, 75.139), Vector(212.140, 2.151, 75.346), Vector(212.110, 2.136, 81.539), Vector(216.401, 2.550, 78.171), Vector(190.544,
			2.550, 81.919), Vector(186.119, 2.550, 81.256), Vector(186.578, 2.549, 92.772), Vector(184.521, 3.550, 92.791), Vector(185.319,
			3.172, 92.788), Vector(182.643, 4.528, 92.850), Vector(180.826, 5.432, 92.801), Vector(178.956, 6.364, 92.752), Vector(176.186,
			6.550, 90.262), Vector(177.560, 6.548, 84.710), Vector(180.619, 7.403, 84.854), Vector(183.866, 7.550, 85.435), Vector(189.141,
			7.550, 81.204), Vector(185.384, 7.550, 80.633), Vector(182.428, 7.550, 75.704), Vector(179.396, 6.760, 75.464), Vector(183.506,
			8.073, 70.256), Vector(183.449, 8.821, 68.736), Vector(183.294, 9.550, 66.163), Vector(186.037, 7.550, 72.971), Vector(185.107,
			7.550, 92.075), Vector(181.491, 7.550, 91.143), Vector(188.025, 7.550, 91.831), Vector(190.697, 8.444, 92.821), Vector(192.510,
			9.344, 93.259), Vector(195.109, 9.550, 96.085), Vector(187.758, 9.550, 101.841), Vector(185.701, 10.497, 101.971), Vector(
			181.821, 10.550, 95.374), Vector(176.555, 10.550, 95.228), Vector(179.667, 11.185, 98.164), Vector(179.586, 12.059, 96.424),
			Vector(179.422, 10.550, 102.347), Vector(192.900, 9.550, 101.052), Vector(193.124, 10.073, 106.739), Vector(193.293, 10.550,
			111.025), Vector(200.656, 9.995, 110.619), Vector(206.392, 9.550, 110.099), Vector(205.678, 9.578, 101.653), Vector(198.609,
			9.550, 101.908), Vector(206.237, 10.162, 98.086), Vector(206.313, 10.578, 94.310), Vector(201.897, 10.024, 95.612), Vector(
			211.410, 9.599, 95.229), Vector(216.555, 9.550, 95.584), Vector(216.007, 9.550, 100.666), Vector(208.923, 9.550, 102.395),
			Vector(214.115, 9.280, 103.633), Vector(216.028, 8.326, 103.711), Vector(219.548, 7.550, 103.303), Vector(219.611, 6.840,
			100.293), Vector(219.632, 6.098, 98.789), Vector(219.582, 5.192, 96.965), Vector(219.515, 4.294, 95.161), Vector(218.814,
			3.550, 90.312), Vector(219.129, 2.843, 85.300), Vector(223.658, 3.550, 90.760), Vector(229.678, 3.550, 84.028), Vector(229.202,
			3.550, 90.998), Vector(237.729, 3.550, 97.709), Vector(231.138, 3.550, 98.851), Vector(237.772, 4.526, 99.600), Vector(237.829,
			5.361, 101.286), Vector(237.688, 5.550, 104.457), Vector(230.594, 5.550, 101.970), Vector(223.747, 7.550, 105.024), Vector(
			226.138, 6.741, 105.305), Vector(227.760, 5.942, 105.419), Vector(229.901, 5.549, 108.035), Vector(232.128, 5.549, 115.054),
			Vector(237.520, 5.550, 111.630), Vector(226.615, 6.017, 111.567), Vector(223.742, 6.550, 111.945), Vector(221.984, 7.256,
			112.023), Vector(219.281, 11.550, 108.296), Vector(210.934, 9.550, 111.659), Vector(215.593, 10.560, 92.133), Vector(195.179,
			18.050, 51.254), Vector(197.193, 18.050, 47.891), Vector(205.591, 18.050, 47.609), Vector(214.514, 18.050, 47.764), Vector(
			196.439, 18.050, 56.488), Vector(196.305, 18.050, 68.519));
		Global.Healthkits = Array(Vector(229.278, 14.550, 61.237), Vector(196.278, 18.050, 46.983), Vector(166.246, 6.550, 80.989), Vector(
			206.151, 1.550, 77.391), Vector(206.324, 10.550, 84.447), Vector(206.245, 10.550, 89.181), Vector(193.160, 10.550, 116.306));
		Global.Objective1_Node = Array();
		Global.Objective2_Node = Array();
		Global.Objective1_Nest = Array();
		Global.Objective2_Nest = Array();
		Global.Objective1_Choke_Group = Array();
		Global.Objective2_Choke_Group = Array();
	}
}

disabled rule("Hanamura")
{
	event
	{
		Subroutine;
		Hanamura;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(23.326, 1.550, -4.398), Vector(22.802, 1.572, -21.227), Vector(28.702, 2.522, -21.224), Vector(
			30.652, 3.486, -21.176), Vector(32.646, 4.471, -21.099), Vector(32.935, 4.715, -17.595), Vector(30.942, 5.698, -17.465),
			Vector(29.005, 6.655, -17.613), Vector(25.866, 7.550, -17.295), Vector(20.379, 8.008, -21.078), Vector(12.076, 8.321, -19.733),
			Vector(7.436, 8.550, -22.362), Vector(4.052, 8.550, -25.941), Vector(-4.010, 8.550, -20.266), Vector(-10.098, 8.550, -22.046),
			Vector(-10.159, 8.630, -27.940), Vector(1.909, 7.658, -25.935), Vector(0.010, 6.701, -25.966), Vector(-1.947, 5.716, -25.991),
			Vector(-3.874, 4.744, -25.950), Vector(-5.734, 3.832, -25.880), Vector(-7.511, 2.931, -25.889), Vector(-10.282, 2.550,
			-26.021), Vector(-10.448, 2.550, -22.072), Vector(-3.706, 2.550, -22.648), Vector(-4.502, 2.550, -18.663), Vector(2.903, 1.550,
			-18.511), Vector(12.677, 1.550, -24.341), Vector(13.540, 1.550, -18.551), Vector(17.102, 0.594, -4.198), Vector(13.787, 0.569,
			-10.678), Vector(6.207, 0.651, -7.531), Vector(10.580, 0.550, 0.575), Vector(8.623, 1.525, 0.772), Vector(4.805, 1.550, 0.009),
			Vector(2.516, 2.463, 0.083), Vector(-4.158, 2.550, -8.863), Vector(-11.794, 2.550, 0.321), Vector(-14.062, 2.550, 4.633),
			Vector(-14.137, 1.614, 7.168), Vector(-14.186, 0.696, 8.973), Vector(-14.148, 1.702, -4.990), Vector(-14.180, 0.751, -6.862),
			Vector(-14.752, 0.384, -18.711), Vector(-12.829, 1.333, -18.687), Vector(-11.024, 2.281, -18.686), Vector(-8.259, 2.550,
			-16.846), Vector(-19.305, 0.292, -18.511), Vector(-18.804, 0.367, -21.806), Vector(-17.097, 0.322, -32.425), Vector(-3.759,
			2.550, 6.258), Vector(-3.881, 3.482, 8.618), Vector(-3.906, 4.415, 10.510), Vector(-3.909, 5.320, 12.340), Vector(-4.273,
			5.550, 18.894), Vector(-3.077, 5.550, 26.993), Vector(-3.979, 5.522, 22.171), Vector(-14.486, 5.508, 21.405), Vector(-14.642,
			5.461, 11.854), Vector(10.242, 5.550, 22.690), Vector(10.454, 5.550, 17.067), Vector(12.812, 5.550, 22.339), Vector(14.063,
			5.615, 17.081), Vector(14.846, 5.550, 13.098), Vector(8.320, 5.573, 7.338), Vector(16.042, 5.576, 7.381), Vector(20.338, 5.710,
			8.857), Vector(18.820, 5.544, 15.065), Vector(18.568, 4.591, 17.195), Vector(18.567, 3.710, 18.930), Vector(22.071, 3.550,
			19.651), Vector(22.092, 2.717, 12.941), Vector(22.267, 1.725, 10.876), Vector(24.107, 1.550, 3.920), Vector(21.991, 2.779,
			24.805), Vector(18.173, 1.797, 27.807), Vector(16.326, 0.861, 28.081), Vector(8.611, 0.480, 32.047), Vector(-7.330, 1.357,
			30.815), Vector(-9.231, 2.322, 30.580), Vector(-11.935, 2.550, 30.355), Vector(-11.924, 2.550, 26.826), Vector(-8.322, 3.512,
			27.115), Vector(-6.973, 4.176, 27.096), Vector(-5.035, 5.135, 27.199), Vector(-44.941, 2.550, -113.131), Vector(-33.471, 2.550,
			-101.895), Vector(-23.513, 2.550, -111.756), Vector(-13.984, 2.550, -101.881), Vector(-33.613, 2.550, -81.852), Vector(-43.687,
			2.550, -92.405), Vector(-28.019, 2.550, -87.786), Vector(-22.425, 2.550, -89.371), Vector(-15.520, 2.550, -96.790), Vector(
			-8.919, 2.550, -105.899), Vector(-6.340, 3.445, -103.128), Vector(-5.174, 4.330, -101.811), Vector(-3.918, 5.243, -100.501),
			Vector(-2.668, 6.160, -99.172), Vector(-1.257, 7.115, -97.851), Vector(0.052, 8.070, -96.526), Vector(1.670, 8.560, -95.153),
			Vector(0.972, 8.560, -90.118), Vector(7.405, 8.550, -83.355), Vector(7.679, 8.560, -88.683), Vector(12.602, 8.550, -92.187),
			Vector(14.887, 7.583, -89.613), Vector(16.193, 6.662, -88.313), Vector(17.623, 5.706, -87.029), Vector(20.116, 5.550, -85.208),
			Vector(24.235, 5.296, -80.382), Vector(30.693, 4.550, -73.233), Vector(30.324, 4.550, -79.620), Vector(36.638, 4.550, -74.064),
			Vector(39.791, 4.550, -79.534), Vector(36.336, 4.550, -84.995), Vector(13.544, 5.550, -78.057), Vector(7.997, 5.550, -71.921),
			Vector(7.500, 5.550, -76.473), Vector(15.270, 5.550, -73.499), Vector(6.838, 6.449, -70.631), Vector(4.795, 6.550, -68.639),
			Vector(2.112, 6.560, -71.530), Vector(2.134, 5.806, -66.420), Vector(-2.505, 5.550, -66.774), Vector(0.288, 5.550, -58.229),
			Vector(-3.119, 5.550, -60.522), Vector(-4.678, 4.708, -58.827), Vector(-10.212, 4.550, -53.249), Vector(-14.223, 3.657,
			-57.600), Vector(-15.451, 2.697, -59.086), Vector(-20.232, 2.550, -63.176), Vector(-17.562, 2.550, -65.719), Vector(-26.464,
			2.550, -70.223), Vector(-28.304, 2.550, -54.307), Vector(-25.613, 1.507, -51.111), Vector(-26.318, 2.241, -52.485), Vector(
			-22.909, 0.550, -48.449), Vector(-17.935, 0.257, -53.594), Vector(-16.528, -0.721, -54.907), Vector(-15.175, -1.668, -56.187),
			Vector(-13.989, -2.508, -57.336), Vector(-10.600, -3.384, -61.734), Vector(-7.489, -3.550, -64.417), Vector(-13.447, -3.550,
			-69.901), Vector(-3.520, -3.550, -71.075), Vector(2.337, -3.550, -77.819), Vector(5.778, -3.468, -82.756), Vector(11.152,
			-3.550, -85.529), Vector(14.924, -3.450, -86.900), Vector(16.193, -3.450, -90.854), Vector(17.811, -3.450, -87.485), Vector(
			19.257, -2.505, -86.176), Vector(20.489, -1.575, -84.816), Vector(20.260, -1.247, -81.704), Vector(18.886, -0.277, -80.374),
			Vector(15.919, 0.550, -78.939), Vector(9.584, 0.550, -73.161), Vector(5.617, 0.550, -68.609), Vector(0.845, 0.550, -66.721),
			Vector(1.980, 0.919, -72.070), Vector(-0.694, 1.412, -74.516), Vector(-2.950, 0.722, -77.181), Vector(-5.583, 0.556, -75.642),
			Vector(-1.978, 0.625, -80.740), Vector(-9.561, 0.625, -74.101), Vector(-0.194, 0.625, -83.874), Vector(4.877, -2.923, -83.798),
			Vector(3.652, -2.144, -84.771), Vector(1.928, -1.381, -87.119), Vector(3.896, -0.470, -89.098), Vector(5.582, 0.447, -90.007),
			Vector(5.558, 0.550, -94.731), Vector(2.613, 0.625, -93.657), Vector(-2.068, 0.625, -90.092), Vector(-5.772, 0.625, -93.804),
			Vector(-7.377, 1.593, -95.274), Vector(-9.469, 2.550, -97.555), Vector(-24.881, 2.181, -72.069), Vector(-23.741, 1.537,
			-72.677), Vector(-18.287, 0.625, -77.741), Vector(-21.113, 1.350, -80.854), Vector(-22.402, 2.265, -82.153), Vector(-25.266,
			2.550, -84.710), Vector(-10.959, 0.625, -84.734), Vector(8.078, 0.025, -65.919), Vector(22.556, -0.366, -64.746), Vector(
			25.035, -0.326, -70.248), Vector(35.254, -0.334, -61.302), Vector(37.784, -0.422, -61.434), Vector(37.025, -0.293, -38.859),
			Vector(25.313, -0.101, -39.620), Vector(25.854, -0.234, -50.114), Vector(26, 0.742, -52.293), Vector(26.078, 1.709, -54.214),
			Vector(26.108, 2.633, -56.048), Vector(26.275, 3.465, -59.345), Vector(30.891, 3.905, -63.560), Vector(30.003, 4.426, -68.520),
			Vector(30.840, 3.297, -53.564), Vector(30.830, 3.390, -42.570), Vector(30.717, 3.550, -32.612), Vector(27.246, 3.550, -29.848),
			Vector(38.142, 3.550, -34.735), Vector(24.854, 2.621, -29.924), Vector(23.180, 1.773, -29.899), Vector(18.872, 1.550, -27.956),
			Vector(12.711, 1.550, -26.516), Vector(12.768, 1.545, -31.074), Vector(12.642, 0.587, -33.218), Vector(12.558, -0.201,
			-39.817), Vector(21.491, -0.121, -48.008), Vector(12.915, 0.326, -49.034), Vector(6.676, 0.080, -49.253), Vector(1.875, -0.325,
			-45.146), Vector(12.865, -0.178, -61.159), Vector(-4.788, -0.450, -44.349), Vector(-6.470, 0.440, -44.487), Vector(-8.360,
			0.705, -41.949), Vector(-8.635, 1.483, -40.417), Vector(-8.500, 2.394, -38.627), Vector(-8.729, 2.550, -36.650), Vector(-2.189,
			2.550, -37.564), Vector(-8.050, 2.550, -32.381), Vector(-4.343, 2.550, -29.667), Vector(5.460, 1.981, -29.559), Vector(11.122,
			1.550, -29.824), Vector(-10.145, 2.610, -27.910), Vector(-13.687, 2.550, -30.340), Vector(101.717, 3.550, 7.038), Vector(
			103.830, 2.647, 7.075), Vector(108.438, 2.550, 3), Vector(106.256, 2.550, -0.829), Vector(100.462, 1.901, -0.480), Vector(
			98.598, 0.936, -0.580), Vector(96.719, -0.038, -0.626), Vector(95.225, -0.812, -0.660), Vector(92.656, -1.450, -0.269), Vector(
			82.457, -1.450, -0.031), Vector(78.571, -0.739, 0.167), Vector(72.788, -0.420, -0.517), Vector(82.051, -1.450, 9.591), Vector(
			81.864, -1.450, 18.213), Vector(76.415, -0.451, 23.038), Vector(75.500, -0.385, 17.255), Vector(75.962, 0.532, 15.310), Vector(
			76.137, 1.378, 13.630), Vector(94.332, 3.550, 7.176), Vector(90.657, 3.550, 0.558), Vector(87.567, 3.550, 6.918), Vector(
			76.008, 3.550, 7.124), Vector(75.896, 2.691, 11.024), Vector(75.846, 1.749, 12.896), Vector(75.832, 0.827, 14.725), Vector(
			73.874, -0.452, 25.297), Vector(66.355, -0.455, 26.897), Vector(63.156, -0.511, 19.953), Vector(62.007, -0.214, 1.812), Vector(
			68.239, -0.345, 5.141), Vector(60.646, -0.447, 12.381), Vector(65.826, -0.321, -6.317), Vector(57.524, 0.473, -13.360), Vector(
			44.272, 1.419, -11.591), Vector(43.744, 2.322, -8.778), Vector(44.928, 2.549, -5.859), Vector(48.171, 1.603, -5.974), Vector(
			49.877, 0.738, -5.933), Vector(54.116, 0.550, -5.108), Vector(53.974, 0.550, 3.989), Vector(53.768, 0.026, 9.502), Vector(
			49.439, 0.467, 13.473), Vector(49.236, 0.608, 6.765), Vector(43.397, 1.424, 10.119), Vector(41.121, 2.550, 1.999), Vector(
			36.364, 1.747, 1.946), Vector(36.712, 1.716, 9.701), Vector(40.608, 1.795, 18.869), Vector(40.690, 1.865, 32.050), Vector(
			35.686, 2.817, 31.447), Vector(34.395, 3.454, 31.396), Vector(32.442, 4.419, 31.312), Vector(32.440, 4.550, 28.187), Vector(
			35.811, 4.550, 26.271), Vector(35.768, 5.510, 24.327), Vector(35.748, 6.339, 22.644), Vector(35.660, 7.282, 20.734), Vector(
			35.933, 7.550, 17.800), Vector(47.836, 7.550, 17.403), Vector(48.101, 7.550, 1.772), Vector(42.910, 7.550, 1.794), Vector(
			40.179, 7.550, -2.464), Vector(40.230, 7.550, -6.177), Vector(42.999, 7.550, -3.567), Vector(48.380, 7.550, -12.742), Vector(
			57.528, 7.550, -12.180), Vector(57.784, 7.550, -14.903), Vector(61.827, 7.550, -12.727), Vector(61.801, 7.550, -6.126), Vector(
			45.933, 7.550, -10.997), Vector(45.846, 7.550, 8.578), Vector(41.647, 7.550, 15.876), Vector(48.051, 6.598, -17.213), Vector(
			48.048, 5.739, -18.901), Vector(47.959, 4.780, -20.853), Vector(47.992, 3.866, -22.649), Vector(47.913, 3.550, -25.685),
			Vector(58.109, 3.550, -25.378), Vector(44.041, 2.725, -26.742), Vector(42.158, 1.769, -26.412), Vector(38.746, 1.572, -23.554),
			Vector(38.976, 1.501, -14.289), Vector(58.284, 3.550, -21.269), Vector(58.127, 2.581, -18.857), Vector(58.082, 1.618, -16.911),
			Vector(58.037, 0.811, -15.274), Vector(38.984, 1.499, -11.432), Vector(33.204, 1.649, -12.868), Vector(31.508, 1.640, -2.649),
			Vector(35.075, 1.755, 5.929), Vector(1.910, 0.550, 17.312), Vector(14.321, 0.550, 18.889), Vector(-13.861, 0.550, 18.621),
			Vector(6.323, 1.551, 8.883), Vector(13.904, 1.551, 8.651), Vector(22.280, 1.551, 8.729), Vector(13.843, 0.896, 12.593));
		Global.Healthkits = Array(Vector(25.659, 1.572, -23.521), Vector(2.024, 2.550, -22.003), Vector(-14.703, 5.429, 12.849), Vector(
			7.563, 5.550, 16.500), Vector(7.940, 0.389, 35.713), Vector(29.928, 4.550, -89.595), Vector(-13.098, 2.550, -61.352), Vector(
			-0.526, -3.550, -74.065), Vector(14.811, -3.450, -96.204), Vector(-0.999, 0.550, -97.554), Vector(29.831, -0.328, -65.271),
			Vector(38.656, -0.335, -38.688), Vector(12.915, 0.326, -49.037), Vector(0.574, 2.550, -36.499), Vector(45.192, 2.550, -0.798),
			Vector(40.854, 1.857, 34.598), Vector(52.121, 3.550, -27.883));
		Global.Objective1_Node = Array(0, Vector(2.282, 2.550, -7.324), Vector(0.265, 2.550, -7.317), Vector(-2.194, 2.550, -7.313),
			Vector(-5.152, 2.550, -7.260), Vector(-8.061, 2.550, -7.237), Vector(-10.591, 2.550, -7.237), Vector(-10.591, 2.550, -3.975),
			Vector(-8.090, 2.550, -4.008), Vector(-5.193, 2.550, -3.943), Vector(-2.347, 2.550, -3.904), Vector(0.322, 2.550, -3.844),
			Vector(2.332, 2.550, -3.799), Vector(2.251, 2.550, -0.081), Vector(0.101, 2.550, -0.096), Vector(-2.258, 2.550, -0.263),
			Vector(-6.379, 2.550, 0.251), Vector(-8.394, 2.550, 0.992), Vector(-10.663, 2.550, 0.918), Vector(-10.689, 2.550, 4.436),
			Vector(-8.319, 2.550, 4.513), Vector(-5.232, 2.550, 4.606), Vector(-2.856, 2.550, 4.637), Vector(0.062, 2.550, 4.609), Vector(
			2.270, 2.550, 4.669), Vector(2.188, 2.550, 8.444), Vector(-0.137, 2.550, 8.380), Vector(-2.720, 3.335, 8.322), Vector(-5.813,
			3.323, 8.298), Vector(-8.270, 2.550, 8.811), Vector(-10.793, 2.550, 8.774));
		Global.Objective2_Node = Array(Vector(-21.182, 0.625, -86.458), Vector(-19.057, 0.625, -88.496), Vector(-17.015, 0.800, -90.692),
			Vector(-15.043, 0.675, -92.204), Vector(-12.440, 0.625, -94.445), Vector(-10.310, 0.625, -92.211), Vector(-12.696, 0.625,
			-89.867), Vector(-14.521, 0.625, -88.070), Vector(-16.669, 0.625, -85.947), Vector(-18.729, 0.625, -83.919), Vector(-16.137,
			0.625, -81.284), Vector(-14.068, 0.625, -83.370), Vector(-11.895, 0.625, -85.464), Vector(-10.028, 0.625, -87.302), Vector(
			-7.724, 0.625, -89.687), Vector(-5.492, 0.625, -87.415), Vector(-7.864, 0.625, -85.083), Vector(-9.666, 0.625, -83.313),
			Vector(-11.855, 0.625, -81.160), Vector(-14.026, 0.625, -79.022), Vector(-11.996, 0.625, -76.922), Vector(-9.783, 0.625,
			-79.062), Vector(-7.607, 0.625, -81.206), Vector(-5.799, 0.625, -82.956), Vector(-3.323, 0.625, -85.344));
		Modify Global Variable(Path_Nodes, Remove From Array By Value, Null);
		Modify Global Variable(Healthkits, Remove From Array By Value, Null);
		Modify Global Variable(Objective1_Node, Remove From Array By Value, Null);
		Modify Global Variable(Objective2_Node, Remove From Array By Value, Null);
		Global.Objective1_Nest = Array(Vector(24.688, 1.550, -5.718), Vector(24.769, 1.550, -3.601), Vector(23.019, 1.550, -8.009), Vector(
			21.181, 1.550, -5.674), Vector(22.280, 1.550, -1.778), Vector(24.913, 1.550, 0.173), Vector(19.199, 5.616, 8.356), Vector(
			15.243, 5.597, 7.849), Vector(17.513, 5.550, 12.050), Vector(13.357, 5.702, 10.479), Vector(10.804, 5.577, 7.389), Vector(
			9.022, 5.688, 10.091), Vector(-0.696, 2.550, -18.028), Vector(-0.799, 2.550, -13.529), Vector(-3.443, 2.550, -16.679), Vector(
			-5.216, 2.550, -12.538), Vector(-5.414, 2.550, -18.533));
		Global.Objective2_Nest = Array(Vector(0.761, 8.560, -91.028), Vector(5.190, 8.560, -93.264), Vector(4.459, 8.560, -87.870), Vector(
			8.649, 8.560, -89.771), Vector(10.030, 8.560, -85.805), Vector(6.969, 8.560, -84.691), Vector(10.137, 8.560, -82.055), Vector(
			1.840, 6.550, -69.612), Vector(4.301, 6.550, -72.148), Vector(4.208, 6.550, -67.566), Vector(6.626, 6.550, -69.895), Vector(
			-7.631, 0.625, -85.442), Vector(-11.377, 0.625, -81.911), Vector(-9.797, 0.625, -87.835), Vector(-14.310, 0.625, -84.912),
			Vector(-13.268, 0.625, -89.736), Vector(-7.623, 0.625, -90.479), Vector(-15.741, 2.550, -97.410), Vector(-11.260, 2.550,
			-99.229), Vector(-16.713, 2.550, -100.937), Vector(-22.471, 2.550, -89.255), Vector(-27.054, 2.550, -90.162), Vector(-25.451,
			2.550, -84.949));
		Global.Objective1_Choke_Group = Array(Vector(31.951, 1.664, -1.649), Vector(28.830, 1.550, -3.797), Vector(32.325, 1.560, -5.380),
			Vector(26.874, 1.550, -6.124), Vector(27.238, 1.550, -1.578));
		Global.Objective2_Choke_Group = Array(Vector(8.104, -0.244, -62.158), Vector(11.367, -0.320, -64.958), Vector(13.452, -0.186,
			-61.258), Vector(9.690, -0.127, -59.861));
		Global.Chokepoint = Array(Vector(1.354, 1.320, -72.613), Vector(12.896, 1.550, -23.731), Vector(29.407, 1.810, -3.931));
	}
}

disabled rule("Horizon")
{
	event
	{
		Subroutine;
		Horizon;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(-27.416, 9.550, 11.435), Vector(-0.100, 9.550, 4.617), Vector(-7.170, 9.550, -9.529), Vector(
			-14.581, 9.550, -15.637), Vector(-15.857, 9.550, -26.488), Vector(-9.458, 10.520, -28.864), Vector(-7.786, 11.453, -29.705),
			Vector(-6.201, 12.373, -30.646), Vector(-2.515, 12.550, -29.396), Vector(0.755, 13.429, -25.270), Vector(1.588, 14.410,
			-23.489), Vector(2.438, 14.550, -19.884), Vector(4.976, 14.573, -23.815), Vector(7.042, 14.573, -30.751), Vector(18.957,
			14.550, 3.292), Vector(15.570, 13.753, 5.117), Vector(13.853, 12.795, 5.979), Vector(9.611, 11.855, 3.796), Vector(8.782,
			10.946, 2.176), Vector(10.340, 10.550, -1.775), Vector(1.970, 9.709, 0.845), Vector(5.918, 10.550, -0.720), Vector(4.788,
			10.573, -12.787), Vector(-1.953, 10.199, -8.784), Vector(11.757, 10.550, -8.720), Vector(19.299, 10.550, 3.716), Vector(31.798,
			10.550, -3.219), Vector(29.472, 10.550, -7.158), Vector(20.318, 10.550, -2.638), Vector(16.082, 10.550, -11.573), Vector(
			16.735, 10.550, -0.454), Vector(23.669, 10.550, 1.283), Vector(21.746, 14.560, 2.395), Vector(12.831, 14.550, -39.180), Vector(
			19.388, 14.550, -34.935), Vector(25.620, 14.550, -44.089), Vector(15.941, 14.550, -44.511), Vector(9.545, 13.660, -41.640),
			Vector(8.132, 12.761, -42.773), Vector(7.431, 12.550, -45.825), Vector(11.002, 11.631, -44.039), Vector(12.764, 10.663,
			-43.198), Vector(15.841, 10.573, -44.067), Vector(8.381, 10.550, -32.560), Vector(4.203, 10.550, -25.457), Vector(16.609,
			10.550, -27.218), Vector(12.130, 10.550, -18.763), Vector(20.970, 10.550, -33.806), Vector(21.967, 9.579, -35.688), Vector(
			22.828, 8.597, -37.470), Vector(23.321, 8.550, -43.913), Vector(21.521, 9.477, -44.918), Vector(20.209, 10.328, -46.032),
			Vector(40.929, 14.550, -47.438), Vector(44.645, 14.550, -44.961), Vector(42.932, 13.872, -41.957), Vector(44.334, 13.550,
			-37.203), Vector(46.449, 13.630, -34.344), Vector(51.945, 13.550, -34.786), Vector(44.901, 13.550, -32.636), Vector(49.181,
			13.573, -29.746), Vector(39.411, 13.550, -36.377), Vector(37.470, 13.550, -33.300), Vector(33.098, 13.550, -26.020), Vector(
			25.763, 13.893, -30.813), Vector(32.985, 13.630, -21.511), Vector(42.412, 8.550, -21.849), Vector(43.658, 9.509, -23.819),
			Vector(44.905, 10.478, -25.322), Vector(42.521, 11.451, -29.396), Vector(40.895, 12.440, -30.527), Vector(39.284, 13.390,
			-31.538), Vector(27.314, 8.550, -24.657), Vector(29.352, 8.550, -29.056), Vector(39.543, 8.550, -22.023), Vector(28, 8.550,
			-36.684), Vector(28.155, 8.550, -43.395), Vector(27.992, 8.550, -13.659), Vector(21.213, 9.468, -13.812), Vector(18.729,
			10.404, -12.364), Vector(39.067, 8.550, -13.452), Vector(47.677, 8.550, -16.572), Vector(51.232, 8.550, -14.584), Vector(
			54.486, 8.550, -12.242), Vector(56.807, 8.550, -23.028), Vector(60.130, 8.550, -21.062), Vector(55.119, 7.688, -27.992),
			Vector(58.291, 7.550, -33.512), Vector(48.866, 7.550, -39.633), Vector(37.271, 8.573, -52.009), Vector(34.885, 8.550, -45.072),
			Vector(40.399, 7.955, -43.176), Vector(50.457, 7.894, -44.832), Vector(47.379, 8.573, -52.526), Vector(57.547, 8.550, -46.274),
			Vector(52.697, 8.550, -49.892), Vector(64.108, 8.548, -42.002), Vector(66.429, 8.548, -45.288), Vector(58.461, 8.550, -55.792),
			Vector(49.036, 8.987, -58.546), Vector(41.714, 9.560, -64.718), Vector(38.537, 9.578, -68.146), Vector(32.131, 10.022,
			-66.099), Vector(31.030, 11.020, -64.436), Vector(30.054, 11.958, -62.828), Vector(29.062, 12.844, -61.354), Vector(28.666,
			13.599, -57.011), Vector(30.142, 14.515, -55.961), Vector(31.388, 15.255, -55.150), Vector(39.829, 15.551, -57.861), Vector(
			43.419, 15.550, -62.208), Vector(48.339, 15.550, -59.055), Vector(43.050, 15.550, -77.565), Vector(52.750, 15.550, -76.880),
			Vector(56.158, 15.550, -74.222), Vector(50.665, 15.550, -74.356), Vector(53.158, 15.577, -79.095), Vector(66.561, 15.549,
			-76.361), Vector(71.375, 15.550, -68.345), Vector(64.344, 15.551, -61.241), Vector(64.619, 15.551, -67.729), Vector(79.073,
			14.643, -62.070), Vector(78.266, 13.697, -60.210), Vector(77.868, 12.702, -58.236), Vector(77.504, 11.745, -56.331), Vector(
			75.590, 10.775, -52.730), Vector(74.530, 9.780, -51.046), Vector(73.657, 8.892, -49.494), Vector(71.203, 8.551, -46.265),
			Vector(76.291, 8.550, -43.657), Vector(81.479, 7.997, -40.294), Vector(86.816, 8.878, -46.295), Vector(88.186, 9.814, -48.478),
			Vector(89.515, 10.738, -50.491), Vector(90.513, 11.577, -52.717), Vector(91.346, 12.385, -55.231), Vector(92.288, 13.364,
			-59.170), Vector(92.125, 14.079, -67.425), Vector(88.367, 14.725, -71.735), Vector(83.015, 15.550, -72.555), Vector(78.074,
			15.550, -72.213), Vector(67.774, 8.550, -50.607), Vector(65.247, 7.991, -62.930), Vector(59.419, 7.543, -71.189), Vector(
			65.448, 7.545, -74.373), Vector(65.611, 8.416, -76.213), Vector(65.834, 9.381, -78.136), Vector(66.571, 9.550, -85.520),
			Vector(74.639, 10.529, -86.162), Vector(76.564, 11.506, -85.441), Vector(78.139, 12.381, -82.623), Vector(78.251, 13.362,
			-80.656), Vector(78.079, 14.298, -78.788), Vector(77.923, 15.243, -76.897), Vector(61.315, 10.418, -86.532), Vector(72.181,
			9.585, -81.286), Vector(72.435, 8.651, -79.390), Vector(74.573, 8.550, -71.861), Vector(68.165, 8.573, -68.531), Vector(79.695,
			8.550, -62), Vector(80.566, 8.522, -74.102), Vector(54.563, 7.931, -63.512), Vector(48.679, 7.549, -77.072), Vector(46.720,
			8.539, -77.081), Vector(45.010, 9.359, -77.099), Vector(42.256, 9.560, -77.492), Vector(40.343, 9.550, -86.533), Vector(42.325,
			9.550, -90.665), Vector(46.524, 10.392, -90.353), Vector(41.727, 9.550, -101.793), Vector(50.729, 9.550, -100.972), Vector(
			58.682, 9.550, -99.946), Vector(58.491, 10.378, -97.490), Vector(50.678, 10.451, -97.681), Vector(54.317, 10.551, -95.076),
			Vector(53.567, 11.024, -79.766), Vector(60.487, 10.550, -92.918), Vector(70.557, 10.842, -92.804), Vector(66.998, 10.550,
			-96.786), Vector(61.783, 10.550, -92.753), Vector(65.038, 10.500, -101.442), Vector(62.151, 9.550, -101.277), Vector(32.789,
			9.550, -85.840), Vector(30.771, 9.550, -100.633), Vector(27.046, 9.550, -94.068), Vector(22.431, 9.550, -98.566), Vector(
			22.101, 8.614, -88.982), Vector(26.233, 9.550, -84.399), Vector(28.262, 9.550, -81.537), Vector(30.366, 10.493, -81.589),
			Vector(32.213, 11.415, -81.583), Vector(34.156, 12.384, -81.610), Vector(35.979, 13.294, -81.583), Vector(37.776, 14.191,
			-81.586), Vector(39.761, 15.183, -81.533), Vector(43.038, 15.550, -81.244), Vector(16.711, 7.554, -98.623), Vector(19.123,
			8.527, -98.652), Vector(21.107, 9.518, -98.646), Vector(16.718, 7.550, -88.954), Vector(21.908, 8.541, -88.760), Vector(15.953,
			8.477, -86.120), Vector(4.705, 8.171, -82.659), Vector(2.260, 7.550, -90.033), Vector(-8.207, 7.550, -88.812), Vector(-12.908,
			7.550, -96.011), Vector(-5.666, 7.550, -99.081), Vector(2.240, 7.453, -101.379), Vector(11.191, 7.449, -96.003), Vector(11.587,
			7.523, -107.729), Vector(17.440, 7.550, -109.128), Vector(18.638, 7.550, -104.389), Vector(9.626, 8.525, -109.170), Vector(
			10.475, 8.129, -109.052), Vector(8.136, 9.464, -110.330), Vector(6.749, 10.335, -111.403), Vector(-4.130, 10.550, -114.604),
			Vector(-5.168, 11.508, -116.427), Vector(-4.062, 11.550, -121.655), Vector(-6.253, 10.781, -125.786), Vector(-14.110, 10.550,
			-140.366), Vector(-9.054, 9.657, -143.181), Vector(-7.421, 8.726, -144.078), Vector(-6.086, 8.549, -146.894), Vector(-10.666,
			7.584, -146.184), Vector(-12.430, 6.690, -145.693), Vector(-14.450, 6.573, -144.938), Vector(-18.784, 6.090, -138.869), Vector(
			-17.468, 6.050, -143.060), Vector(-18.129, 6.217, -148.333), Vector(-22.509, 6.050, -145.156), Vector(-22.738, 6.050,
			-140.563), Vector(-22.203, 6.050, -133.995), Vector(-30.459, 6.050, -132.309), Vector(-33.854, 6.050, -138.049), Vector(
			-26.159, 6.550, -154.141), Vector(-33.410, 6.550, -150.422), Vector(-35.814, 6.550, -156.349), Vector(-47.511, 6.623,
			-150.970), Vector(-43.046, 6.550, -140.485), Vector(-49.173, 6.550, -136.375), Vector(-47.589, 6.028, -131.453), Vector(
			-41.769, 6.050, -134.062), Vector(-39.472, 6.050, -127.583), Vector(-46.330, 6.050, -128.421), Vector(-50.588, 7.049,
			-127.079), Vector(-52.139, 8.003, -125.923), Vector(-54.174, 8.550, -123.145), Vector(-50.310, 9.490, -123.349), Vector(
			-48.547, 10.462, -124.176), Vector(-46.825, 11.435, -125.079), Vector(-39.719, 11.550, -127.133), Vector(-35.175, 11.550,
			-118.507), Vector(-35.886, 6.090, -126.625), Vector(-37.383, 6.050, -120.451), Vector(-42.696, 6.050, -117.668), Vector(
			-36.096, 5.958, -117.130), Vector(-35.285, 4.986, -115.354), Vector(-30.479, 4.550, -114.447), Vector(-34.684, 4.550,
			-124.077), Vector(-21.229, 4.550, -131.051), Vector(-18.354, 5.390, -137.560), Vector(-17.057, 4.548, -134.694), Vector(
			-14.100, 4.092, -131.918), Vector(-8.383, 3.546, -133.595), Vector(-14.727, 4.300, -121.911), Vector(-4.357, 4.550, -118.581),
			Vector(-4.474, 3.567, -128.716), Vector(-11.381, 4.550, -118.748), Vector(-19.624, 4.513, -115.519), Vector(-24.245, 4.485,
			-113.598), Vector(-17.970, 4.550, -111.511), Vector(-14.082, 4.664, -107.083), Vector(-12.720, 5.646, -104.492), Vector(
			-11.818, 6.465, -102.408), Vector(-10.533, 7.335, -100.367), Vector(-16.199, 7.550, -94.224), Vector(-17.984, 6.692, -95.373),
			Vector(-25.728, 6.050, -98.755), Vector(-28.302, 5.158, -103.466), Vector(-30.057, 4.550, -107.326), Vector(-32.134, 6.130,
			-96.315), Vector(-36.878, 6.050, -99.875), Vector(-39.950, 6.050, -108.674), Vector(-1.633, 4.550, -111.166), Vector(-0.520,
			5.517, -109.282), Vector(0.259, 6.251, -108.022), Vector(2.005, 7.158, -103.498), Vector(-48.896, 6.233, -167.993));
		Global.Healthkits = Array(Vector(17.785, 10.550, -48.410), Vector(35.802, 8.550, -33.875), Vector(61.589, 8.550, -22.842), Vector(
			37.134, 9.550, -74.545), Vector(87.323, 13.704, -59.122), Vector(73.564, 8.550, -61.042), Vector(33.807, 9.550, -103.131),
			Vector(15.069, 8.550, -78.844), Vector(15.993, 7.550, -109.974), Vector(-35.085, 6.550, -142.012), Vector(-5.590, 3.520,
			-132.643), Vector(-20.866, 6.050, -103.126), Vector(-36.796, 6.050, -108.786));
		Global.Objective1_Node = Array(Vector(49.346, 10.551, -95.103), Vector(51.597, 10.545, -94.944), Vector(54.162, 10.541, -94.772),
			Vector(56.654, 10.530, -94.624), Vector(58.985, 10.547, -94.713), Vector(58.870, 10.549, -91.409), Vector(56.502, 10.462,
			-91.449), Vector(54.065, 10.425, -91.531), Vector(51.399, 10.472, -91.711), Vector(49.225, 10.550, -92.002), Vector(49.080,
			10.550, -88.804), Vector(51.297, 10.472, -88.729), Vector(54.036, 10.409, -88.665), Vector(56.366, 10.462, -88.604), Vector(
			58.802, 10.530, -88.627), Vector(58.707, 10.550, -85.449), Vector(56.242, 10.452, -85.535), Vector(53.868, 10.408, -85.616),
			Vector(51.220, 10.456, -85.706), Vector(48.942, 10.550, -85.784), Vector(48.884, 10.550, -83.244), Vector(51.127, 10.517,
			-83.169), Vector(53.738, 10.461, -83.086), Vector(56.216, 10.506, -83.002), Vector(58.610, 10.549, -83.195), Vector(56.073,
			10.550, -80.563), Vector(53.647, 10.550, -80.643), Vector(50.952, 10.550, -80.784));
		Global.Objective2_Node = Array(Vector(-32.927, 4.300, -122.951), Vector(-30.697, 4.438, -124.027), Vector(-28.576, 4.328,
			-125.117), Vector(-26.432, 4.303, -126.215), Vector(-24.454, 4.301, -127.228), Vector(-22.474, 4.301, -128.189), Vector(
			-20.560, 4.261, -129.143), Vector(-19.199, 4.175, -126.675), Vector(-21.026, 4.270, -125.589), Vector(-23.104, 4.298,
			-124.645), Vector(-25.030, 4.389, -123.643), Vector(-27.272, 4.324, -122.538), Vector(-29.216, 4.314, -121.280), Vector(
			-31.259, 4.299, -119.980), Vector(-29.696, 4.289, -117.128), Vector(-27.618, 4.153, -118.258), Vector(-25.454, 4.172,
			-119.350), Vector(-23.442, 4.289, -120.596), Vector(-21.356, 4.279, -121.855), Vector(-19.573, 4.219, -122.778), Vector(
			-17.654, 4.189, -123.826), Vector(-16.043, 4.300, -120.845), Vector(-17.808, 4.300, -119.600), Vector(-19.548, 4.300,
			-118.652), Vector(-21.602, 4.302, -117.506), Vector(-23.773, 4.302, -116.324), Vector(-25.970, 4.294, -115.239), Vector(
			-28.108, 4.300, -114.078));
		Modify Global Variable(Path_Nodes, Remove From Array By Value, Null);
		Modify Global Variable(Healthkits, Remove From Array By Value, Null);
		Modify Global Variable(Objective1_Node, Remove From Array By Value, Null);
		Modify Global Variable(Objective2_Node, Remove From Array By Value, Null);
		Global.Objective1_Nest = Array(Vector(65.648, 15.550, -61.771), Vector(64.712, 15.550, -65.629), Vector(69.089, 15.550, -65.375),
			Vector(68.368, 15.640, -70.213), Vector(64.863, 15.550, -70.633), Vector(66.078, 15.550, -75.212), Vector(60.561, 15.550,
			-76.127), Vector(57.094, 15.576, -74.829), Vector(54.104, 15.564, -78.945), Vector(50.864, 15.550, -75.090), Vector(47.408,
			15.550, -77.558), Vector(42.196, 15.550, -73.396), Vector(48.877, 15.550, -60.478), Vector(46.775, 15.550, -63.558), Vector(
			43.170, 15.553, -69.554), Vector(55.937, 10.550, -81.370), Vector(50.107, 10.549, -81.666), Vector(54.021, 10.443, -83.731),
			Vector(58.336, 10.544, -83.891), Vector(51.439, 10.451, -85.904), Vector(67.356, 9.550, -80.923), Vector(63.880, 9.550,
			-81.350), Vector(66.735, 9.550, -83.981), Vector(41.434, 9.560, -79.468), Vector(43.626, 9.562, -80.836));
		Global.Objective2_Nest = Array(Vector(-13.942, 10.550, -136.744), Vector(-12.116, 10.550, -133.611), Vector(-10.914, 10.550,
			-130.501), Vector(-9.927, 10.550, -134.785), Vector(-12.069, 10.550, -138.237), Vector(-25.438, 6.050, -133.944), Vector(
			-20.994, 6.050, -134.927), Vector(-23.231, 6.050, -137.798), Vector(-18.954, 6.078, -138.678), Vector(-15.875, 6.050,
			-137.389), Vector(-34.632, 6.050, -128.298), Vector(-39.076, 6.050, -129.436), Vector(-38.029, 6.050, -125.763), Vector(
			-39.554, 6.050, -122.338), Vector(-35.814, 6.050, -120.097), Vector(-38.076, 11.550, -126.715), Vector(-36.203, 11.550,
			-123.024), Vector(-34.079, 11.550, -119.309), Vector(-33.572, 11.550, -116.244), Vector(-36.729, 11.550, -118.558), Vector(
			-38.622, 11.550, -122.834));
		Global.Objective1_Choke_Group = Array(Vector(50.944, 8.602, -50.004), Vector(53.236, 8.587, -53.308), Vector(56.174, 8.550,
			-51.037), Vector(54.179, 8.555, -48.084));
		Global.Objective2_Choke_Group = Array(Vector(13.286, 7.449, -103.295), Vector(10.306, 7.449, -105.283), Vector(8.322, 7.449,
			-102.554), Vector(11.892, 7.449, -101.919));
		Global.Chokepoint = Array(Vector(22.861, 8.911, -89.401), Vector(53.029, 8.548, -50.023), Vector(-9.780, 7.447, -100.178));
	}
}

disabled rule("Paris")
{
	event
	{
		Subroutine;
		Paris;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(24.308, 13.550, -86.868), Vector(23.233, 12.592, -85.093), Vector(22.769, 12.548, -79.475),
			Vector(29.892, 12.548, -76.696), Vector(34.438, 13.550, -81.461), Vector(33.281, 12.658, -79.778), Vector(30.198, 13.550,
			-85.401), Vector(16.810, 11.581, -61.484), Vector(21.483, 11.873, -62.732), Vector(15.809, 11.809, -65.854), Vector(17.494,
			12.550, -73.753), Vector(11.644, 12.550, -80.370), Vector(5.531, 11.574, -70.299), Vector(14.642, 11.474, -56.956), Vector(
			7.186, 11.572, -58.621), Vector(0.136, 11.545, -50.437), Vector(3.821, 11.474, -44.121), Vector(3.387, 12.315, -39.735),
			Vector(-0.338, 12.947, -31.899), Vector(-2.611, 13.916, -33.775), Vector(-3.838, 14.899, -35.372), Vector(-9.380, 15.550,
			-40.527), Vector(-15.859, 15.550, -34.054), Vector(-16.424, 15.550, -47.422), Vector(-4.767, 11.474, -54.710), Vector(-2.243,
			11.473, -57.638), Vector(-8.907, 11.550, -65.156), Vector(-4.641, 11.633, -68.622), Vector(8.162, 12.409, -74.641), Vector(
			-4.768, 11.633, -60.858), Vector(-12.900, 11.550, -60.118), Vector(-18.799, 11.633, -59.620), Vector(-14.162, 12.550, -64.260),
			Vector(-12.985, 13.514, -65.659), Vector(-11.703, 14.447, -67.017), Vector(-10.364, 15.404, -68.385), Vector(-5.953, 15.550,
			-67.937), Vector(-6.130, 16.534, -62.239), Vector(-7.168, 17.490, -60.578), Vector(-15.347, 17.550, -56.451), Vector(-13.034,
			11.474, -51.996), Vector(-19.818, 11.475, -48.423), Vector(-25.964, 11.475, -39.395), Vector(-24.867, 11.474, -34.675), Vector(
			-31.389, 11.593, -30.297), Vector(-26.480, 11.474, -25.889), Vector(-14.420, 11.890, -29.708), Vector(-9.382, 12.798, -27.309),
			Vector(-0.394, 12.938, -27.169), Vector(-23.582, 11.633, -22.876), Vector(-17.373, 11.550, -17.042), Vector(-19.134, 11.633,
			-14.117), Vector(-34.845, 11.473, -23.315), Vector(-38.467, 12.396, -26.553), Vector(-44.395, 12.608, -32.270), Vector(-47.827,
			13.593, -29.326), Vector(-49.462, 12.608, -36.065), Vector(-52.868, 13.540, -33.422), Vector(-52.045, 13.540, -26.407), Vector(
			-47.595, 13.540, -21.975), Vector(-52.490, 13.603, -19.204), Vector(-44.754, 15.540, -18.678), Vector(-46.020, 14.673,
			-20.160), Vector(-47.202, 13.796, -21.452), Vector(-39.745, 15.540, -17.723), Vector(-37.194, 15.542, -15.172), Vector(-33.074,
			15.540, -10.875), Vector(-33.070, 15.541, -6.737), Vector(-34.966, 15.541, -5.970), Vector(-36.656, 14.565, -4.472), Vector(
			-37.765, 13.740, -3.272), Vector(-38.852, 12.929, -2.080), Vector(-40.019, 12.040, -0.773), Vector(-42.078, 11.474, 3.258),
			Vector(-39.901, 15.542, -13.152), Vector(-47.741, 15.542, -12.277), Vector(-52.292, 16.540, -8.120), Vector(-56.816, 16.101,
			-3.688), Vector(-61.425, 15.540, 3.454), Vector(-67.860, 15.540, 1.828), Vector(-69.420, 15.540, -5.391), Vector(-57.788,
			14.563, 6.577), Vector(-56.302, 13.575, 8.331), Vector(-73.015, 14.639, -8.838), Vector(-74.202, 13.700, -10.270), Vector(
			-64.368, 15.625, -7.200), Vector(-62.928, 14.653, -8.572), Vector(-61.676, 13.790, -9.754), Vector(-58.669, 13.403, -13.666),
			Vector(-55.187, 12.498, -9.781), Vector(-52.676, 11.815, -7.144), Vector(-46.318, 11.574, 5.506), Vector(-47.927, 12.568,
			7.071), Vector(-49.518, 13.486, 8.559), Vector(-42.393, 13.540, 16.341), Vector(-39.757, 12.676, 13.648), Vector(-40.989,
			12.471, 13.282), Vector(-39.034, 11.574, 8.542), Vector(-37.390, 11.474, 3.600), Vector(-29.443, 11.474, -2.861), Vector(
			-29.312, 11.474, -12.457), Vector(-21, 11.572, -9.315), Vector(-21.392, 11.573, -3.425), Vector(-23.092, 12.524, -2), Vector(
			-24.381, 13.401, -0.795), Vector(-25.546, 14.300, 0.558), Vector(-26.342, 14.625, 4.581), Vector(-27.507, 14.625, 8.386),
			Vector(-23.124, 14.625, 1.338), Vector(-23.138, 14.540, 4.392), Vector(-20.086, 14.540, 2.523), Vector(-27.838, 14.816,
			11.644), Vector(-26.646, 15.655, 12.818), Vector(-24.048, 16.540, 15.398), Vector(-34.038, 16.540, 24.406), Vector(-37.632,
			17.516, 20.534), Vector(-38.891, 17.489, 17.682), Vector(-42.334, 17.540, 25.215), Vector(-47.311, 17.620, 25.466), Vector(
			-47.192, 17.546, 20.869), Vector(-50.281, 17.546, 23.958), Vector(-47.102, 17.542, 33.250), Vector(-45.875, 16.599, 34.938),
			Vector(-44.578, 15.655, 36.315), Vector(-38.457, 15.025, 35.870), Vector(-37.055, 14.138, 34.808), Vector(-34.258, 13.541,
			32.160), Vector(-47.296, 13.620, 25.579), Vector(-41.280, 13.542, 28.620), Vector(-32.284, 13.231, 34.058), Vector(-31.041,
			12.314, 35.409), Vector(-28.919, 11.540, 37.268), Vector(-24.897, 11.540, 34.357), Vector(-29.128, 11.540, 19.524), Vector(
			-29.882, 11.574, 18.698), Vector(-22.312, 11.603, 20.280), Vector(-28.698, 11.603, 26.504), Vector(-17.599, 11.540, 25.202),
			Vector(-21.853, 11.540, 31.282), Vector(-50.795, 13.540, 20.952), Vector(-68.318, 13.526, -17.811), Vector(-58.050, 13.505,
			-21.887), Vector(-66.350, 13.410, -25.324), Vector(-82.797, 13.504, -16.606), Vector(-84.073, 12.645, -18.374), Vector(-84.994,
			11.731, -19.785), Vector(-77.914, 11.405, -35.128), Vector(-68.773, 12.186, -30.081), Vector(-65.271, 11.554, -42.475), Vector(
			-67.567, 13.124, -27.575), Vector(-75.853, 13.539, -15.291), Vector(-81.719, 11.559, -26.639), Vector(-88.970, 11.434,
			-28.746), Vector(-95.691, 12.324, -38.385), Vector(-88.967, 12.464, -45.159), Vector(-83.948, 11.530, -45.098), Vector(-72.240,
			11.554, -51.136), Vector(-68.157, 12.405, -55.257), Vector(-78.327, 11.405, -49.955), Vector(-80.091, 12.222, -53.616), Vector(
			-80.903, 13.125, -55.273), Vector(-86.185, 13.550, -64.647), Vector(-100.342, 13.550, -57.923), Vector(-98.006, 13.550,
			-53.313), Vector(-108.955, 13.550, -47.788), Vector(-105.662, 12.886, -42.170), Vector(-103.850, 12.321, -36.444), Vector(
			-103.217, 13.550, -53.419), Vector(-104.395, 12.699, -55.507), Vector(-105.166, 11.899, -56.902), Vector(-110.349, 11.550,
			-62.061), Vector(-116.872, 11.550, -61.056), Vector(-121.681, 11.340, -54.212), Vector(-117.191, 11.400, -45.109), Vector(
			-113.979, 12.325, -43.588), Vector(-118.589, 12.389, -41.081), Vector(-113.513, 12.565, -32.895), Vector(-108.806, 12.328,
			-34.822), Vector(-108.825, 11.550, -68.974), Vector(-115.904, 11.550, -70.885), Vector(-118.214, 12.452, -76.580), Vector(
			-109.761, 12.544, -76.062), Vector(-108.021, 13.512, -76.902), Vector(-105.438, 13.550, -78.296), Vector(-106.996, 12.471,
			-70.135), Vector(-105.413, 13.393, -71.076), Vector(-102.627, 13.550, -72.528), Vector(-118.986, 13.425, -78.361), Vector(
			-119.795, 14.385, -80.093), Vector(-120.155, 14.550, -86.092), Vector(-110.381, 14.550, -82.038), Vector(-112.749, 14.550,
			-87.297), Vector(-110.830, 13.700, -88.072), Vector(-108.383, 13.708, -83.146), Vector(-105.904, 13.550, -87.414), Vector(
			-118.469, 14.550, -96.360), Vector(-109.806, 15.430, -97.653), Vector(-117.289, 14.550, -91.677), Vector(-108.063, 16.382,
			-98.415), Vector(-104.335, 16.550, -100.534), Vector(-100.168, 16.550, -92.241), Vector(-104.779, 16.550, -89.910), Vector(
			-95.170, 16.550, -94.644), Vector(-100.291, 16.578, -102.036), Vector(-98.430, 15.592, -102.935), Vector(-96.850, 14.713,
			-103.705), Vector(-91.974, 14.550, -109.413), Vector(-87.093, 14.550, -104.819), Vector(-79.340, 14.549, -99.613), Vector(
			-78.409, 15.478, -97.801), Vector(-77.625, 16.323, -96.296), Vector(-76.290, 16.550, -92.112), Vector(-82.639, 16.550,
			-89.213), Vector(-79.969, 16.550, -83.793), Vector(-76.407, 16.550, -84.858), Vector(-69.189, 16.550, -88.979), Vector(-61.125,
			16.550, -90.167), Vector(-60.077, 15.677, -87.894), Vector(-59.216, 14.751, -86.261), Vector(-63.515, 14.550, -79.509), Vector(
			-60.572, 13.643, -74.161), Vector(-59.738, 12.710, -72.496), Vector(-56.494, 12.447, -66.895), Vector(-62.180, 12.550,
			-67.923), Vector(-64.152, 12.541, -64.238), Vector(-71.022, 14.550, -71.084), Vector(-77.475, 13.824, -68.435), Vector(-88.212,
			14.550, -98.996), Vector(-89.966, 13.683, -98.174), Vector(-84.246, 14.550, -97.373), Vector(-87.185, 13.779, -92.916), Vector(
			-92.984, 13.550, -94.422), Vector(-91.114, 13.550, -74.971), Vector(-87.633, 13.550, -67.280), Vector(-63.761, 12.402,
			-58.793), Vector(-55.543, 12.404, -63.474), Vector(-53.702, 11.410, -59.860), Vector(-48.319, 10.247, -56.678), Vector(-51.024,
			10.689, -49.133), Vector(-56.052, 10.569, -51.056), Vector(-58.155, 11.433, -38.886), Vector(-108.946, 16.550, -110.585),
			Vector(-114.325, 16.550, -105.830), Vector(-116.211, 15.646, -104.893), Vector(-117.785, 14.748, -104.030), Vector(-121.455,
			14.550, -102.134), Vector(-101.859, 16.550, -111.913), Vector(-100.123, 15.662, -112.845), Vector(-98.423, 14.726, -113.629),
			Vector(-94.810, 14.550, -114.972));
		Global.Healthkits = Array(Vector(-0.459, 11.545, -49.716), Vector(-15.744, 11.550, -58.358), Vector(-30.611, 11.574, -39.974),
			Vector(-14.948, 11.550, -21.028), Vector(-39.738, 12.608, -40.028), Vector(-69.493, 15.540, 1.987), Vector(-17.387, 14.540,
			4.047), Vector(-40.978, 13.542, 25.279), Vector(-73.186, 11.567, -38.450), Vector(-124.840, 11.550, -56.307), Vector(-46.444,
			10.256, -57.439));
		Global.Objective1_Node = Array(Vector(-54.907, 13.574, 21.648), Vector(-56.303, 13.574, 20.432), Vector(-57.615, 13.574, 18.510),
			Vector(-58.849, 13.574, 16.937), Vector(-60.297, 13.574, 15.188), Vector(-61.929, 13.574, 13.528), Vector(-59.766, 13.574,
			11.352), Vector(-58.062, 13.574, 13.080), Vector(-56.551, 13.574, 14.614), Vector(-55.110, 13.574, 16.070), Vector(-53.497,
			13.574, 17.712), Vector(-52.265, 13.574, 18.995), Vector(-49.944, 13.574, 16.708), Vector(-51.201, 13.574, 15.562), Vector(
			-52.773, 13.574, 13.967), Vector(-54.328, 13.574, 12.485), Vector(-55.847, 13.574, 10.999), Vector(-57.591, 13.574, 9.272),
			Vector(-55.853, 13.573, 7.360), Vector(-54.024, 13.573, 8.948), Vector(-52.370, 13.573, 10.604), Vector(-50.940, 13.573,
			12.034), Vector(-49.305, 13.573, 13.671), Vector(-48.108, 13.573, 14.867), Vector(-45.892, 13.573, 12.610), Vector(-46.960,
			13.550, 11.516), Vector(-48.601, 13.540, 9.794), Vector(-49.991, 13.540, 8.443), Vector(-51.672, 13.540, 6.683), Vector(
			-53.367, 13.575, 4.898));
		Global.Objective2_Node = Array(Vector(-98.932, 13.650, -72.609), Vector(-99.779, 13.650, -74.436), Vector(-100.882, 13.551,
			-76.812), Vector(-101.996, 13.551, -79.128), Vector(-103.070, 13.551, -81.358), Vector(-104.357, 13.650, -84.031), Vector(
			-105.217, 13.650, -85.680), Vector(-102.654, 13.650, -86.902), Vector(-101.553, 13.650, -84.668), Vector(-100.628, 13.650,
			-82.793), Vector(-99.405, 13.650, -80.319), Vector(-98.240, 13.650, -78.031), Vector(-97.071, 13.650, -75.711), Vector(-96.176,
			13.650, -73.894), Vector(-93.883, 13.550, -75.049), Vector(-94.844, 13.650, -77.011), Vector(-95.955, 13.650, -79.260), Vector(
			-97.135, 13.696, -81.494), Vector(-98.215, 13.650, -83.682), Vector(-99.277, 13.650, -85.842), Vector(-100.234, 13.550,
			-87.766), Vector(-97.555, 13.550, -89.086), Vector(-96.620, 13.550, -87.190), Vector(-95.482, 13.650, -84.874), Vector(-93.312,
			13.684, -80.612), Vector(-92.148, 13.650, -78.256), Vector(-91.198, 13.550, -76.312), Vector(-88.307, 13.650, -77.736), Vector(
			-89.251, 13.650, -79.644), Vector(-90.452, 13.650, -82.040), Vector(-91.538, 13.650, -84.237), Vector(-92.537, 13.650,
			-86.244), Vector(-93.718, 13.650, -88.599), Vector(-94.713, 13.650, -90.569), Vector(-92.105, 13.650, -91.834), Vector(-91.149,
			13.650, -89.917), Vector(-90.044, 13.550, -87.675), Vector(-88.973, 13.550, -85.507), Vector(-87.867, 13.550, -83.271), Vector(
			-86.745, 13.650, -81.001), Vector(-85.724, 13.650, -78.934));
		Modify Global Variable(Path_Nodes, Remove From Array By Value, Null);
		Modify Global Variable(Healthkits, Remove From Array By Value, Null);
		Modify Global Variable(Objective1_Node, Remove From Array By Value, Null);
		Modify Global Variable(Objective2_Node, Remove From Array By Value, Null);
		Global.Objective1_Nest = Array(Vector(-38.422, 15.542, -14.176), Vector(-40.538, 15.542, -17.570), Vector(-40.353, 15.542,
			-14.079), Vector(-42.920, 15.542, -17.157), Vector(-43.144, 15.542, -13.441), Vector(-40.373, 15.542, -11.708), Vector(-33.424,
			15.542, -10.466), Vector(-33.284, 15.542, -6.759), Vector(-34.927, 15.542, -9.339));
		Global.Objective2_Nest = Array(Vector(-89.420, 13.550, -76.363), Vector(-92.104, 13.550, -74.048), Vector(-95.856, 13.650,
			-72.643), Vector(-95.133, 13.650, -76.099), Vector(-91.394, 13.548, -77.241), Vector(-88.242, 13.650, -80.221), Vector(-92.472,
			13.681, -81.016), Vector(-96.150, 13.650, -79.145), Vector(-98.799, 13.650, -77.776));
		Global.Objective1_Choke_Group = Array(Vector(-24.074, 11.474, -26.348), Vector(-26.805, 11.474, -23.763), Vector(-28.647, 11.474,
			-25.903), Vector(-26.438, 11.474, -27.873));
		Global.Objective2_Choke_Group = Array(Vector(-81.222, 11.553, -51.088), Vector(-78.822, 11.553, -52.174), Vector(-77.331, 11.405,
			-48.931), Vector(-79.579, 11.405, -47.737));
		Global.Chokepoint = Array(Vector(-26.675, 11.474, -25.732), Vector(-67.638, 13.232, -27.185), Vector(-86.523, 13.550, -64.709));
	}
}

disabled rule("Temple Of Anubis")
{
	event
	{
		Subroutine;
		Temple_of_Anubus;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(3.981, 3.323, -36.909), Vector(8.605, 3.323, -40.174), Vector(10.350, 2.380, -39.130), Vector(
			9.493, 2.323, -32.820), Vector(16.271, 2.323, -28.814), Vector(11.492, 2.323, -25.745), Vector(12.426, 2.323, -22.622), Vector(
			7.483, 2.323, -22.075), Vector(2.859, 2.182, -20.228), Vector(4.930, 2.323, -34.192), Vector(-0.946, 2.323, -27.882), Vector(
			-0.890, 2.323, -31.785), Vector(-5.666, 1.655, -35.395), Vector(-7.397, 0.710, -36.599), Vector(-9.019, -0.167, -37.667),
			Vector(-15.634, -0.714, -40.979), Vector(-24.713, -0.731, -33.487), Vector(18.208, 2.323, -18.646), Vector(26.765, 2.134,
			-12.078), Vector(15.455, 1.629, 7.748), Vector(9.596, 0.758, 5.791), Vector(7.223, -0.122, 4.545), Vector(-0.603, -0.850,
			-7.807), Vector(2.040, 1.242, -17.655), Vector(0.648, 0.367, -15.716), Vector(-0.534, -0.299, -13.284), Vector(-8.120, -0.646,
			-14.031), Vector(-4.440, 0.061, -20.606), Vector(-10.896, -0.382, -21.944), Vector(-15.909, -0.172, -11.113), Vector(-8.391,
			-1.053, -5.085), Vector(-6.120, -1.241, -2.344), Vector(-2.388, -1.241, 1.979), Vector(2.731, -1.241, 2.453), Vector(4.607,
			0.186, 6.330), Vector(3.319, 1.078, 7.615), Vector(2.337, 1.962, 9.423), Vector(0.592, 2.513, 13.336), Vector(-13.926, 2.496,
			3.645), Vector(-11.749, 1.541, 0.104), Vector(-10.845, 0.594, -1.546), Vector(-9.729, -0.331, -3.032), Vector(3.717, 2.730,
			18.015), Vector(6.987, 3.138, 16.431), Vector(8.723, 4.109, 17.282), Vector(10.011, 4.862, 18.037), Vector(13.229, 5.657,
			19.823), Vector(14.922, 5.657, 12.658), Vector(-7.994, 2.654, 9.724), Vector(-7.889, 3.091, 2.076), Vector(-1.576, 3.226,
			0.606), Vector(0.355, 3.079, 6.900), Vector(-7.572, 2.498, 14.516), Vector(-13.043, 2.554, 11.881), Vector(-21.034, 2.402,
			1.635), Vector(-22.778, 2.577, -3.143), Vector(-25.375, -0.728, -14.787), Vector(-18.387, -0.509, -24.928), Vector(-27.084,
			-0.728, -25.613), Vector(-6.457, 2.629, 19.267), Vector(-1.267, 2.589, 26.096), Vector(2.813, 2.473, 28.497), Vector(-1.299,
			3.394, 38.989), Vector(-6.648, 4.059, 44.664), Vector(-8.511, 4.911, 43.357), Vector(-10.161, 5.893, 42.263), Vector(-15.921,
			6.061, 38.065), Vector(-24.726, 6.061, 33.197), Vector(-19.987, 6.061, 28.189), Vector(-28.536, 6.191, 37.751), Vector(-27.643,
			6.852, 30.812), Vector(-28.917, 7.732, 29.503), Vector(-34.179, 7.604, 26.507), Vector(-36.021, 7.059, 25.417), Vector(-45.139,
			7.059, 19.741), Vector(-40.138, 6.559, 13.144), Vector(-36.286, 5.585, 15.866), Vector(-34.780, 4.654, 16.942), Vector(-33.139,
			3.666, 18.013), Vector(-28.941, 3.015, 19.977), Vector(-24.721, 2.059, 14.081), Vector(-19.301, 2.135, 17.240), Vector(-14.574,
			2.289, 21.322), Vector(-10.462, 2.423, 19.912), Vector(-15.463, 2.406, 17.225), Vector(-30.817, 8.060, 27.353), Vector(-32.288,
			8.060, 29.569), Vector(-10.741, 2.335, 28.327), Vector(-19.667, 2.243, 24.550), Vector(-30.630, 2.881, 27.033), Vector(-34.976,
			7.081, 23.741), Vector(-42.905, 6.678, 11.031), Vector(-44.502, 7.550, 10.085), Vector(-46.238, 8.545, 9.064), Vector(-50.541,
			9.061, 9.373), Vector(-48.501, 9.911, 13.151), Vector(-46.866, 10.874, 14.209), Vector(-43.375, 11.059, 16.044), Vector(
			-52.130, 11.059, 27.075), Vector(-48.726, 11.059, 36.395), Vector(-52.483, 11.081, 36.699), Vector(-46.487, 11.093, 33.530),
			Vector(-57.040, 11.072, 33.868), Vector(-58.511, 10.117, 35.670), Vector(-59.773, 9.244, 37.215), Vector(-60.707, 8.422,
			38.830), Vector(-60.800, 8.059, 43.578), Vector(-57.557, 8.089, 43.809), Vector(-37.469, 7.024, 27.497), Vector(-38.465, 6.060,
			29.129), Vector(-39.447, 5.115, 30.733), Vector(-40.458, 4.140, 32.383), Vector(-41.364, 3.243, 33.913), Vector(-57.066, 3.050,
			44.937), Vector(-62.014, 3.070, 47.782), Vector(-56.681, 3.070, 53.479), Vector(-52.138, 3.103, 48.145), Vector(-51.954, 3.060,
			40.871), Vector(-33.749, 2.892, 33.908), Vector(-37.396, 3.065, 38.026), Vector(-37.841, 3.215, 45.675), Vector(-33.353, 3.540,
			50.425), Vector(-39.317, 3.050, 55.631), Vector(-43.026, 3.092, 53.282), Vector(-46.277, 3.048, 54.587), Vector(-44.500, 3.907,
			57.662), Vector(-43.338, 4.877, 59.204), Vector(-42.233, 5.769, 60.591), Vector(-41.025, 6.736, 62.082), Vector(-36.401, 7.050,
			62.855), Vector(-32.103, 7.050, 60.790), Vector(-33.309, 7.550, 67.096), Vector(-30.712, 2.873, 40.070), Vector(-24.408, 2.905,
			46.099), Vector(-32.954, 3.129, 61.572), Vector(-36.044, 3.050, 61.034), Vector(-39.771, 3.050, 65.068), Vector(-36.733, 3.075,
			75.030), Vector(-38.827, 3.050, 70.155), Vector(-31.122, 3.075, 73.341), Vector(-27.624, 3.047, 71.465), Vector(-32.392, 3.025,
			65.569), Vector(-26.918, 3.022, 58.088), Vector(-19.399, 2.876, 52.859), Vector(-15.577, 2.849, 57.189), Vector(-21.410, 3.060,
			61.128), Vector(-22.348, 3.116, 68.305), Vector(-22.055, 3.087, 74.105), Vector(-19.950, 3.644, 74.086), Vector(-18.036, 4.585,
			74.113), Vector(-10.519, 5.541, 73.926), Vector(-17.301, 3.072, 67.891), Vector(-10.261, 3.311, 66.558), Vector(-9.951, 4.194,
			68.778), Vector(-9.692, 5.136, 70.670), Vector(-4.031, 5.541, 74.734), Vector(0.158, 5.065, 68.868), Vector(-0.355, 5.061,
			62.586), Vector(6.359, 5.081, 61.843), Vector(6.836, 5.156, 67.564), Vector(7.588, 5.172, 74.153), Vector(5.893, 6.050,
			55.047), Vector(0.450, 6.729, 55.455), Vector(-8.055, 7.114, 58.641), Vector(-9.808, 5.541, 79.612), Vector(-17.036, 6.228,
			77.519), Vector(-26.804, 6.210, 79.479), Vector(-28.017, 7.153, 75.910), Vector(-28.048, 7.692, 72.809), Vector(-25.347, 6.166,
			87.880), Vector(-24.884, 6.214, 96.300), Vector(-24.551, 7.114, 97.304), Vector(-15.897, 6.206, 96.733), Vector(-9.422, 6.290,
			95.581), Vector(-9.440, 6.212, 86.866), Vector(-15.127, 6.248, 87.442), Vector(-3.545, 5.255, 86.524), Vector(-0.059, 4.442,
			86.523), Vector(5.385, 5.610, 80.748), Vector(5.259, 4.755, 83.488), Vector(5.319, 4.167, 87.537), Vector(10.720, 3.949,
			88.664), Vector(13.529, 3.949, 89.672), Vector(13.397, 3.024, 92.049), Vector(13.633, 2.050, 99.483), Vector(8.396, 2.062,
			99.683), Vector(17.627, 3.949, 89.987), Vector(18.884, 3.949, 103.573), Vector(14.060, 4.771, 104.724), Vector(12.164, 5.717,
			105.022), Vector(8.534, 6.123, 104.435), Vector(9.366, 5.963, 113.623), Vector(3.903, 6.137, 114.078), Vector(17.169, 5.963,
			114.495), Vector(12.348, 6.384, 118.744), Vector(9.042, 5.963, 121.403), Vector(10.482, 6.043, 129.826), Vector(-4.997, 6.046,
			130.729), Vector(-4.456, 6.049, 137.092), Vector(-11.769, 5.845, 137.419), Vector(-9.985, 5.845, 142.967), Vector(-12.546,
			6.773, 133.667), Vector(-12.720, 7.603, 131.996), Vector(-12.630, 7.983, 126.615), Vector(-20.021, 6.999, 127.331), Vector(
			-22.922, 6.023, 127.560), Vector(-27.474, 6.121, 117.348), Vector(-19.323, 6.229, 116.260), Vector(4.633, 2.235, 96.479),
			Vector(5.169, 3.114, 91.534), Vector(2.424, 2.221, 94.692), Vector(2.855, 2.367, 101.063), Vector(-1.624, 1.990, 95.833),
			Vector(-0.395, 2.204, 101.059), Vector(-4.311, 1.251, 100.651), Vector(-12.071, 2.293, 102.369), Vector(-8.874, 1.462,
			100.141), Vector(-14.197, 3.215, 102.740), Vector(-21.413, 4.233, 104.737), Vector(-17.107, 4.057, 103.253), Vector(-20.906,
			5.228, 109.443), Vector(-20.281, 6.226, 112.447), Vector(-25.639, 5.189, 105.275), Vector(-32.487, 5.486, 110.799), Vector(
			-32.698, 6.200, 113.865), Vector(-31.983, 6.193, 118.172), Vector(-32.557, 5.975, 126.376), Vector(-26.233, 6.017, 122.403),
			Vector(-15.092, 6.221, 113.771), Vector(-11.845, 5.790, 118.647), Vector(-11.527, 5.534, 122.531), Vector(-1.970, 5.510,
			121.602), Vector(-2.264, 5.985, 116.813), Vector(-7.265, 6.214, 108.996), Vector(-0.219, 6.204, 108.697), Vector(-12.256,
			6.214, 109.278), Vector(-7.631, 6.187, 103.042), Vector(-5.482, 6.302, 99.548), Vector(-11.554, 6.302, 101.527), Vector(
			-16.427, 7.970, 63.699), Vector(-21.298, 7.980, 56.825), Vector(-27.662, 7.970, 62.615), Vector(-22.902, 7.970, 68.593),
			Vector(-22.380, 7.938, 63.189), Vector(-39.888, 11.750, 48.453), Vector(-35.548, 11.750, 44.434), Vector(-32.051, 11.750,
			44.322), Vector(-30.578, 10.565, 56.892), Vector(-34.230, 11.458, 54.471), Vector(-37.331, 11.750, 50.471), Vector(-69.532,
			4.061, 16.988), Vector(-60.928, 3.120, 26.062), Vector(-55.729, 3.059, 25.771), Vector(-53.098, 3.059, 24.147), Vector(-51.025,
			3.059, 27.236), Vector(-53.333, 3.059, 31.413), Vector(-48.663, 3.059, 34.396), Vector(-61.718, 3.410, 22.741), Vector(-59.185,
			3.059, 23.644), Vector(-57.732, 4.084, 21.403), Vector(-56.665, 5.050, 19.810), Vector(-55.620, 5.986, 18.271), Vector(-54.629,
			6.872, 16.817), Vector(-51.478, 7.059, 18.654), Vector(-53.466, 7.059, 22.836), Vector(-51.231, 7.059, 27.175), Vector(-45.086,
			7.059, 27.581), Vector(5.418, 3.597, 90.589));
		Global.Healthkits = Array(Vector(-3.424, -1.241, 3.742), Vector(5.912, 2.872, 19.910), Vector(-24.667, 2.677, -1.206), Vector(
			-4.992, 4.059, 45.590), Vector(-23.238, 2.059, 15.412), Vector(-39.343, 6.559, 7.197), Vector(-42.717, 11.059, 24.285), Vector(
			-37.666, 3.050, 57.758), Vector(-35.705, 3.050, 69.837), Vector(12.190, 5.156, 67.278), Vector(-16.864, 6.272, 84.669), Vector(
			17.849, 3.949, 88.210), Vector(-7.982, 1.339, 101.336));
		Global.Objective1_Node = Array(Vector(-36.757, 3.147, 42.370), Vector(-37.965, 3.079, 40.849), Vector(-39.285, 3.076, 39.355),
			Vector(-40.772, 3.061, 37.639), Vector(-42.138, 3.062, 35.980), Vector(-44.330, 3.062, 34.055), Vector(-46.118, 3.062, 36.096),
			Vector(-44.008, 3.062, 37.972), Vector(-42.348, 3.060, 39.474), Vector(-40.736, 3.074, 40.918), Vector(-39.129, 3.102, 42.178),
			Vector(-38.042, 3.150, 43.861), Vector(-39.465, 3.071, 45.391), Vector(-40.712, 3.063, 43.912), Vector(-42.203, 3.055, 42.529),
			Vector(-43.741, 3.216, 41.148), Vector(-45.241, 3.059, 39.342), Vector(-47.414, 3.036, 37.468), Vector(-49.234, 3.059, 39.410),
			Vector(-47.028, 3.217, 41.373), Vector(-43.751, 3.218, 44.312), Vector(-42.195, 3.054, 45.710), Vector(-40.796, 3.067, 46.961),
			Vector(-42.553, 3.075, 49.020), Vector(-43.952, 3.052, 47.813), Vector(-45.521, 3.052, 46.594), Vector(-47.086, 3.218, 45.320),
			Vector(-48.933, 3.054, 43.795), Vector(-51.140, 3.056, 41.998), Vector(-52.591, 3.053, 43.785), Vector(-50.495, 3.053, 45.606),
			Vector(-48.715, 3.053, 47.133), Vector(-47.163, 3.053, 48.476), Vector(-45.624, 3.053, 49.811), Vector(-47.072, 3.053, 51.385),
			Vector(-48.559, 3.053, 49.942), Vector(-49.917, 3.053, 48.451), Vector(-51.422, 3.053, 47.123), Vector(-53.797, 3.053,
			45.086));
		Global.Objective2_Node = Array(Vector(-15.756, 6.268, 108.684), Vector(-13.478, 6.214, 108.545), Vector(-10.715, 6.214, 108.583),
			Vector(-7.856, 6.204, 108.408), Vector(-4.389, 6.214, 108.211), Vector(-1.249, 6.202, 107.946), Vector(1.340, 6.239, 107.744),
			Vector(1.623, 6.237, 109.881), Vector(-0.996, 6.210, 110.191), Vector(-4.080, 6.215, 110.470), Vector(-7.676, 6.212, 110.799),
			Vector(-10.584, 6.212, 111.059), Vector(-13.263, 6.212, 111.296), Vector(-15.618, 6.212, 111.507), Vector(-15.358, 6.233,
			114.191), Vector(-13.097, 6.213, 113.981), Vector(-10.375, 6.213, 113.748), Vector(-3.727, 6.230, 113.351), Vector(-0.782,
			6.226, 113.091), Vector(1.847, 6.218, 112.702), Vector(2.119, 6.308, 115.769), Vector(-0.514, 6.212, 116.019), Vector(-3.513,
			6.229, 116.574), Vector(-10.114, 6.321, 116.696), Vector(-12.970, 6.081, 116.462), Vector(-15.330, 6.311, 116.864));
		Modify Global Variable(Path_Nodes, Remove From Array By Value, Null);
		Modify Global Variable(Healthkits, Remove From Array By Value, Null);
		Modify Global Variable(Objective1_Node, Remove From Array By Value, Null);
		Modify Global Variable(Objective2_Node, Remove From Array By Value, Null);
		Global.Objective1_Nest = Array(Vector(-17.579, 6.059, 30.071), Vector(-19.365, 6.059, 28.541), Vector(-22.966, 6.059, 28.166),
			Vector(-21.604, 6.059, 30.696), Vector(-18.084, 6.061, 31.607), Vector(-27.711, 7.012, 30.318), Vector(-30.247, 8.059, 28.347),
			Vector(-31.160, 8.061, 30.290), Vector(-32.585, 8.059, 26.475), Vector(-26.824, 6.059, 36.322), Vector(-23.017, 6.059, 34.931),
			Vector(-19.044, 6.059, 36.624), Vector(-46.859, 11.059, 33.115), Vector(-48.469, 11.059, 35.929), Vector(-51.861, 11.081,
			37.050), Vector(-50.895, 11.061, 34.332), Vector(-48.544, 11.061, 31.201), Vector(-57.821, 8.059, 46.152), Vector(-58.208,
			8.059, 41.771), Vector(-37.427, 3.085, 41.072), Vector(-39.700, 3.062, 37.500), Vector(-40.613, 3.076, 41.462), Vector(-41.569,
			3.063, 34.926), Vector(-43.083, 3.061, 38.099), Vector(-36.430, 3.540, 50.993), Vector(-33.706, 3.540, 49.097), Vector(-34.278,
			3.540, 52.259));
		Global.Objective2_Nest = Array(Vector(-10.646, 6.214, 108.304), Vector(-8.561, 6.159, 104.821), Vector(-5.692, 6.214, 107.195),
			Vector(-8.535, 6.214, 108.968), Vector(-8.325, 6.214, 111.972));
		Global.Objective1_Choke_Group = Array(Vector(-15.284, 2.377, 18.126), Vector(-11.322, 2.376, 20.333), Vector(-13.193, 2.248,
			23.059), Vector(-16.947, 2.341, 20.539));
		Global.Objective2_Choke_Group = Array(Vector(-8.720, 5.541, 77.344), Vector(-11.463, 5.541, 77.546), Vector(-11.736, 5.541,
			74.324), Vector(-8.559, 5.541, 74.048));
		Global.Chokepoint = Array(Vector(-9.850, 5.792, 80.802), Vector(-24.522, 2.905, 46.128), Vector(-31.984, 2.904, 27.335), Vector(
			-8.222, 2.581, 12.468));
	}
}

disabled rule("Volskaya")
{
	event
	{
		Subroutine;
		Volskaya;
	}

	actions
	{
		Global.Path_Nodes = Array(Vector(27.414, -1.430, -10.877), Vector(31.881, -1.414, -8.861), Vector(32.885, -0.426, -7.353), Vector(
			35.307, 0.570, -4.466), Vector(25.658, -0.875, -15.436), Vector(24.690, 0.101, -16.965), Vector(22.543, 0.570, -19.306),
			Vector(25.567, -2.339, -9.372), Vector(23.727, -3.266, -7.935), Vector(19.115, -3.430, -7.029), Vector(22.230, -3.430, -2.728),
			Vector(11.664, -3.430, 0.382), Vector(14.471, -3.430, 3.732), Vector(14.699, -3.430, 8.417), Vector(22.479, -3.430, 16.681),
			Vector(20.508, -3.456, 21.354), Vector(12.294, -3.430, 11.616), Vector(8.697, -3.430, 14.177), Vector(3.268, -3.430, 10.937),
			Vector(1.857, -3.430, 5.124), Vector(6.298, -3.430, 0.208), Vector(0.482, -3.428, -9.138), Vector(-4.357, -4.366, -5.393),
			Vector(-5.793, -5.318, -4.146), Vector(-11.676, -5.429, 0.889), Vector(-18.760, -5.429, 3.040), Vector(-21.062, -4.971,
			12.861), Vector(-20.263, -4.237, 17.439), Vector(-8.611, -4.224, 16.377), Vector(-4.076, -4.398, 19.473), Vector(5.244, -3.553,
			28.582), Vector(9.836, -3.284, 30.330), Vector(9.762, -2.620, 44.645), Vector(4.051, -2.832, 48.484), Vector(2.942, -2.681,
			39.472), Vector(-7.610, -2.680, 35.937), Vector(-16.961, -2.628, 36.414), Vector(-3.939, -2.680, 32.992), Vector(-8.027,
			-2.680, 29.489), Vector(-12.501, -2.628, 32.243), Vector(-12.119, -3.299, 26.815), Vector(-8.182, -3.654, 26.154), Vector(
			-4.488, -3.421, 26.550), Vector(-6.737, -4.198, 23.789), Vector(-17.288, -4.266, 23.026), Vector(-24.407, -3.485, 34.104),
			Vector(-26.350, -4.067, 25.506), Vector(-29.640, -3.079, 27.321), Vector(-31.157, -2.320, 27.789), Vector(-34.045, -1.430,
			27.837), Vector(-39.582, -1.430, 29.641), Vector(-39.076, -1.430, 34.137), Vector(-34.752, -1.430, 34.769), Vector(-36.102,
			-1.430, 44.520), Vector(-27.377, -1.665, 51.362), Vector(-24.035, -2.852, 38.069), Vector(-21.062, -2.126, 48.056), Vector(
			-8.842, -2.083, 51.688), Vector(-34.931, -1.006, 50.911), Vector(-30.317, -3.430, 6.678), Vector(-35.597, -3.430, 13.048),
			Vector(-43.004, -3.420, 17.946), Vector(-43.151, -2.428, 20.041), Vector(-43.155, -1.430, 22.931), Vector(-45.068, -1.430,
			27.828), Vector(-46.861, -0.509, 27.857), Vector(-48.688, 0.406, 27.812), Vector(-50.609, 1.365, 27.757), Vector(-53.314,
			1.570, 25.876), Vector(-49.521, 2.557, 24.699), Vector(-47.617, 3.508, 24.673), Vector(-37.508, 3.570, 31.484), Vector(-36.800,
			3.570, 37.948), Vector(-28.547, 3.563, 39.603), Vector(-25.574, -5.440, 7.101), Vector(-27.681, -4.480, 7.031), Vector(-29.503,
			-3.569, 7.128), Vector(-13.882, -1.749, 59.083), Vector(-18.960, -1.022, 61.353), Vector(-27.312, -0.431, 61.504), Vector(
			-29.990, -0.431, 55.102), Vector(-33.428, 0.213, 57.388), Vector(-33.396, 1.190, 59.341), Vector(-33.283, 2.149, 61.262),
			Vector(-33.161, 3.038, 63.042), Vector(-33.174, 3.570, 73.803), Vector(-29.789, 3.570, 70.053), Vector(-29.618, 3.647, 73.484),
			Vector(-29.774, 3.647, 76.796), Vector(-32.812, 3.658, 81.164), Vector(-27.768, -1.210, 65.839), Vector(-23.880, -1.568,
			67.878), Vector(-18.624, -1.749, 68.276), Vector(-10.463, -1.749, 69.855), Vector(-4.385, -1.561, 61.387), Vector(8.200,
			-1.430, 57.782), Vector(10.041, -0.519, 58.129), Vector(13.625, -0.430, 63.177), Vector(17.154, -0.430, 59.680), Vector(16.029,
			-0.430, 53.548), Vector(12.763, -0.430, 72.434), Vector(8.652, -1.155, 72.616), Vector(-1.985, -1.749, 73.489), Vector(-21.524,
			-1.729, 74.117), Vector(-21.985, -2.470, 83.259), Vector(-12.122, -2.441, 83.034), Vector(-1.233, -2.069, 77.713), Vector(
			-5.982, -2.422, 86.552), Vector(-1.490, -2.678, 85.267), Vector(-5.985, -2.496, 97.820), Vector(0.555, -2.155, 101.041),
			Vector(13.199, -2.431, 100.697), Vector(13.326, -2.430, 88.788), Vector(13.092, -1.493, 85.187), Vector(13.048, -0.560,
			83.324), Vector(11.232, -0.430, 80.751), Vector(8.826, 0.490, 84.215), Vector(8.688, 1.464, 86.165), Vector(8.959, 2.380,
			87.999), Vector(9.057, 3.337, 89.914), Vector(9.248, 3.570, 93.292), Vector(1.895, 3.470, 92.466), Vector(-2.446, 3.470,
			95.443), Vector(-2.646, 3.730, 91.519), Vector(-0.875, 3.470, 87.720), Vector(2.134, 3.470, 85.156), Vector(3.405, 3.629,
			102.223), Vector(-0.787, 3.745, 102.271), Vector(1.488, 3.570, 107.651), Vector(-2.600, 2.921, 107.674), Vector(-14.028, 2.570,
			106.908), Vector(-11.756, 2.570, 109.268), Vector(-16.404, 2.572, 109.223), Vector(-5.354, 2.572, 109.220), Vector(-21.352,
			2.734, 109.327), Vector(-24.403, 3.035, 107.370), Vector(-27.815, 3.570, 107.400), Vector(-27.825, 3.570, 98.466), Vector(
			-25.630, 3.619, 94.885), Vector(-25.730, 3.739, 100.670), Vector(-32.857, 3.570, 98.650), Vector(-32.793, 3.570, 93.471),
			Vector(-34.153, 3.570, 89.847), Vector(-34.120, 3.570, 84.913), Vector(-38.475, 3.570, 97.230), Vector(-38.707, 2.651, 91.202),
			Vector(-38.675, 1.734, 89.367), Vector(-38.728, 0.818, 87.537), Vector(-38.780, -0.108, 85.687), Vector(-35.121, -1.023,
			83.248), Vector(-33.398, -1.886, 82.992), Vector(-26.195, -2.313, 89.096), Vector(-30.969, -2.430, 88.744), Vector(-31.784,
			-2.430, 94.464), Vector(-31.871, -2.496, 104.348), Vector(-22.006, -2.453, 103.460), Vector(-20.520, -2.463, 97.590), Vector(
			-22.009, -1.513, 107.002), Vector(-22.432, -1.430, 117.197), Vector(-14.332, -1.421, 115.394), Vector(-6.448, -1.430, 117.760),
			Vector(-5.677, -1.910, 106.318), Vector(-7.472, -2.496, 102.167), Vector(-13.216, -2.145, 102.533), Vector(-13.671, -2.496,
			113.673), Vector(-18.629, -1.872, 113.338), Vector(-9.029, -1.859, 113.639), Vector(-11.458, 2.820, 77.646), Vector(-11.432,
			2.820, 73.925), Vector(-6.518, 2.820, 74.816), Vector(-14.983, 2.820, 74.133), Vector(-16.582, 2.820, 80.687), Vector(-11.038,
			2.820, 81.130), Vector(-5.433, 2.829, 81.280), Vector(-18.550, 3.493, 78.386), Vector(27.165, -2.496, 70.183), Vector(26.335,
			-2.496, 80.215), Vector(23.501, -2.496, 86.816), Vector(18.358, -2.430, 86.412), Vector(22.929, -2.496, 101.479), Vector(
			17.713, -0.313, 72.750), Vector(20.293, 0.664, 72.678), Vector(22.156, 1.597, 72.763), Vector(26.751, 2.570, 76.861), Vector(
			24.187, 2.570, 89.587), Vector(24.067, 2.570, 87.145), Vector(-42.591, 3.570, 97.319), Vector(-43.290, 3.417, 90.728), Vector(
			-43.233, 2.455, 88.803), Vector(-43.136, 1.557, 87.006), Vector(-43.106, 0.620, 85.134), Vector(-43.083, -0.355, 83.181),
			Vector(-43.039, -1.258, 81.377), Vector(-43.098, -2.202, 79.488), Vector(-39.044, -2.611, 72.881), Vector(-48.146, -2.377,
			78.117), Vector(-49.160, -2.491, 88.289), Vector(-52.001, -3.425, 97.925), Vector(-44.252, -3.429, 103.582), Vector(-35.421,
			-2.496, 103.709), Vector(-59.423, -2.805, 94.053), Vector(-64.304, -2.516, 91.043), Vector(-61.286, -2.430, 85.605), Vector(
			-55.635, -2.611, 76.016), Vector(-50.681, -2.611, 64.123), Vector(-45.950, -1.672, 60.850), Vector(-44.236, -1.430, 57.024),
			Vector(-50.469, -1.430, 48.442), Vector(-54.643, -1.430, 46.464), Vector(-60.676, -1.430, 55.062), Vector(-58.174, -1.759,
			57.155), Vector(-58.453, -2.611, 63.954), Vector(-65.071, -2.611, 73.381), Vector(-72.684, -2.430, 77.054), Vector(-72.353,
			-1.782, 73.187), Vector(-67.753, -1.430, 65.880), Vector(-72.919, -0.306, 62.034), Vector(-70.812, -1.118, 63.298), Vector(
			-70.866, -2.518, 87.862), Vector(-74.621, -2.474, 80.780), Vector(-76.595, -1.530, 82.752), Vector(-77.850, -0.538, 84.309),
			Vector(-76.763, 0.421, 88.490), Vector(-75.229, 1.317, 89.416), Vector(-73.600, 2.247, 90.321), Vector(-71.990, 3.154, 91.160),
			Vector(-69.413, 3.570, 92.955), Vector(-64.567, 3.570, 90.686), Vector(-61.703, 3.570, 86.465), Vector(-55.084, 3.570, 89.111),
			Vector(-49.589, 3.570, 92.694), Vector(-67.346, 3.570, 81.972), Vector(-65.118, -0.540, 53.101), Vector(-65.772, 4.070,
			52.234), Vector(-57.612, -1.430, 42.940), Vector(-70.114, -0.930, 37.522), Vector(-71.164, -0.930, 33.723), Vector(-67.720,
			-0.930, 29.147), Vector(-63.522, -0.930, 29.934), Vector(-59.719, -0.930, 33.152), Vector(-64.327, -0.928, 39.841), Vector(
			-78.440, -0.430, 49.353), Vector(-75.832, -0.430, 56.011), Vector(-71.642, -0.430, 50.749), Vector(-80.650, -0.426, 65.398),
			Vector(-82.395, -1.280, 68.208), Vector(-85.049, -2.426, 73.341), Vector(-82.327, -1.504, 68.770), Vector(-88.937, -2.430,
			78.450), Vector(-90.695, -1.456, 82.007), Vector(-91.499, -0.555, 83.037), Vector(-94.167, -0.363, 84.058), Vector(-95.775,
			0.568, 83.119), Vector(-97.308, 1.441, 82.276), Vector(-98.876, 2.351, 81.354), Vector(-100.477, 3.280, 80.402), Vector(
			-103.154, 3.570, 78.767), Vector(-100.962, 3.740, 71.803), Vector(-97.911, 3.572, 73.851), Vector(-96.376, 3.572, 68.467),
			Vector(-94.627, 3.572, 64.339), Vector(-91.831, 3.572, 60.689), Vector(-91.449, 3.572, 56.255), Vector(-87.742, 3.648, 58.282),
			Vector(-114.645, 3.570, 71.778), Vector(-110.376, 3.570, 67.612), Vector(-110.628, 3.570, 64.171), Vector(-110.902, 3.570,
			61.411), Vector(-112.917, 2.601, 60.095), Vector(-114.316, 1.764, 59.174), Vector(-111.813, 3.280, 60.890), Vector(-115.923,
			0.765, 57.964), Vector(-117.499, -0.181, 56.917), Vector(-118.235, -0.430, 53.423), Vector(-111.705, -0.312, 48.345), Vector(
			-114.968, -0.430, 49.214), Vector(-121.906, -0.430, 45.480), Vector(-125.369, -0.430, 47.922), Vector(-130.214, -0.430,
			45.053), Vector(-132.296, -0.430, 41.671), Vector(-128.938, 0.569, 38.694), Vector(-126.317, 0.569, 34.896), Vector(-127.048,
			0.569, 27.394), Vector(-120.549, 0.544, 33.474), Vector(-118.477, 0.569, 28.308), Vector(-110.779, -0.430, 26.838), Vector(
			-105.563, -0.430, 18.547), Vector(-98.086, -0.926, 23.022), Vector(-102.348, -0.930, 30.017), Vector(-99.669, -0.428, 32.314),
			Vector(-108.673, -0.930, 40.380), Vector(-101.363, -0.430, 44.968), Vector(-87.883, -0.928, 28.724), Vector(-88.885, -0.926,
			39.396), Vector(-90.959, -0.431, 43.016), Vector(-81.479, -0.930, 31.166), Vector(-77.959, -0.930, 26.831), Vector(-82.867,
			-0.167, 26.698), Vector(-82.020, 0.823, 24.896), Vector(-80.367, 1.570, 21.906), Vector(-87.032, 1.570, 17.919), Vector(
			-88.733, 2.474, 20.412), Vector(-89.712, 3.321, 21.801), Vector(-91.098, 3.570, 27.544), Vector(-93.702, 3.572, 26.169),
			Vector(-96.730, 3.572, 33.281), Vector(-88.770, 3.572, 38.644), Vector(-89.840, 3.748, 35.584), Vector(-89.765, 3.674, 40.430),
			Vector(-84.789, 3.570, 36.290), Vector(-81.440, 3.572, 43.105), Vector(-83.322, 3.572, 46.807), Vector(-83.438, 3.579, 50.769),
			Vector(-87.071, 3.579, 49.076), Vector(-100.021, 3.570, 38.536), Vector(-102.446, 3.811, 46.669), Vector(-100.670, 3.570,
			43.478), Vector(-103.527, 3.811, 41.706), Vector(-105.813, 3.687, 45.358), Vector(-102.850, 3.570, 43.959), Vector(-107.396,
			3.570, 51.111), Vector(-107.256, 3.570, 56.993), Vector(-85.044, -0.430, 51.472), Vector(-88.646, -0.430, 56.284), Vector(
			-82.544, -0.430, 64.078), Vector(-85.334, -0.430, 58.812), Vector(-80.393, -0.430, 54.047), Vector(-86.739, -0.430, 63.764),
			Vector(-88.218, -1.423, 66.176), Vector(-89.472, -2.242, 67.329), Vector(-92.247, -2.430, 67.260), Vector(-91.255, -2.430,
			71.294), Vector(-95.775, -2.430, 73.729), Vector(-98.958, -2.430, 71.734), Vector(-96.375, -2.430, 66.994), Vector(-104.341,
			-2.430, 67.574), Vector(-100.997, -2.430, 62.125), Vector(-99.738, -1.496, 60.514), Vector(-98.738, -0.572, 58.960), Vector(
			-97.045, -0.430, 56.735), Vector(-77.591, -0.430, 68.752), Vector(-84.202, -0.424, 78.688), Vector(-89.661, -0.428, 87.233),
			Vector(-71.214, 4.070, 53.689), Vector(-75.097, 4.206, 51.640), Vector(-74.899, 4.248, 48.094), Vector(-72.378, 4.230, 43.876),
			Vector(-70.052, 4.070, 40.810), Vector(-66.459, 4.176, 42.616), Vector(-62.366, 4.184, 45.114), Vector(-66.437, 4.070, 47.066),
			Vector(-70.425, 4.070, 51.319));
		Global.Healthkits = Array(Vector(17.642, -3.420, 45.698), Vector(-8.274, -2.590, 37.405), Vector(-39.747, -1.430, 24.487), Vector(
			17.803, -3.427, 45.790), Vector(-30.503, -0.430, 53.987), Vector(20.729, -0.430, 55.631), Vector(-15.867, -2.430, 78.742),
			Vector(-33.236, -2.430, 88.301), Vector(-14.167, -1.430, 117.523), Vector(-64.052, -2.430, 82.587), Vector(-65.316, 3.570,
			83.267), Vector(-73.240, -0.930, 32.520), Vector(-69.424, -0.430, 46.738), Vector(-109.919, -0.430, 55.166), Vector(-97.270,
			-0.428, 33.592), Vector(-91.576, -2.430, 63.143));
		Global.Objective1_Node = Array(Vector(-7.769, -2.289, 85.207), Vector(-7.815, -2.289, 87.377), Vector(-7.840, -2.289, 89.852),
			Vector(-7.870, -2.289, 92.546), Vector(-7.896, -2.289, 95.101), Vector(-10.586, -2.289, 95.080), Vector(-10.507, -2.289,
			92.481), Vector(-10.507, -2.298, 89.904), Vector(-10.502, -2.289, 87.292), Vector(-10.497, -2.289, 85.103), Vector(-13.432,
			-2.289, 85.104), Vector(-13.432, -2.310, 87.354), Vector(-13.432, -2.144, 89.979), Vector(-13.433, -2.160, 92.463), Vector(
			-13.413, -2.291, 94.941), Vector(-16.509, -2.291, 94.941), Vector(-16.509, -2.293, 92.276), Vector(-16.509, -2.316, 89.911),
			Vector(-16.509, -2.289, 87.247), Vector(-16.505, -2.289, 85.047), Vector(-19.485, -2.289, 85.047), Vector(-19.485, -2.289,
			87.273), Vector(-19.485, -2.289, 89.919), Vector(-19.484, -2.289, 92.403), Vector(-19.484, -2.289, 95.021));
		Global.Objective2_Node = Array(Vector(-85.259, -0.430, 47.489), Vector(-87.578, -0.430, 46.107), Vector(-90.244, -0.430, 44.475),
			Vector(-92.404, -0.430, 43.138), Vector(-94.466, -0.430, 41.875), Vector(-96.901, -0.430, 40.386), Vector(-98.394, -0.430,
			42.773), Vector(-95.954, -0.430, 44.219), Vector(-93.803, -0.430, 45.536), Vector(-91.720, -0.430, 46.812), Vector(-88.960,
			-0.430, 48.498), Vector(-86.710, -0.430, 49.878), Vector(-88.119, -0.430, 52.264), Vector(-90.392, -0.430, 50.855), Vector(
			-93.176, 0.659, 49.149), Vector(-95.257, 0.541, 47.899), Vector(-97.430, -0.430, 46.608), Vector(-99.799, -0.430, 45.150),
			Vector(-101.640, -0.430, 48.130), Vector(-99.006, -0.430, 49.694), Vector(-97.037, -0.430, 50.902), Vector(-94.790, -0.430,
			52.278), Vector(-92.267, -0.430, 53.823), Vector(-89.944, -0.430, 55.238), Vector(-91.288, -0.430, 57.447), Vector(-93.702,
			-0.430, 55.975), Vector(-96.241, -0.430, 54.421), Vector(-98.429, -0.430, 53.079), Vector(-100.506, -0.430, 51.832), Vector(
			-102.906, -0.430, 50.366), Vector(-103.862, -0.430, 51.903), Vector(-101.452, -0.430, 53.374), Vector(-99.312, -0.430, 54.687),
			Vector(-97.289, -0.430, 55.928), Vector(-94.725, -0.430, 57.466), Vector(-92.310, -0.430, 58.923));
		Modify Global Variable(Path_Nodes, Remove From Array By Value, Null);
		Modify Global Variable(Healthkits, Remove From Array By Value, Null);
		Modify Global Variable(Objective1_Node, Remove From Array By Value, Null);
		Modify Global Variable(Objective2_Node, Remove From Array By Value, Null);
		Global.Objective1_Nest = Array(Vector(-16.995, -1.203, 60.183), Vector(-13.415, -1.749, 58.558), Vector(-14.631, -1.568, 62.185),
			Vector(-18.271, -1.452, 62.904), Vector(-16.176, -1.551, 64.252), Vector(-2.624, -1.566, 65.099), Vector(-6.787, -1.749,
			63.668), Vector(-4.894, -1.749, 67.368), Vector(-8.816, -1.749, 67.714), Vector(-1.914, -1.749, 69.156));
		Global.Objective2_Nest = Array(Vector(-87.951, -0.430, 48.250), Vector(-86.373, -0.430, 51.974), Vector(-91.457, -0.430, 52.478),
			Vector(-89.253, -0.430, 56.968), Vector(-94.320, -0.430, 56.325), Vector(-94.858, -0.430, 52.817), Vector(-91.430, -0.430,
			48.302), Vector(-90.483, 3.570, 39.144), Vector(-86.405, 3.570, 41.353), Vector(-100.704, 3.570, 41.364), Vector(-101.722,
			3.570, 44.332), Vector(-103.975, 3.570, 47.592), Vector(-104.766, 3.570, 45.395), Vector(-102.964, 3.570, 41.909));
		Global.Objective1_Choke_Group = Array(Vector(-8.007, -1.649, 54.103), Vector(-8.267, -1.523, 57.462), Vector(-11.225, -1.526,
			57.341), Vector(-11.042, -1.653, 53.980));
		Global.Objective2_Choke_Group = Array(Vector(-68.613, -1.430, 63.170), Vector(-70.384, -1.430, 65.930), Vector(-67.513, -1.430,
			67.787), Vector(-65.612, -1.430, 64.844));
		Global.Chokepoint = Array(Vector(-71.849, -0.486, 62.575), Vector(-33.185, -1.932, 73.348), Vector(-8.878, -1.611, 55.079));
	}
}
